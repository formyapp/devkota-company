%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: collaboration_03.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 12/20/2018
%%BoundingBox: 0 0 600 400
%%HiResBoundingBox: 0 0 600 400
%%CropBox: 0 0 600 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 9187 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7C4FD61FF7973727372737273
%72737273727372B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7C4FD60FFA2734E73
%48734E7348734E7348734E73FD0FB7C4FD60FF794E7372734E7372734E73
%72734E7372B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2C4FD5FFFA94872487348
%7248734872487348724873B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8C4FD5FFF
%A373727372737273727372737273727372B7B7B2B7B7B7B2B7B7B7B2B7B7
%B7B2CBFD32FFCAFD2CFF794E7348734E7348734E7348734E734873FD0FB7
%FD34FFCAFFCACBFD28FF787372734E7372734E7372734E7372734EB2B7B7
%B7B2B7B7B7B2B7B7B7B2B7BDFD34FFCACABDB7C4FD27FF79487348724873
%48724873487248734872B8B7B7B7B8B7B7B7B8B7B7B7B8B7FD35FFCA9D9D
%CAA2FFFFFFCAFD23FFA373727372737273727372737273727372B2B7B7B7
%B2B7B7B7B2B7B7B7B2C4FD36FF7273CA79729CCAFD24FFA948734E734873
%4E7348734E7348734E73FD0CB7BEFD38FF72CB727378FD26FF794E737273
%4E7372734E7372734E7372B7B7B2B7B7B7B2B7B7B7B2B7CAFD37FFA973A8
%73FD28FFA2724873487248734872487348724873B7B7B8B7B7B7B8B7B7B7
%BECBFD38FFCB727972FD09FFCAFD0CC4CBFD12FF78737273727372737273
%7273727372B7B7B2B7B7B7B2B7B7C4CAFD39FFA2737273FD08FFC4B7B2BE
%C4C4BDC4BDC4BDC4B7B7B2CBFD12FF72734E7348734E7348734E734873FD
%07B7BEFD3DFF9B9C72FD08FFB8B7B7B7CBCAC4CAC4CBFFFFFD04B7FD13FF
%787372734E7372734E737273A3BEBEBDBEBECBCBFD29FFA8FD13FFCAC89F
%C9FD08FFCAFD04B7BEB7BEB7BEB7BDB2B7B7CBFD14FFA279487248734872
%4EA3CBFD30FFC4CBBEFD13FFC8C8C9FD09FFCBCBCACBCACBCACBCACBCACB
%CAFD19FFA9A3A3A3A9FD33FFC4B2C49CC4CAFD0CFFC4C4C4CAC8C7C9FD67
%FFC4B7B7B8C4C4A2FD0BFFFD04B7C2C8C2BEC4CBFD64FFC4B7C4B7B7B7C4
%A8FD09FFCAB7B2B7B7C29FC3B7B7B2B7BDC4CAFD60FFC4B7B7C5C4B7C4CB
%FD09FFCBB7B8B7B79BC8BCB7B7B8B7B7B7BEFD06FFAFFD5AFFBDB7B2BEB7
%C4A2FD09FFC4B7B2B78F9671B7B7B7B2B7B7B795FD06FFAFA9FD5AFFCABE
%B7B7C4CBFD09FFC4FD04B7B2B8B2FD05B78FB8FD06FFAFCBA9FFAFFD59FF
%C495C4A8FD09FFFD04B7B2B7B7B7B2B7B7B78E8F95FD05FFA9AF9CA9A9FF
%A9FD5AFFCBFD0AFFBEB7B7B7B8B7B7B7B8B7B78FB28FBEFD06FFAFC4BEFF
%AFFD55FFA978A3FD0EFF95FD048FB78FB7B7B78E8F8E8F95FD07FFA2C4A8
%FFA9FD53FFCB797372FD07FFCFFFCFFFCFCFFFB88FB28F8F8FB28FB78FB2
%8F8F8FBEFFA3A3FD05FFAFFFA9FD54FFA8A3A1A2A8CFC9C9A6C8C8C8A5C8
%C8C8A6FF958F8E8F8E8F8E8F8F8F8E8F8E8F957948724EA3CBFD04FFAFA9
%FD53FFCBA2CB72C9C8CDC8CDC8CDC8CDC8CDC8CDFFBE8FB28F8F8FB28FB7
%8FB28F8F8F73727372737273A3FD56FFC9C87773727278FD0BC8A5FF958F
%8E8F8E8F8E8F8F8F8E8F8F7248734E7348734E7372CBFD51FFCFCEC8CDC8
%9C727972CAC8CDC8C8C8CDC8C8C8CDC8C8FFBE8F8F8FB28F8F8FB78F8F8F
%7372734E7372734E7372734ECBFD4EFFCFA6C8C8C8A5C8A1A27273C3A053
%C8C8C8A5C8C8C8A5C89FFF958F8E8F8E8F8E8F8F8F6B7248734872487348
%724873487248A3FD48FFCAFD04FFC7CDC8CDC8CDC8C9A2C472787278C8CD
%C8CDC8CDC8CDC8C7FFBE8F8F8FB28F8F8FB78F7372737273727372737273
%7273727372A2FD45FFCABDB7B7C3FFFFC7C7FD05C8A073A2CA72734DFD05
%C8C7C8A5C89FFF958F8E8F8E8F8E8F8E8F727972734E7348734E7348734E
%7348734E9DFD43FFC3FD05B795A3C1C7C7FD04C8CD9AA97E7954C8C7C8C7
%C7C1C7C0C79EC7FFB78FB28F8F8FB28F8F8F9D79A3727372734E7372734E
%7372734E7372A2C9FD41FFC48EB7B2B78E9548729AC79EC7C7C8A5C89977
%719599C09EC19EC09EC09EC09FFF8F8F8E8F8E8F8E8F8E8F729DA9FF7E73
%4872487348724873487248734EC9C9CBFD3FFFC48F8FB78F8F8E734E9BFD
%05C7CDC8C8C1B88FC19EC9C1C69EC6C0C79EC9FFB78FB28F8F8FB28F8F8F
%9D79FFA9FFAFA372737273727372737273727378CFB7CB78FD3DFFC48E8F
%8E8F8E95484E76C79FC7C1C79FC79EC1B28F9EC0C2C0522874C1C2C0A6FF
%8F8F8E8F8E8F8E8F8E8F729DA9AFA9AFAFA948734E7348734E7348734E73
%A8B7C4737ECECAC4FD39FFA1B28F8F8FBDC29C48A3A6C7C1C7C7C7C0C6C1
%B794C69E73742F53C79EC99ECFFFB88F8F8FB28F8F48728F9D79FFAFFFA9
%FFFF794E7372734E7372734E7372A3CACB72A3C8CAB7CBFD38FFC48E8F94
%C2A5C8C8A177AFA8C79EC7C1C79E9F762E74C8727853A8A9A2A8AFAFFFA9
%AFA9A9A29C959C4D9C789D7EAFA9FFA9FF78724873487248734872487378
%FFFFA3A2C8C3B7CAFD38FFA1B28FBCC7CDC8CD9FC3AFFFA9CFC7C7C1C69E
%5384FFAF9D729D799D72FFAFFFFFFFAFFFA9FFAFA3C4A2A3A3799DA3AFA9
%FFFF9D727372737273727372737279FD04FFC9CAB7CBFD38FFC48E8F99C7
%C1C89EC0A0FFAFAFA9AFA7C7A7AFA9AFA9AF787372734EA9AFFFFFFFAFFF
%AFAFA9AF729DA279A99D729D79A3A9FF797348734E7348734E7348734EFD
%05FFCABECAFD38FFC48F8FBCC7C79EC69EC9FD04FFA9FFAFAFA9FFAFFFFF
%A372734EFD0CFF73727372CBAFAF799D799DA39D72734E7372734E737273
%4E73FD40FFCA8E8F93C7C1C19EC0A6FD05FFA9AFA9FFAFFFFFFF7E737272
%FD0BFFCA78737279A2AFA9AF7E9D729D72734872487348724873487248FD
%40FFAFFF9BC2C7C7C7C6C0C8FD0DFFA973734EFD09FFCAFFCAA973739CCB
%FFFFA9FFA99D799D727372737273727372737273FD41FFA9AFA8C9C7C79E
%C9FD0EFFA2734E72FD07FFC4B7B7C3CBA27372A2CAFFFFFFA9AFA99D4873
%4E7348734E7348734E7348FD42FFAFAFA9FFA6AFA9FD0EFFCF9B78A2FD07
%FFBDB7B7B8BECA7279A2C5A3FFFFFFAFFF79734E7372734E7372734E7372
%73FD43FFA9AFA9AFA9FD0FFFC9C8A5CEFD07FFCBB78F8FCBC9C8A1A39CA3
%FD04FF7E7348724873487248734872487348FD46FFAFFD10FFCF9FCDC9FD
%07FFBDB78FB7BECFC7A3799D9DFFFFFFA979727372737273727372737273
%4E73FD3FFFCBA34879A3FD13FFC9C8C8CEFD07FFBEB7B78EC4CFC8789DA3
%FD04FFA94E73727348734E7348734E73484E48FD3FFFCB72737273FD13FF
%CEC8CEC8FD07FFBDB7958F9CFFC8C9C9FD05FFA97372737273727372734E
%7372734873FD3FFFA29D724E48FD06FFCFC9CEC8C8A6CECAFD05FFA6C8C8
%C9A9FD06FFBEB2B78EC4FFC89FCEFD05FFCB727372737273487348724872
%484E48FD3FFFCB799D4873FD05FFCEC8CDC8CDC8CDC8C9C2FFFFFFAFC97C
%CEC9FD07FFBDB8958F9CFFC8C8CFFD05FFA9737279737372797273727348
%734873FD3FFFA29D794E48FD04FFA8C8C8C8C79EC19FBCB7B7B7FFFFFF7E
%AFA6A02FFD06FFBEB2B78EC4847CA6CFFD05FFCB72737273727372737272
%484E484E4EFD3FFFCA799D4872FD04FF4E78719B9EC69EC0FD04B7C4FFFF
%FFA9847EFD07FFBDB78FB29CA9842FAFFD05FFA979727372797273727972
%72487348A3FD3FFFA29D724E48FD04FF73487348999EC79EB7B2B7B2CAFD
%0DFFBEB7958EC4AFFFA8FD06FFCB72737273727372737273484E484EA9FD
%40FF789D48A3FD04FF73737273727379B7B7B8B7B7C4FD0DFFBEB795B2C4
%FFFFC4BDCBFD04FFA97973737279737372797273487378FD41FFAF78A9A9
%FD04FF9D72737273487372B78F8F8ECAFD0EFFA295A2FFFFBEB2B7B7C4FF
%FFFFCB72737273727372737273484E48A9FD49FFA39D799D799D72968F8F
%8FB7FD08FFC9CECFFD05FFAFFFFFFFBDB7B7B29CFD05FFA99D7373727972
%734E7348A3A9FD4AFF789D729D7273718F8E95A8FD06FFCFA6C8C8C8A6FD
%08FFBEB7958EC4FD04FFA9AFA9AF7879727372724879A9FD4CFFA9A9A3A3
%79BE95CBA9FD07FFCFC7C8C89ECEFD08FFBDB795B2BEFD05FFAFFFAFFFA9
%A979797279AFFD4CFFA9AFA9AFA9AFA9AFA9AFFD08FFA8C89EC9FD0AFFBD
%959BFD09FFA9AFA9AFA9A3A9FD4EFFAFAFA9FFAFAFA9FD0BFFA9FD0DFFAF
%FD0DFFA9FFAFFD52FFA9FFAFFD29FFA9FDFCFFFDFCFFFD2FFFCDC8CECFFD
%7CFFFD05C8CFFD2CFFA8847EA87E7EA87E7E7E84A87EA8597E7EA8A8FF59
%8459A984A8A8A8FD32FFCDC8C8C8CDC8CFFD2BFF7E28537E5A2F7E2F5953
%2F592F532F2F5353A9FF53FD04592F597EFD32FFA5C8C8C8A5C8C8CEFD2A
%FF8429287E537E537E53592F532F5328532F5984FF2F7E2F532853067EFD
%2EFFC4CBCACBCDC8CDC8CDC8CDC8FD2AFFAF2F842FA82F842F7E59A8535A
%597E7E537E7EFF7E7E7E535A7E5984FD2BFFC4BEB7B8B7B7B7FD09C8FD29
%FFAFFD07FFAFFD05FFA8FD05FFAFFD05FFA9FD2AFFC4FD04B7B2B7B7B7C8
%C8CDC8C8C8CDC8C8CFFD28FFAF7E847E857E8484857EA97EA97EA984857E
%8484A984A984A97E8484FD28FFC4FD09B7C8C8A5C8C8C8A5C8C8CEFD28FF
%A8FFA8FFA8AFA8FFA8FFA8A9A8AFA8AFA8FFA8A9A8FFA8A9A8AFA8A9FD27
%FFBEB2B7B7B7B2B7B7B7B2B7CDC8CDC8CDC8CDC8CDC9FD29FF84A9A88584
%8584A984A97EA984857EA97E857EA9A885A88584A9FD27FFCBB7B8B7B7B7
%B8B7B7B7B8B7FD09C8A172A9FD28FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFAFFD27FFB7B7B2B7B7B7B2B7B7B7B2B7CDC8C8C8CD
%C8C8C8CDA0734EA3FD66FFC4FD0CB7A5C8C8C8A5C8C8C8A5A1487248A3FD
%65FFB7B2B7B7B7B2B7B7B7B2B7B7B7CDC8CDC8CDC8CDC8CD7773727372FD
%65FFB7B8B7B7B7B8B7B7B7B8B7B7B7FD09C8734E734873A3FD63FFCAB7B2
%B7B7B7B2B7B7B7B2B7B7B7C8C8CDC8C8C8CDC8A14E7372734EA3FD63FFCB
%FD0DB7C8C8A5C8C8C8A5C84E724873487278FD63FFC4B7B7B7B2B7B7B7B2
%B7B7B7B2B7CDC8CDC8CDC8C972737273727372CBFD63FFCBB7B7B7B8B7B7
%B7B8B7B7B7B8B7C9CFA1CAA1A7A2A3A2A37EA3A2A3A9FD64FFFD0DC4FDFC
%FFFFFFFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 3 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">600_450_clean</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-12-20T16:42:56+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-12-20T16:42:56+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-12-20T16:42:56+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>252</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD8AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AnflXydZ+X/M1vceaNTsr&#xA;KSzrcRWLTAysVBKOeiqoI5Deu3TM+czKPpBe17Z9p8M8JxYruQ3J226/qen6f538v6tepaaJeQaq&#xA;9Ga4+rTRt6KKVBdwWBp8Xap6bb1zGOGURctnhhkBO27F/wA8/MGtaH5Vt77R7p7W4N5FG80ZO0ZV&#xA;nPICoILIo6e3c5tew9PDLlImOIcJ2c3RwjLJR5UmP5S+btc8y+Vob3WoAl0xYQ3KKFjnjjohegJ4&#xA;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&#xA;V//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:569f1e0a-0024-ac40-aaf4-6d3f881d41df</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:569f1e0a-0024-ac40-aaf4-6d3f881d41df</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:48254ff5-b6c2-6e4a-aca1-2227babf54e8</stRef:instanceID>
            <stRef:documentID>xmp.did:48254ff5-b6c2-6e4a-aca1-2227babf54e8</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65093837-8c70-274d-a0b6-73be46bbcfe1</stEvt:instanceID>
                  <stEvt:when>2018-07-04T15:37:19+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:254258aa-7d0d-c94e-83d9-a2bc49954f99</stEvt:instanceID>
                  <stEvt:when>2018-09-27T09:50:25+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:569f1e0a-0024-ac40-aaf4-6d3f881d41df</stEvt:instanceID>
                  <stEvt:when>2018-12-20T16:42:56+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
600 400 li
600 0 li
cp
clp
441.773 75.564 mo
382.723 75.564 li
378.173 75.564 374.483 71.8755 374.483 67.3247 cv
374.483 62.7739 378.173 59.0845 382.723 59.0845 cv
441.773 59.0845 li
446.323 59.0845 450.013 62.7739 450.013 67.3247 cv
450.013 71.8755 446.323 75.564 441.773 75.564 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 .912535 0 0 cmyk
f
394.242 70.9937 mo
394.242 64.9741 li
393.076 64.9741 li
393.076 64.0386 li
396.638 64.0386 li
396.638 64.9741 li
395.51 64.9741 li
395.51 70.9937 li
394.242 70.9937 li
cp
0 0 0 0 cmyk
f
398.458 67.0083 mo
398.764 67.0083 li
399.139 67.0083 399.405 66.9292 399.563 66.77 cv
399.721 66.6099 399.8 66.3374 399.8 65.9517 cv
399.8 65.5796 399.731 65.313 399.595 65.1528 cv
399.458 64.9917 399.206 64.9116 398.84 64.9116 cv
398.458 64.9116 li
398.458 67.0083 li
cp
397.191 70.9937 mo
397.191 64.0386 li
398.785 64.0386 li
399.151 64.0386 399.466 64.0688 399.729 64.1294 cv
399.991 64.189 400.221 64.2896 400.415 64.4312 cv
400.609 64.5728 400.755 64.7642 400.851 65.0054 cv
400.947 65.2476 400.995 65.5435 400.995 65.8931 cv
400.995 66.3296 400.931 66.686 400.801 66.9624 cv
400.671 67.2397 400.456 67.4409 400.156 67.5669 cv
401.121 70.9937 li
399.851 70.9937 li
399.02 67.8179 li
398.458 67.8179 li
398.458 70.9937 li
397.191 70.9937 li
cp
f
402.921 70.9937 mo
402.921 68.3472 li
401.504 64.0386 li
402.687 64.0386 li
403.546 66.8071 li
404.368 64.0386 li
405.539 64.0386 li
404.129 68.3472 li
404.129 70.9937 li
402.921 70.9937 li
cp
f
408.277 70.9937 mo
408.277 64.0386 li
409.527 64.0386 li
409.527 70.9937 li
408.277 70.9937 li
cp
f
411.276 70.9937 mo
411.276 64.9741 li
410.11 64.9741 li
410.11 64.0386 li
413.672 64.0386 li
413.672 64.9741 li
412.544 64.9741 li
412.544 70.9937 li
411.276 70.9937 li
cp
f
416.323 70.9937 mo
416.323 64.0386 li
417.195 64.0386 li
418.898 67.978 li
418.898 64.0386 li
419.947 64.0386 li
419.947 70.9937 li
419.116 70.9937 li
417.396 66.854 li
417.396 70.9937 li
416.323 70.9937 li
cp
f
422.563 70.0835 mo
422.651 70.1196 422.757 70.1382 422.88 70.1382 cv
423.003 70.1382 423.107 70.1196 423.194 70.0835 cv
423.402 69.9409 li
423.454 69.8823 423.494 69.8052 423.523 69.7104 cv
423.553 69.6147 423.572 69.52 423.582 69.4253 cv
423.592 69.3296 423.597 69.2163 423.597 69.0854 cv
423.597 65.9263 li
423.597 65.7583 423.589 65.6187 423.572 65.5073 cv
423.555 65.395 423.522 65.2896 423.474 65.1899 cv
423.424 65.0913 423.351 65.0171 423.253 64.9683 cv
423.155 64.9194 423.03 64.895 422.88 64.895 cv
422.729 64.895 422.604 64.9194 422.504 64.9683 cv
422.405 65.0171 422.332 65.0913 422.284 65.1899 cv
422.236 65.2896 422.204 65.395 422.188 65.5073 cv
422.171 65.6187 422.162 65.7583 422.162 65.9263 cv
422.162 69.0854 li
422.162 69.2163 422.167 69.3296 422.177 69.4253 cv
422.187 69.52 422.206 69.6147 422.235 69.7104 cv
422.266 69.8052 422.305 69.8823 422.355 69.9409 cv
422.563 70.0835 li
cp
422.88 71.0776 mo
422.164 71.0776 421.65 70.8833 421.34 70.4946 cv
421.03 70.106 420.875 69.5366 420.875 68.7876 cv
420.875 66.2202 li
420.875 65.8511 420.909 65.5308 420.979 65.2593 cv
421.05 64.9888 421.162 64.7534 421.317 64.5552 cv
421.473 64.356 421.68 64.2075 421.94 64.1079 cv
422.2 64.0093 422.514 63.9595 422.88 63.9595 cv
423.593 63.9595 424.105 64.1509 424.417 64.5337 cv
424.729 64.9175 424.885 65.479 424.885 66.2202 cv
424.885 68.7876 li
424.885 69.1509 424.849 69.4702 424.777 69.7456 cv
424.706 70.021 424.593 70.2603 424.438 70.4634 cv
424.283 70.6655 424.075 70.8188 423.815 70.9224 cv
423.555 71.0259 423.243 71.0776 422.88 71.0776 cv
cp
f
426.566 70.9937 mo
425.572 64.0386 li
426.638 64.0386 li
427.208 68.5229 li
427.95 64.0386 li
428.802 64.0386 li
429.562 68.5269 li
430.132 64.0386 li
431.176 64.0386 li
430.182 70.9937 li
429.171 70.9937 li
428.387 66.3501 li
427.606 70.9937 li
426.566 70.9937 li
cp
f
0 72.1196 mo
3.41602 72.7046 6.92578 73.0132 10.5078 73.0132 cv
44.6533 73.0132 72.333 45.3335 72.333 11.188 cv
72.333 7.36768 71.9844 3.62842 71.3213 -.000488281 cv
0 -.000488281 li
0 72.1196 li
cp
0 .912535 0 0 cmyk
f
37.8262 360.022 mo
21.3447 360.022 7.98438 373.382 7.98438 389.863 cv
7.98438 393.422 8.61035 396.834 9.75391 400 cv
65.8975 400 li
67.041 396.834 67.667 393.422 67.667 389.863 cv
67.667 373.382 54.3066 360.022 37.8262 360.022 cv
cp
.634821 .805264 0 0 cmyk
f
27.8955 400 mo
38.3584 391.744 45.083 378.96 45.083 364.598 cv
45.083 339.7 24.8984 319.515 0 319.515 cv
0 400 li
27.8955 400 li
cp
.0114137 .138521 .731472 0 cmyk
f
600 337.661 mo
582.936 334.232 564.544 339.512 551.865 353.23 cv
539.799 366.286 535.758 383.897 539.498 400 cv
600 400 li
600 337.661 li
cp
0 .912535 0 0 cmyk
f
522.25 30.521 mo
522.25 55.9946 542.901 76.646 568.375 76.646 cv
580.62 76.646 591.742 71.8657 600 64.0806 cv
600 -.000488281 li
533.806 -.000488281 li
526.619 8.1333 522.25 18.814 522.25 30.521 cv
cp
.634821 .805264 0 0 cmyk
f
415.937 153.72 mo
410.254 150.44 li
410.254 157 li
415.937 160.281 li
415.937 153.72 li
cp
0 .912535 0 0 cmyk
f
424.912 153.483 mo
419.23 150.202 li
419.23 162.183 li
424.912 165.463 li
424.912 153.483 li
cp
.0114137 .138521 .731472 0 cmyk
f
433.888 162.087 mo
428.206 158.807 li
428.206 167.365 li
433.888 170.645 li
433.888 162.087 li
cp
f
442.864 164.798 mo
437.182 161.517 li
437.182 172.547 li
442.864 175.828 li
442.864 164.798 li
cp
f
451.84 170.646 mo
446.158 167.365 li
446.158 177.729 li
451.84 181.01 li
451.84 170.646 li
cp
0 .912535 0 0 cmyk
f
460.815 173.219 mo
455.134 169.938 li
455.134 182.912 li
460.815 186.192 li
460.815 173.219 li
cp
.634821 .805264 0 0 cmyk
f
469.792 177.017 mo
464.109 173.736 li
464.109 188.094 li
469.792 191.375 li
469.792 177.017 li
cp
.0114137 .138521 .731472 0 cmyk
f
478.768 178.698 mo
473.085 175.417 li
473.085 193.276 li
478.768 196.556 li
478.768 178.698 li
cp
0 .912535 0 0 cmyk
f
290.653 289.822 mo
281.997 284.825 li
273.341 289.822 li
281.997 294.82 li
290.653 289.822 li
cp
.147219 .0154116 0 0 cmyk
f
281.997 290.184 mo
281.997 284.553 li
292.339 278.582 li
292.339 284.213 li
281.997 290.184 li
cp
.0860304 .38764 1 0 cmyk
f
281.997 284.553 mo
271.655 278.582 li
271.655 284.213 li
281.997 290.184 li
281.997 284.553 li
cp
.021149 .25864 .925139 0 cmyk
f
292.339 278.582 mo
281.997 272.611 li
271.655 278.582 li
281.997 284.553 li
292.339 278.582 li
cp
.0114137 .138521 .731472 0 cmyk
f
301.747 193.015 mo
305.444 161.293 li
327.436 162.604 349.031 166.615 368.617 173.338 cv
338.788 200.082 li
327.209 196.287 314.606 193.932 301.747 193.015 cv
cp
.147219 .0154116 0 0 cmyk
f
301.747 181.108 mo
305.444 149.385 li
327.436 150.697 349.031 154.707 368.617 161.43 cv
338.788 188.173 li
327.209 184.378 314.606 182.024 301.747 181.108 cv
cp
.139773 1 .00201419 0 cmyk
f
301.747 113.856 mo
338.05 115.48 li
338.788 120.922 li
338.788 188.173 li
310.539 177.489 li
301.747 181.108 li
301.747 113.856 li
cp
f
368.617 94.1792 mo
368.617 161.43 li
338.788 188.173 li
338.788 120.922 li
368.617 94.1792 li
cp
f
301.747 113.856 mo
305.444 82.1343 li
327.436 83.4448 349.031 87.4556 368.617 94.1792 cv
338.788 120.922 li
327.209 117.127 314.606 114.773 301.747 113.856 cv
cp
0 .912535 0 0 cmyk
f
338.788 122.363 mo
327.243 118.58 314.566 116.208 301.747 115.285 cv
301.747 116.292 li
314.606 117.208 327.209 119.563 338.788 123.358 cv
368.617 96.6147 li
368.617 96.3823 368.617 95.9204 368.617 95.6216 cv
338.788 122.363 li
cp
f
290.49 192.393 mo
266.264 192.244 241.968 197.133 222.722 207.075 cv
183.809 184.608 li
214.785 167.959 254.661 159.987 294.186 160.685 cv
290.49 192.393 li
cp
.147219 .0154116 0 0 cmyk
f
290.49 180.668 mo
266.264 180.518 241.968 185.409 222.722 195.35 cv
183.809 172.883 li
214.785 156.235 254.661 148.262 294.186 148.96 cv
290.49 180.668 li
cp
.0860304 .38764 1 0 cmyk
f
290.49 180.668 mo
290.49 157.453 li
294.186 125.745 li
294.186 148.96 li
290.49 180.668 li
cp
f
222.722 172.134 mo
266.065 133.168 li
290.49 157.453 li
290.49 180.668 li
227.455 180.265 li
222.722 195.35 li
222.722 172.134 li
cp
f
183.809 149.667 mo
183.809 172.883 li
222.722 195.35 li
222.722 172.134 li
183.809 149.667 li
cp
.021149 .25864 .925139 0 cmyk
f
290.49 157.453 mo
266.264 157.302 241.968 162.193 222.722 172.134 cv
183.809 149.667 li
214.785 133.019 254.661 125.046 294.186 125.745 cv
290.49 157.453 li
cp
.0114137 .138521 .731472 0 cmyk
f
290.49 158.716 mo
266.264 158.566 241.968 163.457 222.722 173.398 cv
183.809 150.926 li
183.809 151.137 183.809 151.827 183.809 152.036 cv
222.722 174.502 li
241.968 164.561 266.264 159.671 290.49 159.821 cv
294.186 127.681 li
294.107 127.68 li
290.49 158.716 li
cp
f
374.668 280.154 mo
398.462 257.874 393.659 228.299 360.206 208.984 cv
356.441 206.811 352.447 204.852 348.276 203.097 cv
378.074 176.381 li
385.458 179.358 392.514 182.723 399.103 186.527 cv
451.698 216.893 458.6 263.633 419.866 298.318 cv
374.668 280.154 li
cp
.147219 .0154116 0 0 cmyk
f
374.668 268.752 mo
398.462 246.472 393.659 216.897 360.206 197.583 cv
356.441 195.41 352.447 193.451 348.276 191.696 cv
378.074 164.98 li
385.458 167.958 392.514 171.322 399.103 175.126 cv
451.698 205.492 458.6 252.232 419.866 286.917 cv
374.668 268.752 li
cp
.474891 .687251 0 0 cmyk
f
348.276 150.37 mo
348.276 191.696 li
374.668 201.501 li
374.668 201.501 408.944 182.792 408.944 182.356 cv
408.944 181.919 403.159 142.295 398.927 140.515 cv
394.693 138.736 348.276 150.37 348.276 150.37 cv
cp
f
374.668 268.752 mo
374.668 227.426 li
419.866 245.59 li
419.866 286.917 li
374.668 268.752 li
cp
.587366 .778347 0 0 cmyk
f
419.866 219.666 mo
419.866 286.917 li
419.866 286.917 443.456 267.032 444.519 240.645 cv
444.463 197.476 li
417.012 193.501 li
419.866 219.666 li
cp
.70544 .83624 0 0 cmyk
f
374.668 227.426 mo
398.462 205.146 393.659 175.571 360.206 156.256 cv
356.441 154.083 352.447 152.125 348.276 150.37 cv
378.074 123.654 li
385.458 126.63 392.514 129.996 399.103 133.799 cv
451.698 164.166 458.6 210.906 419.866 245.59 cv
374.668 227.426 li
cp
.634821 .805264 0 0 cmyk
f
419.866 247.181 mo
374.668 229.012 li
374.668 229.363 374.668 229.732 374.668 230.086 cv
419.866 248.25 li
436.434 233.415 444.645 216.374 444.509 199.352 cv
444.299 216.017 436.087 232.656 419.866 247.181 cv
cp
f
389.492 199.634 mo
389.913 184.539 380.159 169.368 360.206 157.847 cv
356.685 155.815 352.156 153.647 348.276 151.981 cv
348.276 153.03 li
352.447 154.785 356.441 156.744 360.206 158.917 cv
379.688 170.166 389.434 184.893 389.492 199.634 cv
cp
f
337.168 104.583 mo
332.906 107.043 325.996 107.043 321.734 104.583 cv
317.472 102.123 317.472 98.1323 321.733 95.6724 cv
325.996 93.2114 332.906 93.2114 337.168 95.6724 cv
341.431 98.1333 341.431 102.123 337.168 104.583 cv
cp
0 .988281 .0270695 0 cmyk
f
330.106 96.728 mo
329.982 97.0396 327.832 99.6567 325.683 100.311 cv
324.747 100.596 324.119 100.633 323.707 100.583 cv
323.294 100.535 323.038 100.109 323.178 99.7163 cv
323.548 98.6753 324.608 96.5054 327.303 95.1704 cv
330.948 93.3628 330.106 96.728 330.106 96.728 cv
cp
.587366 .778347 0 0 cmyk
f
330.823 97.7339 mo
330.823 97.7339 330.014 99.6343 329.765 101.223 cv
329.612 102.193 330.145 103.452 330.582 104.287 cv
330.854 104.804 331.543 104.92 331.977 104.528 cv
332.679 103.89 333.573 102.783 333.722 101.192 cv
333.971 98.5122 333.722 98.0454 333.722 98.0454 cv
330.823 97.7339 li
cp
f
336.003 65.3452 mo
336.003 65.3452 336.283 68.7261 336.003 72.4644 cv
335.723 76.2036 334.719 93.6899 334.531 97.896 cv
334.531 97.896 334.625 99.1704 332.159 98.8901 cv
329.694 98.6089 329.893 97.1958 329.893 97.1958 cv
329.893 97.1958 326.43 97.1489 326.321 95.1079 cv
326.212 93.0669 322.774 70.7358 322.774 62.7075 cv
336.003 65.3452 li
cp
.0114137 .138521 .731472 0 cmyk
f
329.893 97.1958 mo
329.893 97.1958 329.464 97.189 328.903 97.0933 cv
328.226 69.9116 li
329.893 97.1958 li
cp
.134188 .51693 .984039 .0105287 cmyk
f
332.341 40.5415 mo
337.935 42.8608 337.822 46.1675 337.822 46.1675 cv
337.822 46.1675 336.727 58.2886 337.101 66.3843 cv
337.257 69.7681 319.12 70.0269 321.825 60.9976 cv
325.015 50.353 323.818 41.7349 325.312 40.4351 cv
326.805 39.1353 330.895 39.9419 332.341 40.5415 cv
cp
.587366 .778347 0 0 cmyk
f
334.141 43.4731 mo
333.848 44.6089 332.36 45.2075 330.817 44.8101 cv
329.274 44.4126 328.261 43.1704 328.553 42.0347 cv
328.846 40.8989 330.334 40.3003 331.877 40.6978 cv
333.419 41.0952 334.433 42.3384 334.141 43.4731 cv
cp
0 .286015 .250584 0 cmyk
f
330.92 40.8413 mo
329.881 40.8413 329.012 41.3247 328.812 42.1011 cv
328.557 43.0923 329.486 44.1909 330.884 44.5513 cv
332.283 44.9136 333.626 44.3979 333.882 43.4067 cv
334.137 42.4155 333.207 41.3169 331.811 40.9565 cv
331.508 40.8784 331.207 40.8413 330.92 40.8413 cv
cp
331.761 45.1987 mo
331.434 45.1987 331.093 45.1567 330.751 45.0688 cv
329.067 44.6353 327.966 43.2446 328.294 41.9683 cv
328.622 40.6909 330.264 40.0073 331.943 40.439 cv
333.626 40.8726 334.728 42.2632 334.399 43.5396 cv
334.138 44.5571 333.045 45.1987 331.761 45.1987 cv
cp
0 0 0 0 cmyk
f
330.099 40.2896 mo
330.099 40.2896 330.146 40.5142 330.05 42.2866 cv
330.02 42.8433 331.971 43.3638 332.475 42.8599 cv
332.979 42.355 332.777 41.8306 332.898 39.9341 cv
333.02 38.0386 330.099 40.2896 330.099 40.2896 cv
cp
0 .286015 .250584 0 cmyk
f
332.898 39.9341 mo
332.898 39.9341 332.418 41.6929 330.05 42.3677 cv
330.085 40.769 li
332.898 39.9341 li
cp
.0520027 .456916 .352453 0 cmyk
f
334.399 35.4673 mo
334.994 37.769 333.61 40.1177 331.309 40.7134 cv
329.006 41.3081 326.657 39.9243 326.063 37.6226 cv
325.467 35.3208 326.851 32.9712 329.152 32.3765 cv
331.455 31.7808 333.804 33.1646 334.399 35.4673 cv
cp
0 .286015 .250584 0 cmyk
f
331.22 36.7026 mo
331.22 36.7026 328.849 37.7183 327.207 37.73 cv
325.566 37.7417 325.928 36.3667 325.928 36.3667 cv
330.8 35.6626 li
331.22 36.7026 li
cp
.0520027 .456916 .352453 0 cmyk
f
326.718 36.9702 mo
326.718 36.9702 328.783 36.0933 330.595 36.4595 cv
331.021 36.5454 331.415 36.7729 331.689 37.1099 cv
331.779 37.2202 331.893 37.3208 332.021 37.3491 cv
332.342 37.4224 332.868 36.0894 333.492 36.0591 cv
334.116 36.0288 334.533 36.4712 334.021 37.2905 cv
333.51 38.1099 333.683 39.0278 333.918 39.1587 cv
334.153 39.2905 336.652 37.3765 334.448 33.0112 cv
332.244 28.645 326.646 30.9966 325.775 31.8813 cv
325.775 31.8813 324.857 32.6802 324.111 31.9692 cv
324.111 31.9692 323.275 38.2329 326.718 36.9702 cv
cp
0 .912535 0 0 cmyk
f
322.575 39.5493 mo
319.567 38.2524 li
319.223 38.104 318.957 37.8169 318.835 37.4624 cv
315.864 28.855 li
314.488 29.0942 li
316.889 39.8052 li
317.001 40.3052 317.32 40.7339 317.767 40.9849 cv
322.774 43.7974 li
322.575 39.5493 li
cp
0 .286015 .250584 0 cmyk
f
353.868 40.9487 mo
354.559 40.6323 li
355.146 40.3628 355.683 39.9927 356.143 39.5386 cv
356.623 39.064 li
356.894 38.7964 356.975 38.3911 356.826 38.0405 cv
356.711 37.7661 356.388 37.6479 356.122 37.7817 cv
354.681 38.5093 li
354.681 38.5093 354.906 37.8716 354.798 37.7056 cv
354.689 37.5396 353.574 38.771 353.059 39.644 cv
352.542 40.5171 353.868 40.9487 353.868 40.9487 cv
cp
f
341.864 44.3921 mo
344.438 44.104 li
345.046 44.0366 345.634 43.8462 346.167 43.5444 cv
353.059 39.644 li
353.868 40.9487 li
346.822 46.3901 li
346.604 46.5581 346.366 46.6978 346.113 46.8052 cv
341.911 48.6021 li
341.864 44.3921 li
cp
f
314.488 29.0942 mo
314.226 28.7915 li
313.924 28.4429 313.728 28.0151 313.66 27.5581 cv
313.477 26.3032 li
313.419 25.9126 313.572 25.5151 313.89 25.2808 cv
313.925 25.2563 li
314.258 25.0259 314.723 25.1929 314.877 25.5669 cv
315.496 27.062 li
315.496 27.062 315.301 26.2876 315.551 26.2017 cv
315.734 26.1392 316.082 27.1001 315.876 27.6343 cv
315.671 28.1694 315.864 28.855 315.864 28.855 cv
314.488 29.0942 li
cp
f
328.522 39.5093 mo
327.41 39.2036 li
327.41 39.2036 327.941 40.0386 328.716 40.2515 cv
329.491 40.4644 329.611 39.8091 329.611 39.8091 cv
328.522 39.5093 li
cp
0 0 0 0 cmyk
f
326.855 39.8159 mo
326.855 39.8159 321.831 38.8237 320.297 38.3579 cv
318.763 37.8911 318.121 42.106 318.238 43.1733 cv
318.354 44.2417 323.579 45.4341 324.2 47.2651 cv
324.821 49.0972 326.855 39.8159 326.855 39.8159 cv
cp
.587366 .778347 0 0 cmyk
f
334.537 41.6655 mo
334.537 41.6655 338.209 43.2417 344.354 44.0093 cv
344.604 44.0405 344.818 44.2056 344.901 44.4438 cv
345.138 45.1245 345.542 46.6099 345.227 48.1382 cv
345.097 48.7681 344.525 49.2095 343.883 49.2056 cv
341.959 49.1919 337.818 49.3765 337.146 51.1753 cv
336.267 53.5308 334.537 41.6655 334.537 41.6655 cv
cp
f
332.377 44.979 mo
331.37 46.0718 li
331.239 46.2134 331.177 46.4058 331.199 46.5972 cv
331.891 52.5835 li
331.91 52.7505 331.864 52.9194 331.762 53.0542 cv
329.595 55.8882 li
329.499 56.0132 329.301 55.979 329.253 55.8286 cv
328.074 52.1167 li
328.029 51.9761 328.033 51.8237 328.086 51.686 cv
330.161 46.2495 li
330.206 46.1313 330.217 46.0015 330.19 45.8765 cv
329.887 44.436 li
332.377 44.979 li
cp
0 0 0 0 cmyk
f
227.942 119.926 mo
227.942 119.926 228.647 123.761 231.701 124.649 cv
234.754 125.537 234.511 128.236 234.511 128.236 cv
234.511 128.236 236.045 123.82 233.325 121.485 cv
230.605 119.149 227.94 119.567 227.94 119.567 cv
227.942 119.926 li
cp
.70544 .83624 0 0 cmyk
f
224.789 121.672 mo
224.789 122.462 224.148 123.103 223.358 123.103 cv
222.568 123.103 221.929 122.462 221.929 121.672 cv
221.929 120.882 222.568 120.242 223.358 120.242 cv
224.148 120.242 224.789 120.882 224.789 121.672 cv
cp
.587366 .778347 0 0 cmyk
f
229.13 119.538 mo
229.13 120.328 228.489 120.968 227.699 120.968 cv
226.91 120.968 226.27 120.328 226.27 119.538 cv
226.27 118.748 226.91 118.108 227.699 118.108 cv
228.489 118.108 229.13 118.748 229.13 119.538 cv
cp
f
234.412 183.354 mo
234.412 183.354 235.934 182.586 236.868 183.729 cv
237.803 184.872 239.139 187.57 239.181 189.392 cv
239.222 191.215 237.737 191.092 236.855 190.661 cv
235.974 190.229 233.396 186.492 233.241 185.759 cv
233.085 185.027 233.425 184.037 233.673 183.842 cv
233.921 183.649 234.412 183.354 234.412 183.354 cv
cp
1 .866484 .240818 .0951247 cmyk
f
234.08 182.987 mo
234.01 184.564 li
233.994 184.899 234.163 185.218 234.455 185.384 cv
234.721 185.535 235.107 185.65 235.629 185.566 cv
236.775 185.382 236.878 185.054 236.96 183.478 cv
237.041 181.902 234.08 182.987 234.08 182.987 cv
cp
.0114137 .138521 .731472 0 cmyk
f
239.982 180.323 mo
239.982 180.323 241.504 179.555 242.438 180.698 cv
243.373 181.84 244.709 184.538 244.751 186.361 cv
244.792 188.183 243.309 188.06 242.426 187.629 cv
241.544 187.198 238.968 183.459 238.812 182.727 cv
238.655 181.995 238.995 181.004 239.243 180.811 cv
239.491 180.618 239.982 180.323 239.982 180.323 cv
cp
1 .866484 .240818 .0951247 cmyk
f
239.65 179.956 mo
239.58 181.532 li
239.565 181.868 239.733 182.187 240.025 182.352 cv
240.291 182.503 240.678 182.619 241.199 182.535 cv
242.346 182.351 242.448 182.023 242.53 180.447 cv
242.612 178.871 239.65 179.956 239.65 179.956 cv
cp
.0114137 .138521 .731472 0 cmyk
f
226.071 151.01 mo
226.522 143.682 234.008 152.088 234.008 152.088 cv
239.132 157.111 li
243.746 162.179 li
244.646 163.168 245.066 164.505 244.892 165.833 cv
243.025 180.044 li
242.933 180.746 242.333 181.263 241.625 181.258 cv
241.425 181.256 241.195 181.239 240.934 181.198 cv
239.269 180.938 239.392 179.355 239.392 179.355 cv
239.732 166.063 li
230.043 160.222 li
230.043 160.222 225.621 158.338 226.071 151.01 cv
cp
.139773 1 .00201419 0 cmyk
f
236.03 163.55 mo
237.408 163.044 li
237.44 163.044 239.752 165.281 239.732 166.063 cv
238.695 166.396 li
236.091 163.868 li
236.03 163.55 li
cp
.0860304 .38764 1 0 cmyk
f
228.024 166.151 mo
228.024 166.151 222.267 162.863 221.577 161.485 cv
221.308 160.945 220.888 160.38 222.568 159.565 cv
233.528 167.699 li
231.5 168.291 li
228.024 166.151 li
cp
f
220.501 153.838 mo
220.981 146.512 228.438 154.917 228.438 154.917 cv
233.562 159.939 li
238.175 165.007 li
239.076 165.997 239.495 167.333 239.321 168.661 cv
237.455 182.873 li
237.362 183.574 236.762 184.091 236.055 184.086 cv
235.854 184.084 235.625 184.067 235.363 184.026 cv
233.698 183.766 233.82 182.183 233.82 182.183 cv
234.162 168.891 li
224.473 163.05 li
224.473 163.05 220.063 160.537 220.501 153.838 cv
cp
0 .912535 0 0 cmyk
f
224.93 130.278 mo
219.255 132.631 219.368 135.986 219.368 135.986 cv
219.368 135.986 220.479 148.286 220.101 156.5 cv
219.941 159.933 238.345 160.196 235.601 151.035 cv
232.364 140.233 233.577 131.488 232.063 130.169 cv
230.548 128.85 226.398 129.669 224.93 130.278 cv
cp
.587366 .778347 0 0 cmyk
f
223.104 133.252 mo
223.4 134.405 224.91 135.012 226.477 134.609 cv
228.042 134.206 229.07 132.945 228.773 131.792 cv
228.477 130.64 226.967 130.033 225.401 130.436 cv
223.836 130.839 222.808 132.1 223.104 133.252 cv
cp
0 .286015 .250584 0 cmyk
f
226.37 130.582 mo
226.076 130.582 225.771 130.621 225.469 130.699 cv
224.051 131.064 223.108 132.179 223.367 133.185 cv
223.488 133.657 223.86 134.04 224.415 134.262 cv
224.999 134.498 225.705 134.526 226.409 134.346 cv
227.827 133.981 228.77 132.866 228.511 131.86 cv
228.389 131.388 228.017 131.005 227.462 130.783 cv
227.13 130.649 226.759 130.582 226.37 130.582 cv
cp
225.508 135.005 mo
225.05 135.005 224.608 134.925 224.213 134.766 cv
223.494 134.476 223.007 133.963 222.842 133.32 cv
222.508 132.025 223.626 130.613 225.334 130.173 cv
226.146 129.966 226.975 130 227.664 130.279 cv
228.384 130.569 228.87 131.082 229.036 131.725 cv
229.37 133.02 228.252 134.432 226.544 134.872 cv
226.197 134.96 225.848 135.005 225.508 135.005 cv
cp
0 0 0 0 cmyk
f
227.206 130.022 mo
227.206 130.022 227.156 130.25 227.255 132.048 cv
227.286 132.614 225.306 133.142 224.794 132.629 cv
224.282 132.118 224.487 131.585 224.364 129.662 cv
224.241 127.738 227.206 130.022 227.206 130.022 cv
cp
0 .286015 .250584 0 cmyk
f
224.364 129.662 mo
224.364 129.662 224.852 131.446 227.255 132.13 cv
227.219 130.508 li
224.364 129.662 li
cp
.0520027 .456916 .352453 0 cmyk
f
222.842 125.128 mo
222.238 127.464 223.642 129.848 225.978 130.452 cv
228.313 131.056 230.697 129.652 231.301 127.316 cv
231.905 124.98 230.501 122.596 228.165 121.993 cv
225.829 121.388 223.445 122.792 222.842 125.128 cv
cp
0 .286015 .250584 0 cmyk
f
226.068 126.382 mo
226.068 126.382 228.474 127.413 230.139 127.424 cv
231.805 127.436 231.438 126.042 231.438 126.042 cv
226.493 125.328 li
226.068 126.382 li
cp
.0520027 .456916 .352453 0 cmyk
f
230.636 126.654 mo
230.636 126.654 228.54 125.764 226.702 126.135 cv
226.27 126.222 225.869 126.454 225.591 126.795 cv
225.5 126.907 225.386 127.009 225.255 127.039 cv
224.929 127.113 224.396 125.76 223.762 125.729 cv
223.128 125.699 222.705 126.147 223.225 126.979 cv
223.744 127.81 223.569 128.741 223.33 128.875 cv
223.091 129.008 220.556 127.067 222.792 122.636 cv
225.028 118.207 230.709 120.592 231.593 121.49 cv
231.695 121.569 li
232.899 122.416 233.529 123.89 233.112 125.302 cv
232.787 126.402 232.086 127.186 230.636 126.654 cv
cp
.587366 .778347 0 0 cmyk
f
222.552 144.972 mo
222.552 148.295 li
222.552 148.676 222.712 149.04 222.994 149.295 cv
229.821 155.52 li
229.046 156.707 li
220.029 150.167 li
219.608 149.863 219.337 149.393 219.282 148.875 cv
218.673 143.08 li
222.552 144.972 li
cp
0 .286015 .250584 0 cmyk
f
219.849 134.324 mo
219.849 134.324 217.777 137.439 217.006 145.638 cv
217.006 145.638 220.544 146.783 222.552 146.133 cv
224.561 145.483 219.849 134.324 219.849 134.324 cv
cp
.587366 .778347 0 0 cmyk
f
222.931 138.262 mo
222.931 138.262 223.741 142.602 223.787 144.642 cv
223.8 145.203 223.457 145.708 222.931 145.899 cv
222.931 138.262 li
cp
.70544 .83624 0 0 cmyk
f
224.701 159.842 mo
226.211 159.643 li
235.951 154.019 li
236.264 153.838 236.81 153.861 237.17 154.07 cv
244.072 158.053 li
244.984 157.932 li
244.984 158.84 li
244.983 158.841 li
244.989 158.96 244.922 159.076 244.774 159.161 cv
233.735 165.535 li
233.423 165.714 232.877 165.692 232.517 165.484 cv
225 161.145 li
224.797 161.028 224.695 160.877 224.701 160.736 cv
224.701 159.842 li
cp
1 .866484 .240818 .0951247 cmyk
f
232.021 156.289 mo
232.713 155.889 li
240.321 155.889 li
244.072 158.053 li
244.984 157.932 li
244.984 158.84 li
244.983 158.841 li
244.989 158.96 244.922 159.076 244.774 159.161 cv
233.735 165.535 li
233.57 165.629 233.34 165.667 233.106 165.652 cv
232.021 156.289 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
244.579 157.986 mo
244.984 157.932 li
244.984 158.84 li
244.983 158.841 li
244.989 158.96 244.922 159.076 244.774 159.161 cv
244.579 159.273 li
244.579 157.986 li
cp
.657221 .328313 0 0 cmyk
f
233.624 165.585 mo
233.328 165.698 232.904 165.673 232.589 165.522 cv
232.589 163.976 li
233.624 163.976 li
233.624 165.585 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
233.735 164.626 mo
244.774 158.253 li
245.086 158.073 245.047 157.757 244.687 157.549 cv
237.17 153.211 li
236.81 153.003 236.264 152.98 235.951 153.161 cv
224.912 159.534 li
224.6 159.714 224.639 160.03 225 160.238 cv
232.517 164.576 li
232.877 164.784 233.423 164.807 233.735 164.626 cv
cp
0 0 0 0 cmyk
f
233.922 163.661 mo
243.101 158.361 li
243.36 158.211 243.328 157.949 243.028 157.776 cv
239 155.511 li
238.7 155.337 238.246 155.319 237.986 155.469 cv
228.808 160.768 li
228.548 160.918 228.581 161.18 228.881 161.353 cv
232.908 163.619 li
233.208 163.792 233.662 163.81 233.922 163.661 cv
cp
.147219 .0154116 0 0 cmyk
f
236.743 153.001 mo
236.857 153.763 li
236.954 154.413 236.938 155.074 236.808 155.716 cv
236.672 156.388 li
236.595 156.766 236.295 157.06 235.915 157.129 cv
235.618 157.183 235.338 156.975 235.305 156.675 cv
235.122 155.046 li
235.122 155.046 234.706 155.592 234.505 155.592 cv
234.304 155.592 234.729 153.961 235.185 153.039 cv
235.64 152.116 236.743 153.001 236.743 153.001 cv
cp
0 .286015 .250584 0 cmyk
f
233.001 140.896 mo
234.186 143.241 li
234.466 143.794 234.631 144.4 234.67 145.02 cv
235.185 153.039 li
236.743 153.001 li
237.45 143.997 li
237.472 143.718 237.459 143.439 237.41 143.165 cv
236.602 138.597 li
233.001 140.896 li
cp
f
234.108 165.239 mo
235.034 164.031 li
244.769 158.395 li
245.08 158.214 245.333 157.73 245.332 157.314 cv
245.324 149.344 li
245.884 148.614 li
245.357 148.309 li
245.357 148.31 li
245.257 148.245 245.123 148.247 244.976 148.332 cv
233.944 154.718 li
233.632 154.899 233.38 155.383 233.38 155.799 cv
233.39 164.479 li
233.39 164.713 233.47 164.875 233.596 164.942 cv
234.108 165.239 li
cp
1 .866484 .240818 .0951247 cmyk
f
240.84 160.668 mo
241.532 160.268 li
245.328 153.674 li
245.324 149.344 li
245.884 148.614 li
245.357 148.309 li
245.357 148.31 li
245.257 148.245 245.123 148.247 244.976 148.332 cv
233.944 154.718 li
233.779 154.814 233.632 154.995 233.528 155.205 cv
240.84 160.668 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
245.636 148.938 mo
245.884 148.614 li
245.357 148.309 li
245.357 148.31 li
245.257 148.245 245.123 148.247 244.976 148.332 cv
244.781 148.444 li
245.636 148.938 li
cp
.657221 .328313 0 0 cmyk
f
233.844 154.79 mo
233.599 154.99 233.409 155.369 233.383 155.718 cv
234.461 156.34 li
234.978 155.444 li
233.844 154.79 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
234.47 155.023 mo
245.501 148.636 li
245.813 148.456 246.066 148.646 246.067 149.063 cv
246.076 157.742 li
246.077 158.158 245.824 158.642 245.512 158.823 cv
234.48 165.209 li
234.169 165.39 233.915 165.2 233.915 164.783 cv
233.905 156.104 li
233.905 155.688 234.157 155.204 234.47 155.023 cv
cp
.587366 .778347 0 0 cmyk
f
229.046 156.707 mo
229.223 157.073 li
229.426 157.495 229.746 157.849 230.145 158.095 cv
231.24 158.77 li
231.581 158.981 232.013 158.998 232.358 158.796 cv
232.396 158.774 li
232.744 158.555 232.775 158.055 232.489 157.761 cv
231.344 156.583 li
231.344 156.583 231.987 157.077 232.168 156.878 cv
232.3 156.733 231.544 156.023 230.963 156 cv
230.383 155.976 229.821 155.52 229.821 155.52 cv
229.046 156.707 li
cp
0 .286015 .250584 0 cmyk
f
231.949 130.152 mo
231.949 130.152 236.146 134.719 237.84 138.91 cv
237.84 138.91 236.404 141.496 232.891 142.51 cv
229.377 143.525 231.949 130.152 231.949 130.152 cv
cp
.587366 .778347 0 0 cmyk
f
233.682 142.24 mo
233.001 135.667 li
234.604 141.825 li
234.318 141.974 234.009 142.112 233.682 142.24 cv
cp
.70544 .83624 0 0 cmyk
f
228.805 129.23 mo
229.933 128.92 li
229.933 128.92 229.395 129.767 228.608 129.984 cv
227.822 130.2 227.699 129.534 227.699 129.534 cv
228.805 129.23 li
cp
0 0 0 0 cmyk
f
222.819 121.784 mo
222.819 121.784 223.864 125.541 221.508 127.675 cv
219.151 129.809 220.552 132.13 220.552 132.13 cv
220.552 132.13 217.239 128.832 218.662 125.541 cv
220.085 122.25 222.664 121.46 222.664 121.46 cv
222.819 121.784 li
cp
.508171 .67599 0 0 cmyk
f
382.715 175.829 mo
361.068 163.332 li
360.641 163.084 360.253 163.076 359.95 163.242 cv
359.951 163.228 li
357.852 164.441 li
357.852 164.441 358.781 164.78 359.327 164.98 cv
359.327 180.744 li
359.327 182.026 360.106 183.516 361.068 184.071 cv
381.758 196.016 li
381.758 197.866 li
383.879 196.644 li
383.867 196.64 li
384.226 196.421 384.456 195.942 384.456 195.251 cv
384.456 179.157 li
384.456 177.875 383.677 176.384 382.715 175.829 cv
cp
.147219 .0154116 0 0 cmyk
f
380.576 197.8 mo
358.931 185.303 li
357.969 184.749 357.188 183.258 357.188 181.976 cv
357.188 165.881 li
357.188 164.598 357.969 164.009 358.931 164.564 cv
380.576 177.062 li
381.538 177.617 382.318 179.107 382.318 180.389 cv
382.318 196.484 li
382.318 197.767 381.538 198.356 380.576 197.8 cv
cp
f
380.576 177.062 mo
358.931 164.564 li
358.384 164.249 357.901 164.313 357.582 164.655 cv
357.815 164.635 358.073 164.69 358.351 164.85 cv
379.997 177.347 li
380.958 177.903 381.738 179.392 381.738 180.675 cv
381.738 196.77 li
381.738 197.324 381.587 197.738 381.345 197.997 cv
381.919 197.949 382.318 197.397 382.318 196.484 cv
382.318 180.389 li
382.318 179.107 381.538 177.617 380.576 177.062 cv
cp
0 0 0 0 cmyk
f
366.21 179.757 mo
366.21 180.689 365.556 181.066 364.749 180.6 cv
363.942 180.134 363.289 179.002 363.289 178.071 cv
363.289 177.139 363.942 176.762 364.749 177.228 cv
365.556 177.693 366.21 178.826 366.21 179.757 cv
cp
f
370.634 182.312 mo
370.634 183.243 369.98 183.621 369.174 183.155 cv
368.367 182.689 367.713 181.556 367.713 180.625 cv
367.713 179.694 368.367 179.316 369.174 179.782 cv
369.98 180.248 370.634 181.38 370.634 182.312 cv
cp
f
375.059 184.866 mo
375.059 185.797 374.404 186.175 373.598 185.709 cv
372.792 185.244 372.138 184.111 372.138 183.179 cv
372.138 182.249 372.792 181.871 373.598 182.336 cv
374.404 182.802 375.059 183.935 375.059 184.866 cv
cp
f
188.996 219.046 mo
173.353 210.014 li
157.709 219.046 li
173.353 228.078 li
188.996 219.046 li
cp
.147219 .0154116 0 0 cmyk
f
173.353 210.014 mo
157.709 200.982 li
142.064 210.014 li
157.709 219.046 li
173.353 210.014 li
cp
f
175.708 202.342 mo
175.708 175.292 li
188.996 167.621 li
188.996 194.67 li
175.708 202.342 li
cp
.70544 .83624 0 0 cmyk
f
175.708 175.292 mo
162.42 167.621 li
162.42 194.67 li
175.708 202.342 li
175.708 175.292 li
cp
.474891 .687251 0 0 cmyk
f
188.996 167.621 mo
175.708 159.95 li
162.42 167.621 li
175.708 175.292 li
188.996 167.621 li
cp
.634821 .805264 0 0 cmyk
f
188.996 204.9 mo
175.708 197.228 li
175.708 202.342 li
188.996 210.014 li
188.996 204.9 li
cp
.451545 0 .836393 0 cmyk
f
162.42 210.014 mo
162.42 169.097 li
175.708 161.425 li
175.708 202.342 li
162.42 210.014 li
cp
.172946 .892424 1 .0698253 cmyk
f
162.42 169.097 mo
149.132 161.425 li
149.132 202.342 li
162.42 210.014 li
162.42 169.097 li
cp
.0920424 .8215 .999756 .0120546 cmyk
f
175.708 161.425 mo
162.42 153.753 li
149.132 161.425 li
162.42 169.097 li
175.708 161.425 li
cp
.0108949 .772579 .92517 0 cmyk
f
162.42 210.014 mo
162.42 169.097 li
175.708 161.425 li
175.708 202.342 li
162.42 210.014 li
cp
.139773 1 .00201419 0 cmyk
f
162.42 169.097 mo
149.132 161.425 li
149.132 202.342 li
162.42 210.014 li
162.42 169.097 li
cp
f
175.708 161.425 mo
162.42 153.753 li
149.132 161.425 li
162.42 169.097 li
175.708 161.425 li
cp
0 .912535 0 0 cmyk
f
175.708 217.686 mo
175.708 194.67 li
188.996 186.999 li
188.996 210.014 li
175.708 217.686 li
cp
.0860304 .38764 1 0 cmyk
f
175.708 194.67 mo
162.42 186.999 li
162.42 210.014 li
175.708 217.686 li
175.708 194.67 li
cp
.021149 .25864 .925139 0 cmyk
f
188.996 186.999 mo
175.708 179.327 li
162.42 186.999 li
175.708 194.67 li
188.996 186.999 li
cp
.0114137 .138521 .731472 0 cmyk
f
219.216 287.095 mo
214.922 289.574 207.961 289.574 203.667 287.095 cv
199.373 284.616 199.373 280.597 203.667 278.118 cv
207.96 275.639 214.922 275.639 219.216 278.118 cv
223.51 280.597 223.51 284.617 219.216 287.095 cv
cp
228.354 272.841 mo
219.013 267.449 203.868 267.449 194.527 272.841 cv
185.187 278.234 185.188 286.978 194.528 292.372 cv
203.869 297.764 219.014 297.764 228.354 292.372 cv
237.695 286.978 237.695 278.235 228.354 272.841 cv
cp
.147219 .0154116 0 0 cmyk
f
191 265.433 mo
199.532 265.566 li
200.163 264.745 201.06 263.974 202.227 263.3 cv
206.919 260.591 214.297 260.382 219.408 262.668 cv
224.479 257.9 li
232.285 258.022 li
231.899 257.769 231.503 257.521 231.085 257.279 cv
220.235 251.015 202.646 251.015 191.797 257.279 cv
189.802 258.431 188.177 259.715 186.916 261.082 cv
191 265.433 li
cp
.0860304 .38764 1 0 cmyk
f
232.285 245.631 mo
232.285 258.022 li
224.479 257.9 li
224.479 245.51 li
232.285 245.631 li
cp
.021149 .25864 .925139 0 cmyk
f
219.408 250.278 mo
219.408 262.668 li
224.479 257.9 li
224.479 245.51 li
219.408 250.278 li
cp
.0860304 .38764 1 0 cmyk
f
199.532 253.176 mo
199.532 265.566 li
210.756 256.419 li
219.408 262.668 li
219.408 250.278 li
211.441 246.414 li
211.441 246.414 200.474 249.771 199.903 249.914 cv
199.334 250.056 199.532 253.176 199.532 253.176 cv
cp
f
191 253.042 mo
191 265.433 li
199.532 265.566 li
199.532 253.176 li
191 253.042 li
cp
f
186.916 248.692 mo
186.916 261.082 li
191 265.433 li
191 253.042 li
186.916 248.692 li
cp
.021149 .25864 .925139 0 cmyk
f
191 253.042 mo
199.532 253.176 li
200.163 252.354 201.06 251.583 202.227 250.91 cv
206.919 248.201 214.297 247.992 219.408 250.278 cv
224.479 245.51 li
232.285 245.631 li
231.899 245.379 231.503 245.13 231.085 244.889 cv
220.235 238.625 202.646 238.625 191.797 244.888 cv
189.802 246.041 188.177 247.325 186.916 248.692 cv
191 253.042 li
cp
.0114137 .138521 .731472 0 cmyk
f
221.978 251.802 mo
221.978 263.192 li
229.363 261.422 li
229.363 261.422 228.93 254.758 228.772 254.58 cv
228.615 254.402 221.978 251.802 221.978 251.802 cv
cp
.139773 1 .00201419 0 cmyk
f
216.389 263.192 mo
216.389 275.583 li
217.187 276.432 li
222.394 273.43 li
222.394 273.43 221.586 263.972 221.491 263.782 cv
221.396 263.592 216.389 263.192 216.389 263.192 cv
cp
f
226.443 259.994 mo
221.978 264.193 li
225.697 267.135 225.258 271.284 220.656 273.941 cv
219.396 274.668 217.941 275.215 216.389 275.583 cv
221.004 280.5 li
216.915 284.345 li
222.107 283.746 227.061 282.286 231.086 279.962 cv
240.412 274.578 241.713 266.319 235.004 260.126 cv
226.443 259.994 li
cp
f
216.915 271.955 mo
216.915 284.345 li
227.04 280.435 li
239.217 268.817 li
239.172 255.661 li
226.288 265.873 li
216.915 271.955 li
cp
f
226.443 247.603 mo
221.978 251.802 li
225.697 254.745 225.258 258.894 220.656 261.55 cv
219.396 262.278 217.941 262.825 216.389 263.192 cv
221.004 268.109 li
216.915 271.955 li
222.107 271.355 227.061 269.896 231.086 267.572 cv
240.412 262.187 241.713 253.928 235.004 247.737 cv
226.443 247.603 li
cp
0 .912535 0 0 cmyk
f
216.882 280.435 mo
212.813 276.101 li
209.037 276.331 205.121 275.612 202.227 273.941 cv
199.237 272.214 198.006 269.859 198.529 267.613 cv
188.842 267.462 li
185.117 263.494 li
181.859 269.085 184.082 275.507 191.798 279.961 cv
197.467 283.235 204.977 284.794 212.403 284.646 cv
216.882 280.435 li
cp
.474891 .687251 0 0 cmyk
f
212.403 272.256 mo
212.403 284.646 li
183.668 268.722 li
183.668 256.326 li
187.863 258.022 li
212.403 272.256 li
cp
f
216.882 268.044 mo
216.882 280.435 li
212.403 284.646 li
212.403 272.256 li
216.882 268.044 li
cp
.587366 .778347 0 0 cmyk
f
216.882 268.044 mo
212.813 263.711 li
209.037 263.941 205.121 263.221 202.227 261.55 cv
199.237 259.825 198.006 257.468 198.529 255.223 cv
188.842 255.072 li
185.117 251.104 li
181.859 256.695 184.082 263.117 191.798 267.572 cv
197.467 270.844 204.977 272.404 212.403 272.256 cv
216.882 268.044 li
cp
.634821 .805264 0 0 cmyk
f
343.376 48.0913 mo
342.276 48.2192 339.579 48.4517 337.505 48.6245 cv
336.315 48.7231 335.526 49.8696 335.827 51.0239 cv
336.933 55.27 335.469 62.0972 335.732 64.4067 cv
336.049 67.1724 334.373 68.2407 334.364 68.2466 cv
336.019 67.8892 337.14 67.2358 337.101 66.3843 cv
336.871 61.4116 337.195 54.9253 337.48 50.6567 cv
338.688 49.3374 342.192 49.1919 343.903 49.2056 cv
344.557 49.2104 345.105 48.7437 345.233 48.104 cv
345.393 47.3071 345.355 46.5278 345.253 45.8657 cv
345.253 45.9087 345.252 47.8735 343.376 48.0913 cv
cp
.70544 .83624 0 0 cmyk
f
424.142 131.732 mo
399.35 117.418 li
398.74 117.067 398.247 116.124 398.247 115.311 cv
398.247 95.8052 li
398.247 94.9927 398.74 94.6196 399.35 94.9712 cv
424.142 109.285 li
424.751 109.636 425.244 110.581 425.244 111.392 cv
425.244 130.899 li
425.244 131.71 424.751 132.084 424.142 131.732 cv
cp
.147219 .0154116 0 0 cmyk
f
406.847 118.559 mo
406.672 118.458 li
406.026 118.084 405.502 117.083 405.502 116.222 cv
405.502 106.926 li
405.502 106.065 406.026 105.669 406.672 106.042 cv
406.847 106.143 li
407.493 106.516 408.017 107.517 408.017 108.378 cv
408.017 117.674 li
408.017 118.536 407.493 118.932 406.847 118.559 cv
cp
0 .912535 0 0 cmyk
f
411.833 121.438 mo
411.658 121.336 li
411.012 120.963 410.488 119.962 410.488 119.101 cv
410.488 113.661 li
410.488 112.798 411.012 112.403 411.658 112.776 cv
411.833 112.876 li
412.479 113.25 413.003 114.25 413.003 115.112 cv
413.003 120.553 li
413.003 121.415 412.479 121.811 411.833 121.438 cv
cp
f
416.819 124.316 mo
416.645 124.215 li
415.998 123.842 415.475 122.841 415.475 121.98 cv
415.475 109.03 li
415.475 108.167 415.998 107.772 416.645 108.145 cv
416.819 108.246 li
417.465 108.619 417.989 109.62 417.989 110.481 cv
417.989 123.432 li
417.989 124.293 417.465 124.689 416.819 124.316 cv
cp
0 0 0 0 cmyk
f
306.711 270.479 mo
316.076 265.073 li
325.44 270.479 li
316.076 275.886 li
306.711 270.479 li
cp
.147219 .0154116 0 0 cmyk
f
316.076 270.479 mo
316.076 230.831 li
306.711 225.424 li
306.711 265.073 li
316.076 270.479 li
cp
0 .912535 0 0 cmyk
f
316.076 230.831 mo
325.44 225.424 li
325.44 265.073 li
316.076 270.479 li
316.076 230.831 li
cp
.139773 1 .00201419 0 cmyk
f
306.711 225.424 mo
316.076 220.018 li
325.44 225.424 li
316.076 230.831 li
306.711 225.424 li
cp
0 .912535 0 0 cmyk
f
309.982 225.424 mo
316.076 221.907 li
322.169 225.424 li
316.076 228.942 li
309.982 225.424 li
cp
.139773 1 .00201419 0 cmyk
f
316.076 225.386 mo
316.076 220.572 li
306.711 215.166 li
306.711 219.979 li
316.076 225.386 li
cp
0 .912535 0 0 cmyk
f
316.076 220.572 mo
325.44 215.166 li
325.44 219.979 li
316.076 225.386 li
316.076 220.572 li
cp
.139773 1 .00201419 0 cmyk
f
306.711 215.166 mo
316.076 209.758 li
325.44 215.166 li
316.076 220.572 li
306.711 215.166 li
cp
0 .912535 0 0 cmyk
f
330.229 258.292 mo
334.13 260.543 340.453 260.543 344.354 258.292 cv
348.254 256.04 348.254 252.389 344.354 250.137 cv
340.453 247.885 334.13 247.885 330.229 250.137 cv
326.329 252.389 326.329 256.04 330.229 258.292 cv
cp
.147219 .0154116 0 0 cmyk
f
342.938 184.509 mo
342.938 184.509 342.681 189.802 342.277 193.36 cv
341.875 196.917 333.307 190.627 333.307 190.627 cv
333.307 186.578 li
342.938 184.509 li
cp
.743191 .853178 0 0 cmyk
f
338.374 250.373 mo
338.245 250.694 336.025 253.397 333.805 254.072 cv
332.84 254.366 332.19 254.404 331.766 254.354 cv
331.339 254.303 331.075 253.863 331.219 253.458 cv
331.601 252.382 332.696 250.143 335.478 248.763 cv
339.242 246.897 338.374 250.373 338.374 250.373 cv
cp
1 .866484 .240818 .0951247 cmyk
f
339.113 251.411 mo
339.113 251.411 338.277 253.373 338.02 255.014 cv
337.862 256.015 338.412 257.315 338.864 258.177 cv
339.145 258.711 339.856 258.832 340.304 258.426 cv
341.029 257.768 341.953 256.624 342.105 254.982 cv
342.363 252.214 342.105 251.732 342.105 251.732 cv
339.113 251.411 li
cp
f
344.462 217.967 mo
344.462 217.967 344.751 221.458 344.462 225.319 cv
344.172 229.179 343.136 247.235 342.942 251.579 cv
342.942 251.579 343.039 252.894 340.493 252.604 cv
337.947 252.315 338.152 250.855 338.152 250.855 cv
338.152 250.855 334.577 250.806 334.465 248.699 cv
334.352 246.591 330.803 223.534 330.803 215.245 cv
344.462 217.967 li
cp
.0114137 .138521 .731472 0 cmyk
f
329.48 199.92 mo
327.729 202.634 li
321.707 209.907 li
321.707 209.907 321.914 210.582 322.664 210.758 cv
323.25 210.896 328.313 206.065 330.501 203.945 cv
331.082 203.381 331.179 202.485 330.731 201.81 cv
329.48 199.92 li
cp
0 .286015 .250584 0 cmyk
f
332.897 188.785 mo
332.897 188.785 330.115 188.712 329.146 192.734 cv
328.178 196.755 327.42 201.791 328.263 202.209 cv
330.791 203.465 332.392 201.996 332.392 201.996 cv
332.897 188.785 li
cp
.634821 .805264 0 0 cmyk
f
332.064 188.956 mo
332.539 188.757 333.072 188.731 333.566 188.874 cv
335.938 189.554 344.851 192.169 346.319 193.425 cv
348.017 194.876 343.774 203.028 343.835 205.701 cv
343.896 208.374 344.198 211.525 344.434 214.43 cv
344.67 217.335 344.989 218.928 342.613 220.164 cv
340.236 221.399 336.179 221.457 333.142 219.142 cv
330.104 216.828 330.655 215.244 330.782 213.564 cv
330.908 211.883 331.942 204.617 331.853 202.554 cv
331.853 202.554 330.782 201.766 329.99 200.414 cv
329.197 199.062 330.598 196.577 331.179 194.96 cv
331.76 193.345 330.851 191.498 331.03 190.179 cv
331.123 189.5 331.557 189.167 332.064 188.956 cv
cp
.587366 .778347 0 0 cmyk
f
334.914 191.735 mo
334.726 193.204 336.073 194.585 337.922 194.822 cv
339.771 195.059 341.424 194.061 341.611 192.593 cv
341.8 191.125 340.453 189.743 338.604 189.505 cv
336.754 189.269 335.103 190.267 334.914 191.735 cv
cp
0 0 0 0 cmyk
f
335.869 191.857 mo
335.735 192.907 336.697 193.895 338.02 194.064 cv
339.342 194.233 340.521 193.52 340.656 192.47 cv
340.791 191.421 339.828 190.433 338.506 190.264 cv
337.185 190.094 336.004 190.808 335.869 191.857 cv
cp
0 .286015 .250584 0 cmyk
f
337.184 188.412 mo
337.184 188.412 338.792 187.088 339.108 187.759 cv
339.424 188.429 339.685 191.305 339.685 191.305 cv
336.489 192.164 li
336.975 189.25 li
336.975 189.25 336.335 188.708 337.184 188.412 cv
cp
f
332.189 185.26 mo
332.345 187.89 334.603 189.897 337.233 189.742 cv
339.863 189.586 341.87 187.328 341.715 184.698 cv
341.56 182.067 339.301 180.061 336.671 180.216 cv
334.04 180.372 332.034 182.629 332.189 185.26 cv
cp
f
339.331 188.592 mo
339.359 188.743 339.387 188.904 339.412 189.069 cv
339.092 190.728 336.607 191.455 336.607 191.455 cv
336.975 189.25 li
336.975 189.25 336.673 188.995 336.759 188.739 cv
337.74 188.429 338.978 188.155 339.331 188.592 cv
cp
.0520027 .456916 .352453 0 cmyk
f
332.189 185.26 mo
332.345 187.89 334.603 189.897 337.233 189.742 cv
339.863 189.586 341.87 187.328 341.715 184.698 cv
341.56 182.067 339.301 180.061 336.671 180.216 cv
334.04 180.372 332.034 182.629 332.189 185.26 cv
cp
0 .286015 .250584 0 cmyk
f
348.707 205.174 mo
348.173 217.941 li
346.307 218.133 li
345.092 206.64 li
348.707 205.174 li
cp
f
342.573 204.107 mo
342.674 203.663 343.491 203.296 343.616 202.717 cv
344.257 199.743 344.411 195.358 344.411 195.358 cv
344.933 201.348 li
344.331 203.125 343.813 204.755 343.835 205.701 cv
343.871 207.27 343.99 209.003 344.13 210.755 cv
344.13 210.761 li
344.13 210.761 341.955 206.833 342.573 204.107 cv
cp
.634821 .805264 0 0 cmyk
f
345.963 193.164 mo
345.963 193.164 347.455 193.734 348.3 198.319 cv
349.145 202.903 349.776 207.495 348.271 208.086 cv
346.765 208.678 345.507 209.124 345.063 207.897 cv
344.621 206.671 344.347 200.763 344.291 198.638 cv
344.235 196.513 344.154 193.583 345.963 193.164 cv
cp
.474891 .687251 0 0 cmyk
f
322.154 209.375 mo
322.154 209.375 321.346 209.672 320.762 210.308 cv
320.282 210.831 320.02 211.273 319.811 211.585 cv
319.346 212.28 318.953 213.779 319.236 213.965 cv
319.52 214.152 321.142 211.456 321.402 212.083 cv
321.664 212.709 321.4 213.29 321.735 213.299 cv
322.071 213.308 323.236 210.588 324.152 209.745 cv
325.068 208.902 322.154 209.375 322.154 209.375 cv
cp
0 .286015 .250584 0 cmyk
f
338.152 250.855 mo
338.152 250.855 337.709 250.848 337.131 250.749 cv
336.431 222.682 li
338.152 250.855 li
cp
.134188 .51693 .984039 .0105287 cmyk
f
340.854 235.694 mo
341.847 234.398 li
352.291 228.351 li
352.626 228.157 352.896 227.637 352.896 227.191 cv
352.888 218.64 li
353.487 217.856 li
352.924 217.53 li
352.923 217.53 li
352.814 217.46 352.671 217.462 352.514 217.553 cv
340.677 224.407 li
340.343 224.6 340.071 225.12 340.072 225.567 cv
340.082 234.878 li
340.082 235.13 340.168 235.305 340.304 235.375 cv
340.854 235.694 li
cp
.587366 .778347 0 0 cmyk
f
348.076 230.791 mo
348.818 230.361 li
352.892 223.287 li
352.888 218.64 li
353.487 217.856 li
352.924 217.53 li
352.923 217.53 li
352.814 217.46 352.671 217.462 352.514 217.553 cv
340.677 224.407 li
340.5 224.509 340.342 224.703 340.231 224.928 cv
348.076 230.791 li
cp
.238346 .384222 0 0 cmyk
f
353.222 218.204 mo
353.487 217.856 li
352.924 217.53 li
352.923 217.53 li
352.814 217.46 352.671 217.462 352.514 217.553 cv
352.305 217.674 li
353.222 218.204 li
cp
f
340.569 224.482 mo
340.307 224.698 340.103 225.104 340.075 225.479 cv
341.231 226.147 li
341.786 225.184 li
340.569 224.482 li
cp
.587366 .778347 0 0 cmyk
f
341.241 224.733 mo
353.077 217.88 li
353.412 217.686 353.684 217.891 353.685 218.338 cv
353.694 227.65 li
353.695 228.097 353.424 228.617 353.089 228.81 cv
341.253 235.663 li
340.918 235.857 340.646 235.652 340.646 235.205 cv
340.636 225.893 li
340.635 225.446 340.906 224.927 341.241 224.733 cv
cp
.474891 .687251 0 0 cmyk
f
348.158 217.834 mo
348.158 217.834 348.651 220.814 348.577 221.769 cv
348.503 222.723 347.992 224.297 347.604 224.264 cv
347.217 224.231 347.592 220.426 346.91 220.805 cv
346.229 221.184 346.158 221.834 345.85 221.604 cv
345.541 221.375 346.388 218.123 346.162 216.712 cv
345.936 215.302 348.158 217.834 348.158 217.834 cv
cp
0 .286015 .250584 0 cmyk
f
335.119 185.395 mo
332.727 186.246 332.261 185.727 332.237 185.699 cv
332.216 185.554 332.198 185.409 332.189 185.26 cv
332.158 184.732 332.218 184.22 332.349 183.736 cv
338.558 182.898 li
338.558 182.898 337.577 184.523 335.119 185.395 cv
cp
.0520027 .456916 .352453 0 cmyk
f
332.018 180.507 mo
332.581 180.024 334.617 177.633 338.263 178.197 cv
340.542 178.549 342.463 180.104 342.889 183.65 cv
343.176 186.04 342.299 188.393 340.684 190.133 cv
340.424 190.001 li
339.511 189.401 339.412 189.07 339.413 189.067 cv
339.211 187.257 li
339.217 187 339.409 186.772 339.666 186.756 cv
339.864 186.744 340.104 186.649 340.334 186.349 cv
340.857 185.664 340.616 184.596 339.568 184.556 cv
339.021 184.535 338.81 184.239 338.731 183.961 cv
338.664 183.719 338.409 183.584 338.173 183.67 cv
336.981 184.101 334.045 185.031 332.155 184.496 cv
329.738 183.811 331.453 180.991 332.018 180.507 cv
cp
.743191 .853178 0 0 cmyk
f
334.736 187.55 mo
333.276 187.15 li
333.276 187.15 333.974 188.246 334.99 188.525 cv
336.008 188.804 336.166 187.943 336.166 187.943 cv
334.736 187.55 li
cp
0 0 0 0 cmyk
f
345.677 221.512 mo
346.92 220.8 li
346.453 221.563 li
345.824 221.794 li
345.677 221.512 li
cp
.238346 .384222 0 0 cmyk
f
144.45 268.887 mo
153.814 263.48 li
163.179 268.887 li
153.814 274.293 li
144.45 268.887 li
cp
.147219 .0154116 0 0 cmyk
f
153.814 268.887 mo
153.814 240.051 li
144.45 234.645 li
144.45 263.48 li
153.814 268.887 li
cp
.172946 .892424 1 .0698253 cmyk
f
153.814 240.051 mo
163.179 234.645 li
163.179 263.48 li
153.814 268.887 li
153.814 240.051 li
cp
.70544 .83624 0 0 cmyk
f
153.814 268.887 mo
153.814 240.051 li
144.45 234.645 li
144.45 263.48 li
153.814 268.887 li
cp
.474891 .687251 0 0 cmyk
f
144.45 234.645 mo
153.814 229.239 li
163.179 234.645 li
153.814 240.051 li
144.45 234.645 li
cp
.634821 .805264 0 0 cmyk
f
334.333 290.514 mo
343.697 285.108 li
353.062 290.514 li
343.697 295.921 li
334.333 290.514 li
cp
.147219 .0154116 0 0 cmyk
f
343.697 290.514 mo
343.697 274.294 li
334.333 268.888 li
334.333 285.108 li
343.697 290.514 li
cp
0 .912535 0 0 cmyk
f
343.697 274.294 mo
353.062 268.888 li
353.062 285.108 li
343.697 290.514 li
343.697 274.294 li
cp
.139773 1 .00201419 0 cmyk
f
334.333 268.888 mo
343.697 263.482 li
353.062 268.888 li
343.697 274.294 li
334.333 268.888 li
cp
0 .912535 0 0 cmyk
f
254.564 254.694 mo
259.808 257.722 268.311 257.722 273.555 254.694 cv
278.799 251.667 278.799 246.757 273.555 243.73 cv
268.311 240.702 259.809 240.702 254.564 243.73 cv
249.32 246.757 249.32 251.667 254.564 254.694 cv
cp
.147219 .0154116 0 0 cmyk
f
255.831 245.103 mo
254.896 245.502 254.307 246.545 254.385 247.667 cv
254.422 248.195 254.485 248.688 254.596 248.919 cv
254.894 249.544 255.869 250.402 257.426 249.787 cv
258.983 249.171 262.441 245.921 262.571 243.794 cv
262.813 239.843 258.295 244.05 255.831 245.103 cv
cp
1 .866484 .240818 .0951247 cmyk
f
264.98 251.637 mo
264.98 251.637 264.607 253.916 264.788 254.333 cv
264.97 254.75 266.054 255.641 267.654 255.449 cv
269.256 255.256 273.862 253.667 274.889 250.632 cv
276.479 245.925 265.996 250.985 265.996 250.985 cv
264.98 251.637 li
cp
f
269.481 215.221 mo
269.838 250.783 li
269.801 252.019 268.99 253.064 267.901 253.248 cv
267.767 253.27 267.622 253.289 267.468 253.302 cv
266.365 253.399 265.723 252.925 265.355 252.428 cv
265.059 252.026 264.902 251.515 264.88 250.993 cv
264.426 235.812 li
262.16 222.24 li
259.024 246.261 li
258.974 246.912 258.663 247.512 258.162 247.843 cv
257.816 248.072 257.348 248.25 256.732 248.231 cv
255.836 248.204 255.212 247.723 254.832 247.294 cv
254.53 246.955 254.372 246.488 254.378 246.008 cv
255.621 231.555 li
256.084 213.119 li
269.481 215.221 li
cp
.0114137 .138521 .731472 0 cmyk
f
264.877 183.391 mo
264.314 186.631 li
264.314 186.631 264.294 187.737 265.528 188.042 cv
266.763 188.349 267.144 187.552 267.144 187.552 cv
267.702 183.903 li
264.877 183.391 li
cp
0 .286015 .250584 0 cmyk
f
271.68 181.616 mo
270.804 184.392 268.092 186.002 265.623 185.214 cv
263.153 184.426 261.862 181.537 262.739 178.76 cv
263.615 175.984 266.327 174.374 268.796 175.162 cv
271.265 175.951 272.556 178.839 271.68 181.616 cv
cp
f
265.023 186.69 mo
264.938 186.656 259.786 183.338 257.882 186.81 cv
254.776 192.47 257.048 198.959 255.939 213.05 cv
255.755 215.409 259.113 216.845 260.701 217.752 cv
262.113 218.56 263.695 219.054 265.322 219.067 cv
266.932 219.08 270.019 217.649 269.907 215.544 cv
269.392 205.865 270.247 197.706 271.038 189.789 cv
271.038 189.789 270.05 188.725 265.023 186.69 cv
cp
.587366 .778347 0 0 cmyk
f
262.16 222.239 mo
259.024 246.261 li
258.974 246.912 258.663 247.512 258.162 247.843 cv
258.081 247.897 257.99 247.948 257.895 247.995 cv
258.546 247.506 260.446 227.343 260.798 225.1 cv
261.149 222.856 262.16 222.239 262.16 222.239 cv
cp
.134188 .51693 .984039 .0105287 cmyk
f
281.498 187.758 mo
284.297 178.59 li
282.818 177.977 li
279.519 185.162 li
281.498 187.758 li
cp
0 .286015 .250584 0 cmyk
f
253.278 180.532 mo
255.377 170.987 li
257.048 171.004 li
256.42 178.921 li
253.278 180.532 li
cp
f
271.038 189.789 mo
271.038 189.789 276.067 190.792 279.266 184.935 cv
279.548 184.419 280.295 184.343 280.593 184.795 cv
281.105 185.577 281.785 186.774 281.433 188.068 cv
279.876 193.792 271.42 195.056 269.901 198.375 cv
268.383 201.695 271.038 189.789 271.038 189.789 cv
cp
.587366 .778347 0 0 cmyk
f
261.756 185.5 mo
261.756 185.5 257.772 185.807 257.199 182.359 cv
256.904 180.583 256.815 179.524 256.799 178.913 cv
256.787 178.499 256.429 178.186 256.018 178.237 cv
255.063 178.355 253.587 178.64 253.387 179.279 cv
253.087 180.234 252.524 184.916 256.459 192.099 cv
259.036 196.805 261.756 185.5 261.756 185.5 cv
cp
f
255.368 171.01 mo
255.406 169.921 li
255.42 169.538 255.532 169.164 255.731 168.834 cv
256.835 167.022 li
257.123 166.66 li
257.389 166.325 257.863 166.244 258.226 166.471 cv
258.479 166.631 li
258.803 166.834 258.989 167.199 258.965 167.581 cv
258.394 169.129 li
259.115 168.989 li
259.256 168.961 259.391 169.054 259.416 169.195 cv
259.438 169.315 259.372 169.433 259.26 169.478 cv
258.081 169.954 li
257.011 171.469 li
255.368 171.01 li
cp
0 .286015 .250584 0 cmyk
f
284.338 178.638 mo
284.672 177.601 li
284.789 177.236 284.812 176.845 284.734 176.468 cv
284.313 174.389 li
284.165 173.951 li
284.028 173.545 283.609 173.307 283.191 173.399 cv
282.898 173.462 li
282.525 173.544 282.227 173.824 282.12 174.191 cv
282.131 175.841 li
281.5 175.464 li
281.377 175.391 281.218 175.432 281.146 175.556 cv
281.086 175.662 281.107 175.794 281.197 175.875 cv
282.145 176.723 li
282.698 178.733 li
284.338 178.638 li
cp
f
268.682 196.724 mo
268.224 198.815 269.51 215.048 265.322 219.067 cv
266.932 219.08 270.019 217.649 269.907 215.544 cv
269.562 209.053 269.837 203.252 270.291 197.744 cv
271.934 195.616 276.451 194.26 279.278 191.532 cv
279.072 191.595 269.136 194.654 268.682 196.724 cv
cp
.70544 .83624 0 0 cmyk
f
263.171 185.775 mo
263.887 185.04 li
263.887 185.04 265.063 186.243 266.009 186.451 cv
266.009 186.451 267.146 186.773 267.702 186.801 cv
268.163 188.071 li
268.163 188.071 264.416 187.802 263.171 185.775 cv
cp
0 0 0 0 cmyk
f
268.319 181.702 mo
268.517 181.699 268.7 181.609 268.813 181.447 cv
269.008 181.164 268.885 179.862 269.487 179.646 cv
270.43 179.31 272.664 180.489 272.903 177.09 cv
273.027 175.325 272.167 174.855 272.171 173.887 cv
272.171 173.887 272.245 174.373 267.7 174.07 cv
263.155 173.768 261.678 177.804 261.57 179.727 cv
261.462 181.649 262.393 184.81 265.499 185.244 cv
266.014 185.316 268.178 183.577 268.122 183.348 cv
268.065 183.12 267.249 183.133 267.367 182.469 cv
267.466 181.916 267.803 181.711 268.319 181.702 cv
cp
1 .866484 .240818 .0951247 cmyk
f
251.229 88.5776 mo
227.263 74.7407 li
226.789 74.4663 226.36 74.4565 226.024 74.6411 cv
226.025 74.6255 li
223.701 75.9683 li
223.701 75.9683 224.73 76.3442 225.335 76.5659 cv
225.335 94.019 li
225.335 95.439 226.198 97.0884 227.263 97.7036 cv
250.171 110.929 li
250.171 112.977 li
252.52 111.625 li
252.507 111.621 li
252.903 111.378 253.158 110.847 253.158 110.083 cv
253.158 92.2622 li
253.158 90.8423 252.295 89.1929 251.229 88.5776 cv
cp
.139773 1 .00201419 0 cmyk
f
248.862 112.906 mo
224.896 99.0679 li
223.831 98.4536 222.968 96.8032 222.968 95.3833 cv
222.968 77.563 li
222.968 76.1431 223.831 75.4897 224.896 76.105 cv
248.862 89.9419 li
249.928 90.5571 250.791 92.2065 250.791 93.6265 cv
250.791 111.448 li
250.791 112.868 249.928 113.52 248.862 112.906 cv
cp
0 .912535 0 0 cmyk
f
248.862 89.9419 mo
224.896 76.105 li
224.29 75.7554 223.757 75.8267 223.403 76.2046 cv
223.66 76.1831 223.947 76.2437 224.254 76.4214 cv
248.221 90.2593 li
249.285 90.8735 250.149 92.5229 250.149 93.9429 cv
250.149 111.764 li
250.149 112.376 249.981 112.835 249.713 113.122 cv
250.35 113.069 250.791 112.458 250.791 111.448 cv
250.791 93.6265 li
250.791 92.2065 249.928 90.5571 248.862 89.9419 cv
cp
0 0 0 0 cmyk
f
232.955 92.9272 mo
232.955 93.9585 232.231 94.3765 231.339 93.8608 cv
230.445 93.3452 229.722 92.0913 229.722 91.0601 cv
229.722 90.0288 230.445 89.6108 231.339 90.1265 cv
232.231 90.6421 232.955 91.896 232.955 92.9272 cv
cp
f
237.854 95.7554 mo
237.854 96.7866 237.13 97.2046 236.237 96.689 cv
235.344 96.1733 234.62 94.9194 234.62 93.8882 cv
234.62 92.8569 235.344 92.439 236.237 92.9546 cv
237.13 93.4702 237.854 94.7241 237.854 95.7554 cv
cp
f
242.753 98.5835 mo
242.753 99.6147 242.029 100.033 241.136 99.5171 cv
240.243 99.0015 239.519 97.7476 239.519 96.7163 cv
239.519 95.6851 240.243 95.2671 241.136 95.7827 cv
242.029 96.2983 242.753 97.5522 242.753 98.5835 cv
cp
f
240.928 341.064 mo
238.415 341.064 237.095 339.613 236.969 336.71 cv
239.232 336.237 li
239.289 338.125 239.829 339.068 240.85 339.068 cv
241.246 339.068 241.54 338.948 241.731 338.707 cv
241.924 338.465 242.021 338.141 242.021 337.734 cv
242.021 337.338 241.948 336.975 241.805 336.646 cv
241.661 336.316 241.495 336.046 241.306 335.836 cv
241.116 335.627 240.847 335.368 240.497 335.058 cv
238.621 333.431 li
238.07 332.95 237.66 332.45 237.391 331.93 cv
237.121 331.411 236.986 330.761 236.986 329.981 cv
236.986 328.874 237.312 328.013 237.963 327.4 cv
238.614 326.786 239.508 326.473 240.644 326.461 cv
241.165 326.456 241.627 326.52 242.028 326.655 cv
242.431 326.791 242.762 326.971 243.022 327.198 cv
243.283 327.424 243.502 327.707 243.677 328.044 cv
243.852 328.383 243.982 328.735 244.068 329.099 cv
244.154 329.463 244.215 329.87 244.249 330.317 cv
242.028 330.755 li
242.018 330.468 241.999 330.219 241.973 330.006 cv
241.947 329.794 241.902 329.58 241.84 329.362 cv
241.776 329.143 241.694 328.967 241.594 328.833 cv
241.494 328.698 241.359 328.59 241.189 328.509 cv
241.021 328.429 240.824 328.398 240.601 328.415 cv
240.216 328.438 239.922 328.566 239.719 328.797 cv
239.515 329.03 239.413 329.341 239.413 329.732 cv
239.413 330.191 239.503 330.568 239.684 330.863 cv
239.864 331.159 240.147 331.475 240.531 331.814 cv
242.391 333.431 li
242.7 333.712 242.97 333.985 243.199 334.25 cv
243.429 334.513 243.647 334.814 243.857 335.153 cv
244.066 335.491 244.226 335.864 244.335 336.271 cv
244.443 336.678 244.498 337.109 244.498 337.562 cv
244.498 338.6 244.17 339.444 243.513 340.092 cv
242.856 340.74 241.994 341.064 240.928 341.064 cv
cp
1 .866484 .240818 .0951247 cmyk
f
249.928 341.064 mo
249.291 341.064 248.739 340.99 248.271 340.84 cv
247.804 340.691 247.42 340.482 247.118 340.212 cv
246.817 339.943 246.576 339.597 246.396 339.175 cv
246.215 338.753 246.089 338.297 246.017 337.807 cv
245.945 337.317 245.909 336.748 245.909 336.099 cv
245.909 326.625 li
248.431 326.625 li
248.431 336.366 li
248.431 336.699 248.439 336.983 248.457 337.218 cv
248.474 337.453 248.511 337.7 248.568 337.958 cv
248.626 338.216 248.707 338.422 248.813 338.578 cv
248.92 338.732 249.066 338.861 249.253 338.964 cv
249.438 339.068 249.664 339.12 249.928 339.12 cv
250.191 339.12 250.417 339.068 250.604 338.964 cv
250.79 338.861 250.934 338.732 251.034 338.578 cv
251.134 338.422 251.215 338.216 251.274 337.958 cv
251.335 337.7 251.372 337.455 251.387 337.222 cv
251.4 336.99 251.408 336.705 251.408 336.366 cv
251.408 326.625 li
253.93 326.625 li
253.93 336.099 li
253.93 336.748 253.894 337.317 253.821 337.807 cv
253.75 338.297 253.624 338.753 253.443 339.175 cv
253.263 339.597 253.022 339.943 252.725 340.212 cv
252.426 340.482 252.043 340.691 251.576 340.84 cv
251.108 340.99 250.559 341.064 249.928 341.064 cv
cp
f
259.78 341.064 mo
259.167 341.064 258.625 340.987 258.154 340.832 cv
257.684 340.677 257.295 340.461 256.988 340.186 cv
256.682 339.911 256.432 339.57 256.24 339.163 cv
256.048 338.755 255.913 338.318 255.835 337.85 cv
255.758 337.382 255.719 336.856 255.719 336.271 cv
255.719 331.297 li
255.719 330.678 255.759 330.128 255.84 329.65 cv
255.92 329.17 256.055 328.726 256.244 328.316 cv
256.434 327.906 256.682 327.569 256.988 327.305 cv
257.295 327.042 257.683 326.834 258.15 326.685 cv
258.617 326.537 259.161 326.461 259.78 326.461 cv
260.492 326.461 261.101 326.556 261.605 326.746 cv
262.109 326.935 262.509 327.213 262.801 327.581 cv
263.094 327.948 263.306 328.376 263.438 328.867 cv
263.569 329.357 263.636 329.929 263.636 330.583 cv
263.636 331.805 li
261.132 331.805 li
261.132 330.592 li
261.132 329.88 261.095 329.402 261.02 329.155 cv
260.871 328.673 260.507 328.415 259.927 328.38 cv
259.789 328.38 li
259.571 328.38 259.381 328.407 259.217 328.458 cv
259.054 328.509 258.92 328.591 258.817 328.704 cv
258.714 328.815 258.631 328.934 258.567 329.06 cv
258.504 329.187 258.457 329.351 258.426 329.555 cv
258.394 329.758 258.374 329.947 258.365 330.119 cv
258.356 330.291 258.353 330.509 258.353 330.773 cv
258.353 336.813 li
258.353 337.651 258.457 338.248 258.666 338.603 cv
258.876 338.958 259.25 339.136 259.789 339.136 cv
259.973 339.136 260.135 339.115 260.275 339.072 cv
260.416 339.029 260.533 338.975 260.628 338.909 cv
260.723 338.842 260.804 338.749 260.869 338.625 cv
260.936 338.501 260.985 338.386 261.02 338.281 cv
261.055 338.174 261.08 338.027 261.098 337.837 cv
261.114 337.648 261.124 337.488 261.127 337.355 cv
261.13 337.223 261.132 337.042 261.132 336.813 cv
261.132 335.54 li
263.636 335.54 li
263.636 336.71 li
263.636 337.244 263.599 337.722 263.523 338.147 cv
263.449 338.572 263.321 338.97 263.141 339.343 cv
262.96 339.716 262.727 340.026 262.439 340.273 cv
262.152 340.519 261.786 340.712 261.338 340.853 cv
260.891 340.994 260.371 341.064 259.78 341.064 cv
cp
f
269.263 341.064 mo
268.649 341.064 268.107 340.987 267.637 340.832 cv
267.166 340.677 266.777 340.461 266.471 340.186 cv
266.164 339.911 265.914 339.57 265.723 339.163 cv
265.53 338.755 265.396 338.318 265.317 337.85 cv
265.24 337.382 265.201 336.856 265.201 336.271 cv
265.201 331.297 li
265.201 330.678 265.241 330.128 265.322 329.65 cv
265.402 329.17 265.537 328.726 265.727 328.316 cv
265.916 327.906 266.164 327.569 266.471 327.305 cv
266.777 327.042 267.165 326.834 267.633 326.685 cv
268.1 326.537 268.644 326.461 269.263 326.461 cv
269.975 326.461 270.583 326.556 271.088 326.746 cv
271.592 326.935 271.991 327.213 272.283 327.581 cv
272.576 327.948 272.788 328.376 272.92 328.867 cv
273.052 329.357 273.118 329.929 273.118 330.583 cv
273.118 331.805 li
270.614 331.805 li
270.614 330.592 li
270.614 329.88 270.577 329.402 270.502 329.155 cv
270.354 328.673 269.989 328.415 269.409 328.38 cv
269.271 328.38 li
269.054 328.38 268.863 328.407 268.699 328.458 cv
268.536 328.509 268.402 328.591 268.3 328.704 cv
268.196 328.815 268.113 328.934 268.05 329.06 cv
267.986 329.187 267.939 329.351 267.908 329.555 cv
267.876 329.758 267.856 329.947 267.848 330.119 cv
267.839 330.291 267.835 330.509 267.835 330.773 cv
267.835 336.813 li
267.835 337.651 267.939 338.248 268.148 338.603 cv
268.358 338.958 268.732 339.136 269.271 339.136 cv
269.455 339.136 269.617 339.115 269.758 339.072 cv
269.898 339.029 270.016 338.975 270.11 338.909 cv
270.205 338.842 270.286 338.749 270.352 338.625 cv
270.418 338.501 270.468 338.386 270.502 338.281 cv
270.537 338.174 270.563 338.027 270.58 337.837 cv
270.597 337.648 270.606 337.488 270.609 337.355 cv
270.612 337.223 270.614 337.042 270.614 336.813 cv
270.614 335.54 li
273.118 335.54 li
273.118 336.71 li
273.118 337.244 273.081 337.722 273.006 338.147 cv
272.932 338.572 272.804 338.97 272.623 339.343 cv
272.442 339.716 272.209 340.026 271.922 340.273 cv
271.635 340.519 271.269 340.712 270.82 340.853 cv
270.373 340.994 269.854 341.064 269.263 341.064 cv
cp
f
274.917 340.892 mo
274.917 326.625 li
280.889 326.625 li
280.889 328.458 li
277.516 328.458 li
277.516 332.554 li
280.183 332.554 li
280.183 334.387 li
277.516 334.387 li
277.516 339.093 li
280.932 339.093 li
280.932 340.892 li
274.917 340.892 li
cp
f
286.026 341.064 mo
283.514 341.064 282.193 339.613 282.067 336.71 cv
284.331 336.237 li
284.388 338.125 284.928 339.068 285.948 339.068 cv
286.345 339.068 286.639 338.948 286.83 338.707 cv
287.022 338.465 287.119 338.141 287.119 337.734 cv
287.119 337.338 287.047 336.975 286.903 336.646 cv
286.76 336.316 286.594 336.046 286.404 335.836 cv
286.215 335.627 285.945 335.368 285.596 335.058 cv
283.72 333.431 li
283.169 332.95 282.759 332.45 282.489 331.93 cv
282.22 331.411 282.085 330.761 282.085 329.981 cv
282.085 328.874 282.41 328.013 283.062 327.4 cv
283.713 326.786 284.606 326.473 285.742 326.461 cv
286.264 326.456 286.726 326.52 287.127 326.655 cv
287.529 326.791 287.86 326.971 288.121 327.198 cv
288.382 327.424 288.601 327.707 288.775 328.044 cv
288.95 328.383 289.081 328.735 289.167 329.099 cv
289.253 329.463 289.313 329.87 289.348 330.317 cv
287.127 330.755 li
287.116 330.468 287.098 330.219 287.071 330.006 cv
287.046 329.794 287.001 329.58 286.938 329.362 cv
286.875 329.143 286.793 328.967 286.692 328.833 cv
286.593 328.698 286.458 328.59 286.288 328.509 cv
286.119 328.429 285.923 328.398 285.699 328.415 cv
285.314 328.438 285.021 328.566 284.817 328.797 cv
284.613 329.03 284.512 329.341 284.512 329.732 cv
284.512 330.191 284.602 330.568 284.782 330.863 cv
284.963 331.159 285.246 331.475 285.63 331.814 cv
287.489 333.431 li
287.799 333.712 288.068 333.985 288.298 334.25 cv
288.527 334.513 288.746 334.814 288.956 335.153 cv
289.165 335.491 289.324 335.864 289.434 336.271 cv
289.542 336.678 289.597 337.109 289.597 337.562 cv
289.597 338.6 289.269 339.444 288.611 340.092 cv
287.955 340.74 287.093 341.064 286.026 341.064 cv
cp
f
294.717 341.064 mo
292.204 341.064 290.885 339.613 290.759 336.71 cv
293.021 336.237 li
293.079 338.125 293.618 339.068 294.64 339.068 cv
295.035 339.068 295.329 338.948 295.521 338.707 cv
295.714 338.465 295.81 338.141 295.81 337.734 cv
295.81 337.338 295.738 336.975 295.595 336.646 cv
295.451 336.316 295.285 336.046 295.096 335.836 cv
294.906 335.627 294.637 335.368 294.286 335.058 cv
292.411 333.431 li
291.86 332.95 291.45 332.45 291.181 331.93 cv
290.91 331.411 290.775 330.761 290.775 329.981 cv
290.775 328.874 291.102 328.013 291.753 327.4 cv
292.403 326.786 293.297 326.473 294.433 326.461 cv
294.955 326.456 295.417 326.52 295.818 326.655 cv
296.22 326.791 296.551 326.971 296.812 327.198 cv
297.073 327.424 297.291 327.707 297.466 328.044 cv
297.641 328.383 297.771 328.735 297.857 329.099 cv
297.943 329.463 298.004 329.87 298.038 330.317 cv
295.818 330.755 li
295.807 330.468 295.788 330.219 295.763 330.006 cv
295.736 329.794 295.692 329.58 295.629 329.362 cv
295.565 329.143 295.484 328.967 295.384 328.833 cv
295.283 328.698 295.148 328.59 294.979 328.509 cv
294.81 328.429 294.613 328.398 294.39 328.415 cv
294.006 328.438 293.712 328.566 293.508 328.797 cv
293.304 329.03 293.202 329.341 293.202 329.732 cv
293.202 330.191 293.293 330.568 293.474 330.863 cv
293.654 331.159 293.937 331.475 294.321 331.814 cv
296.18 333.431 li
296.489 333.712 296.759 333.985 296.988 334.25 cv
297.218 334.513 297.438 334.814 297.646 335.153 cv
297.855 335.491 298.015 335.864 298.124 336.271 cv
298.233 336.678 298.288 337.109 298.288 337.562 cv
298.288 338.6 297.959 339.444 297.303 340.092 cv
296.646 340.74 295.784 341.064 294.717 341.064 cv
cp
f
299.812 340.892 mo
299.812 326.625 li
305.671 326.625 li
305.671 328.423 li
302.41 328.423 li
302.41 332.571 li
305.018 332.571 li
305.018 334.404 li
302.41 334.404 li
302.41 340.892 li
299.812 340.892 li
cp
f
310.945 341.064 mo
310.309 341.064 309.757 340.99 309.289 340.84 cv
308.821 340.691 308.437 340.482 308.136 340.212 cv
307.835 339.943 307.594 339.597 307.413 339.175 cv
307.232 338.753 307.106 338.297 307.034 337.807 cv
306.963 337.317 306.927 336.748 306.927 336.099 cv
306.927 326.625 li
309.448 326.625 li
309.448 336.366 li
309.448 336.699 309.457 336.983 309.474 337.218 cv
309.491 337.453 309.528 337.7 309.586 337.958 cv
309.643 338.216 309.725 338.422 309.831 338.578 cv
309.938 338.732 310.083 338.861 310.27 338.964 cv
310.456 339.068 310.682 339.12 310.945 339.12 cv
311.209 339.12 311.435 339.068 311.621 338.964 cv
311.808 338.861 311.95 338.732 312.051 338.578 cv
312.151 338.422 312.231 338.216 312.292 337.958 cv
312.353 337.7 312.39 337.455 312.404 337.222 cv
312.418 336.99 312.426 336.705 312.426 336.366 cv
312.426 326.625 li
314.946 326.625 li
314.946 336.099 li
314.946 336.748 314.911 337.317 314.839 337.807 cv
314.768 338.297 314.642 338.753 314.461 339.175 cv
314.279 339.597 314.04 339.943 313.742 340.212 cv
313.443 340.482 313.061 340.691 312.593 340.84 cv
312.126 340.99 311.576 341.064 310.945 341.064 cv
cp
f
316.97 340.892 mo
316.97 326.625 li
319.568 326.625 li
319.568 339.093 li
322.984 339.093 li
322.984 340.892 li
316.97 340.892 li
cp
f
330.057 340.892 mo
330.057 328.544 li
327.664 328.544 li
327.664 326.625 li
334.97 326.625 li
334.97 328.544 li
332.655 328.544 li
332.655 340.892 li
330.057 340.892 li
cp
f
336.106 340.892 mo
336.106 326.625 li
342.078 326.625 li
342.078 328.458 li
338.705 328.458 li
338.705 332.554 li
341.372 332.554 li
341.372 334.387 li
338.705 334.387 li
338.705 339.093 li
342.121 339.093 li
342.121 340.892 li
336.106 340.892 li
cp
f
346.191 335.884 mo
348.102 335.884 li
347.146 330.024 li
346.191 335.884 li
cp
342.879 340.892 mo
345.778 326.625 li
348.489 326.625 li
351.381 340.892 li
348.963 340.892 li
348.386 337.58 li
345.916 337.58 li
345.331 340.892 li
342.879 340.892 li
cp
f
352.757 340.892 mo
352.989 326.625 li
355.657 326.625 li
357.722 336.65 li
359.848 326.625 li
362.455 326.625 li
362.695 340.892 li
360.733 340.892 li
360.562 331.065 li
358.505 340.892 li
356.982 340.892 li
354.899 331.031 li
354.745 340.892 li
352.757 340.892 li
cp
f
238.792 352.239 mo
236.5 352.239 li
236.5 346.2 li
237.072 346.2 li
237.072 351.813 li
238.792 351.813 li
238.792 352.239 li
.472602 .264286 .0650339 0 cmyk
f
240.314 352.308 mo
240.093 352.308 239.907 352.273 239.757 352.203 cv
239.606 352.132 239.487 352.025 239.401 351.881 cv
239.315 351.739 239.254 351.571 239.218 351.377 cv
239.182 351.184 239.163 350.952 239.163 350.68 cv
239.163 349.485 li
239.163 348.936 239.248 348.528 239.418 348.261 cv
239.588 347.994 239.887 347.86 240.314 347.86 cv
240.744 347.86 241.043 347.994 241.212 348.259 cv
241.381 348.525 241.465 348.934 241.465 349.485 cv
241.465 350.68 li
241.465 350.952 241.447 351.184 241.41 351.377 cv
241.374 351.571 241.313 351.739 241.227 351.881 cv
241.141 352.025 241.021 352.132 240.871 352.203 cv
240.721 352.273 240.535 352.308 240.314 352.308 cv
240.314 348.268 mo
240.222 348.268 240.142 348.281 240.073 348.305 cv
239.906 348.423 li
239.801 348.598 li
239.773 348.66 239.754 348.741 239.74 348.84 cv
239.727 348.94 239.719 349.034 239.715 349.123 cv
239.711 349.211 239.709 349.322 239.709 349.456 cv
239.709 350.708 li
239.709 350.842 239.711 350.954 239.715 351.042 cv
239.719 351.13 239.727 351.225 239.74 351.325 cv
239.754 351.424 239.773 351.504 239.801 351.567 cv
239.906 351.742 li
240.073 351.86 li
240.142 351.884 240.222 351.896 240.314 351.896 cv
240.424 351.896 240.516 351.876 240.591 351.836 cv
240.768 351.685 li
240.81 351.625 240.842 351.539 240.864 351.426 cv
240.886 351.315 240.9 351.208 240.906 351.106 cv
240.912 351.004 240.915 350.872 240.915 350.708 cv
240.915 349.456 li
240.915 349.294 240.912 349.161 240.906 349.059 cv
240.9 348.956 240.886 348.85 240.864 348.738 cv
240.842 348.626 240.81 348.541 240.768 348.48 cv
240.591 348.329 li
240.516 348.289 240.424 348.268 240.314 348.268 cv
f
242.806 352.239 mo
242.259 352.239 li
242.259 347.926 li
242.806 347.926 li
242.806 348.52 li
242.937 348.301 243.09 348.139 243.267 348.035 cv
243.442 347.931 243.62 347.878 243.8 347.878 cv
243.895 347.882 li
243.895 348.472 li
243.816 348.441 243.729 348.425 243.632 348.425 cv
243.282 348.425 243.007 348.592 242.806 348.927 cv
242.806 352.239 li
f
245.523 352.308 mo
245.11 352.308 244.813 352.18 244.631 351.925 cv
244.448 351.67 244.357 351.235 244.357 350.618 cv
244.357 349.529 li
244.357 349.109 244.4 348.775 244.486 348.529 cv
244.573 348.283 244.699 348.109 244.865 348.009 cv
245.032 347.91 245.252 347.86 245.526 347.86 cv
245.709 347.86 245.864 347.884 245.993 347.931 cv
246.121 347.979 246.229 348.046 246.314 348.133 cv
246.398 348.221 246.466 348.339 246.516 348.489 cv
246.565 348.638 246.6 348.803 246.619 348.984 cv
246.639 349.164 246.648 349.383 246.648 349.638 cv
246.645 350.028 li
244.903 350.028 li
244.903 350.672 li
244.903 351.12 244.947 351.435 245.033 351.62 cv
245.119 351.804 245.281 351.896 245.52 351.896 cv
245.709 351.896 245.855 351.836 245.956 351.716 cv
246.059 351.596 246.109 351.377 246.109 351.062 cv
246.109 350.763 li
246.645 350.763 li
246.645 351.004 li
246.645 351.421 246.558 351.744 246.383 351.969 cv
246.208 352.195 245.921 352.308 245.523 352.308 cv
245.523 348.268 mo
245.292 348.268 245.132 348.348 245.04 348.508 cv
244.949 348.669 244.903 348.974 244.903 349.423 cv
244.903 349.714 li
246.109 349.714 li
246.109 349.358 li
246.109 349.207 246.106 349.082 246.099 348.982 cv
246.091 348.882 246.076 348.784 246.053 348.685 cv
246.03 348.587 245.998 348.51 245.956 348.454 cv
245.785 348.319 li
245.713 348.286 245.625 348.268 245.523 348.268 cv
f
251.388 352.239 mo
250.87 352.239 li
250.87 348.851 li
250.87 348.616 250.834 348.452 250.761 348.359 cv
250.689 348.267 250.584 348.221 250.447 348.221 cv
250.173 348.226 249.902 348.375 249.636 348.669 cv
249.643 348.836 li
249.643 352.239 li
249.133 352.239 li
249.133 348.851 li
249.133 348.616 249.095 348.452 249.019 348.359 cv
248.944 348.267 248.839 348.221 248.703 348.221 cv
248.429 348.226 248.16 348.375 247.897 348.669 cv
247.897 352.239 li
247.384 352.239 li
247.384 347.926 li
247.897 347.926 li
247.897 348.363 li
248.187 348.021 248.525 347.849 248.914 347.849 cv
249.273 347.849 249.499 348.039 249.592 348.418 cv
249.893 348.039 250.247 347.849 250.655 347.849 cv
250.869 347.849 251.045 347.926 251.182 348.081 cv
251.319 348.235 251.388 348.487 251.388 348.836 cv
251.388 352.239 li
f
254.185 352.239 mo
253.639 352.239 li
253.639 347.926 li
254.185 347.926 li
254.185 352.239 li
254.188 347.332 mo
253.639 347.332 li
253.639 346.589 li
254.188 346.589 li
254.188 347.332 li
f
255.649 353.66 mo
255.103 353.66 li
255.103 347.926 li
255.649 347.926 li
255.649 348.287 li
255.88 348.002 256.155 347.86 256.476 347.86 cv
256.637 347.86 256.776 347.893 256.896 347.958 cv
257.017 348.024 257.111 348.109 257.181 348.213 cv
257.25 348.318 257.306 348.448 257.349 348.603 cv
257.391 348.759 257.419 348.913 257.433 349.064 cv
257.445 349.216 257.452 349.388 257.452 349.579 cv
257.452 350.491 li
257.452 350.718 257.442 350.922 257.423 351.102 cv
257.403 351.282 257.37 351.449 257.321 351.603 cv
257.272 351.757 257.209 351.885 257.13 351.986 cv
257.051 352.086 256.952 352.166 256.833 352.222 cv
256.714 352.28 256.575 352.308 256.418 352.308 cv
256.139 352.308 255.882 352.17 255.649 351.896 cv
255.649 353.66 li
256.319 348.29 mo
256.099 348.29 255.875 348.401 255.649 348.621 cv
255.649 351.561 li
255.849 351.77 256.075 351.874 256.33 351.874 cv
256.428 351.874 256.51 351.854 256.578 351.814 cv
256.744 351.651 li
256.786 351.582 256.819 351.487 256.844 351.369 cv
256.868 351.249 256.885 351.123 256.894 350.988 cv
256.901 350.853 256.906 350.689 256.906 350.498 cv
256.906 349.579 li
256.906 349.119 256.867 348.788 256.789 348.588 cv
256.712 348.39 256.555 348.29 256.319 348.29 cv
f
259.2 352.308 mo
258.858 352.308 258.584 352.198 258.379 351.976 cv
258.174 351.755 258.057 351.457 258.027 351.08 cv
258.486 350.942 li
258.516 351.27 258.591 351.511 258.712 351.666 cv
258.834 351.819 259.004 351.896 259.223 351.896 cv
259.412 351.896 259.561 351.84 259.671 351.729 cv
259.774 351.622 259.827 351.479 259.827 351.299 cv
259.827 351.274 li
259.819 350.987 259.645 350.701 259.303 350.414 cv
258.716 349.915 li
258.51 349.743 258.359 349.574 258.265 349.409 cv
258.172 349.248 258.126 349.061 258.126 348.847 cv
258.126 348.532 258.221 348.288 258.41 348.116 cv
258.595 347.946 258.844 347.86 259.157 347.86 cv
259.475 347.86 259.72 347.962 259.891 348.167 cv
260.062 348.371 260.157 348.646 260.177 348.994 cv
259.791 349.121 li
259.773 348.831 259.715 348.618 259.614 348.478 cv
259.513 348.338 259.368 348.268 259.179 348.268 cv
259.009 348.268 258.873 348.316 258.771 348.411 cv
258.671 348.502 258.621 348.626 258.621 348.782 cv
258.621 348.922 258.646 349.043 258.698 349.144 cv
258.749 349.246 258.842 349.354 258.979 349.47 cv
259.587 350.017 li
259.696 350.112 259.785 350.195 259.855 350.266 cv
259.924 350.338 259.997 350.426 260.075 350.532 cv
260.152 350.638 260.21 350.752 260.248 350.875 cv
260.285 350.998 260.306 351.129 260.308 351.27 cv
260.308 351.6 260.208 351.856 260.009 352.037 cv
259.809 352.217 259.54 352.308 259.2 352.308 cv
f
261.554 352.304 mo
261.338 352.304 261.173 352.224 261.059 352.064 cv
260.944 351.904 260.887 351.676 260.887 351.382 cv
260.887 347.926 li
261.438 347.926 li
261.438 351.27 li
261.438 351.489 261.47 351.644 261.535 351.736 cv
261.602 351.829 261.704 351.874 261.845 351.874 cv
262.091 351.874 262.346 351.734 262.61 351.452 cv
262.61 347.926 li
263.156 347.926 li
263.156 352.239 li
262.61 352.239 li
262.61 351.761 li
262.289 352.124 261.937 352.304 261.554 352.304 cv
f
267.994 352.239 mo
267.477 352.239 li
267.477 348.851 li
267.477 348.616 267.44 348.452 267.367 348.359 cv
267.295 348.267 267.19 348.221 267.054 348.221 cv
266.779 348.226 266.509 348.375 266.242 348.669 cv
266.249 348.836 li
266.249 352.239 li
265.739 352.239 li
265.739 348.851 li
265.739 348.616 265.701 348.452 265.626 348.359 cv
265.551 348.267 265.445 348.221 265.31 348.221 cv
265.035 348.226 264.767 348.375 264.504 348.669 cv
264.504 352.239 li
263.99 352.239 li
263.99 347.926 li
264.504 347.926 li
264.504 348.363 li
264.793 348.021 265.132 347.849 265.521 347.849 cv
265.88 347.849 266.105 348.039 266.198 348.418 cv
266.499 348.039 266.853 347.849 267.262 347.849 cv
267.476 347.849 267.651 347.926 267.788 348.081 cv
267.926 348.235 267.994 348.487 267.994 348.836 cv
267.994 352.239 li
f
241.57 361.26 mo
241.157 361.26 240.86 361.132 240.678 360.877 cv
240.496 360.622 240.404 360.187 240.404 359.57 cv
240.404 358.481 li
240.404 358.061 240.448 357.727 240.534 357.481 cv
240.62 357.235 240.746 357.061 240.913 356.961 cv
241.079 356.862 241.3 356.812 241.574 356.812 cv
241.756 356.812 241.911 356.836 242.04 356.883 cv
242.169 356.931 242.275 356.999 242.36 357.085 cv
242.445 357.173 242.513 357.291 242.563 357.441 cv
242.612 357.59 242.648 357.755 242.667 357.936 cv
242.687 358.117 242.696 358.335 242.696 358.59 cv
242.692 358.98 li
240.951 358.98 li
240.951 359.625 li
240.951 360.072 240.994 360.387 241.08 360.572 cv
241.167 360.756 241.329 360.848 241.566 360.848 cv
241.756 360.848 241.901 360.789 242.004 360.668 cv
242.105 360.548 242.157 360.33 242.157 360.014 cv
242.157 359.715 li
242.692 359.715 li
242.692 359.956 li
242.692 360.374 242.604 360.696 242.43 360.921 cv
242.255 361.147 241.969 361.26 241.57 361.26 cv
241.57 357.22 mo
241.34 357.22 241.179 357.3 241.088 357.46 cv
240.997 357.622 240.951 357.926 240.951 358.375 cv
240.951 358.667 li
242.157 358.667 li
242.157 358.31 li
242.157 358.159 242.153 358.034 242.146 357.934 cv
242.139 357.834 242.123 357.736 242.101 357.637 cv
242.077 357.54 242.045 357.462 242.004 357.406 cv
241.833 357.271 li
241.76 357.238 241.672 357.22 241.57 357.22 cv
f
244.059 361.191 mo
243.508 361.191 li
243.508 355.152 li
244.059 355.152 li
244.059 361.191 li
f
245.548 361.191 mo
245.001 361.191 li
245.001 356.878 li
245.548 356.878 li
245.548 361.191 li
245.552 356.285 mo
245.001 356.285 li
245.001 355.542 li
245.552 355.542 li
245.552 356.285 li
f
247.485 361.246 mo
247.191 361.246 246.989 361.165 246.877 361.003 cv
246.766 360.842 246.708 360.606 246.706 360.294 cv
246.706 357.243 li
246.185 357.243 li
246.185 356.878 li
246.706 356.878 li
246.706 355.544 li
247.252 355.544 li
247.252 356.878 li
247.97 356.878 li
247.97 357.243 li
247.252 357.243 li
247.252 360.244 li
247.252 360.462 247.278 360.613 247.329 360.694 cv
247.38 360.775 247.483 360.816 247.639 360.816 cv
247.738 360.816 247.84 360.806 247.944 360.787 cv
247.944 361.198 li
247.781 361.23 247.629 361.246 247.485 361.246 cv
f
248.615 362.061 mo
248.502 361.821 li
248.631 361.749 248.723 361.664 248.777 361.566 cv
248.832 361.469 248.859 361.344 248.859 361.191 cv
248.531 361.191 li
248.531 360.378 li
249.143 360.378 li
249.143 361.132 li
249.143 361.375 249.103 361.567 249.022 361.707 cv
248.942 361.846 248.807 361.964 248.615 362.061 cv
f
252.406 361.26 mo
252.064 361.26 251.79 361.15 251.585 360.928 cv
251.38 360.707 251.263 360.409 251.233 360.033 cv
251.692 359.894 li
251.722 360.222 251.797 360.463 251.918 360.618 cv
252.04 360.771 252.21 360.848 252.429 360.848 cv
252.618 360.848 252.768 360.793 252.877 360.681 cv
252.98 360.574 253.033 360.431 253.033 360.251 cv
253.033 360.226 li
253.025 359.939 252.851 359.653 252.509 359.366 cv
251.922 358.867 li
251.716 358.695 251.565 358.526 251.471 358.361 cv
251.378 358.201 251.332 358.013 251.332 357.799 cv
251.332 357.484 251.427 357.24 251.616 357.068 cv
251.801 356.898 252.05 356.812 252.363 356.812 cv
252.681 356.812 252.926 356.915 253.097 357.119 cv
253.268 357.323 253.363 357.598 253.383 357.946 cv
252.997 358.073 li
252.979 357.784 252.921 357.57 252.82 357.43 cv
252.719 357.291 252.574 357.22 252.385 357.22 cv
252.215 357.22 252.079 357.268 251.977 357.363 cv
251.877 357.455 251.827 357.579 251.827 357.734 cv
251.827 357.875 251.853 357.996 251.904 358.096 cv
251.955 358.198 252.048 358.306 252.185 358.422 cv
252.793 358.969 li
252.902 359.064 252.991 359.147 253.061 359.218 cv
253.13 359.29 253.203 359.378 253.281 359.484 cv
253.358 359.59 253.416 359.705 253.454 359.827 cv
253.491 359.95 253.512 360.082 253.514 360.222 cv
253.514 360.552 253.414 360.808 253.215 360.989 cv
253.016 361.169 252.746 361.26 252.406 361.26 cv
f
255.212 361.26 mo
254.799 361.26 254.501 361.132 254.319 360.877 cv
254.137 360.622 254.046 360.187 254.046 359.57 cv
254.046 358.481 li
254.046 358.061 254.089 357.727 254.175 357.481 cv
254.262 357.235 254.388 357.061 254.554 356.961 cv
254.721 356.862 254.94 356.812 255.215 356.812 cv
255.397 356.812 255.553 356.836 255.682 356.883 cv
255.81 356.931 255.917 356.999 256.002 357.085 cv
256.087 357.173 256.154 357.291 256.204 357.441 cv
256.254 357.59 256.288 357.755 256.308 357.936 cv
256.327 358.117 256.337 358.335 256.337 358.59 cv
256.333 358.98 li
254.592 358.98 li
254.592 359.625 li
254.592 360.072 254.636 360.387 254.722 360.572 cv
254.808 360.756 254.97 360.848 255.208 360.848 cv
255.397 360.848 255.543 360.789 255.645 360.668 cv
255.747 360.548 255.798 360.33 255.798 360.014 cv
255.798 359.715 li
256.333 359.715 li
256.333 359.956 li
256.333 360.374 256.246 360.696 256.071 360.921 cv
255.897 361.147 255.609 361.26 255.212 361.26 cv
255.212 357.22 mo
254.98 357.22 254.82 357.3 254.729 357.46 cv
254.638 357.622 254.592 357.926 254.592 358.375 cv
254.592 358.667 li
255.798 358.667 li
255.798 358.31 li
255.798 358.159 255.794 358.034 255.787 357.934 cv
255.779 357.834 255.765 357.736 255.741 357.637 cv
255.719 357.54 255.687 357.462 255.645 357.406 cv
255.474 357.271 li
255.401 357.238 255.313 357.22 255.212 357.22 cv
f
258.034 361.26 mo
257.663 361.26 257.396 361.121 257.234 360.841 cv
257.073 360.562 256.992 360.098 256.992 359.45 cv
256.992 358.652 li
256.992 358.414 257.001 358.206 257.019 358.026 cv
257.035 357.846 257.066 357.677 257.113 357.519 cv
257.159 357.361 257.22 357.233 257.295 357.133 cv
257.37 357.034 257.468 356.956 257.586 356.898 cv
257.705 356.841 257.846 356.812 258.009 356.812 cv
258.293 356.815 258.547 356.94 258.771 357.188 cv
258.771 355.152 li
259.316 355.152 li
259.316 361.191 li
258.771 361.191 li
258.771 360.885 li
258.552 361.132 258.307 361.257 258.034 361.26 cv
258.129 357.243 mo
257.898 357.243 257.742 357.338 257.661 357.532 cv
257.58 357.725 257.539 358.04 257.539 358.477 cv
257.539 359.494 li
257.539 359.964 257.58 360.304 257.663 360.513 cv
257.745 360.722 257.905 360.827 258.144 360.827 cv
258.354 360.827 258.563 360.732 258.771 360.542 cv
258.771 357.548 li
258.552 357.344 258.338 357.243 258.129 357.243 cv
f
262.635 361.26 mo
262.264 361.26 261.997 361.121 261.835 360.841 cv
261.674 360.562 261.593 360.098 261.593 359.45 cv
261.593 358.652 li
261.593 358.414 261.602 358.206 261.619 358.026 cv
261.636 357.846 261.667 357.677 261.714 357.519 cv
261.76 357.361 261.82 357.233 261.896 357.133 cv
261.971 357.034 262.068 356.956 262.186 356.898 cv
262.306 356.841 262.446 356.812 262.609 356.812 cv
262.893 356.815 263.147 356.94 263.371 357.188 cv
263.371 355.152 li
263.917 355.152 li
263.917 361.191 li
263.371 361.191 li
263.371 360.885 li
263.152 361.132 262.907 361.257 262.635 361.26 cv
262.729 357.243 mo
262.499 357.243 262.343 357.338 262.262 357.532 cv
262.181 357.725 262.14 358.04 262.14 358.477 cv
262.14 359.494 li
262.14 359.964 262.181 360.304 262.264 360.513 cv
262.346 360.722 262.506 360.827 262.744 360.827 cv
262.955 360.827 263.164 360.732 263.371 360.542 cv
263.371 357.548 li
263.152 357.344 262.939 357.243 262.729 357.243 cv
f
265.822 361.26 mo
265.602 361.26 265.416 361.225 265.265 361.155 cv
265.114 361.085 264.996 360.977 264.91 360.834 cv
264.823 360.691 264.763 360.523 264.725 360.33 cv
264.689 360.136 264.671 359.904 264.671 359.632 cv
264.671 358.437 li
264.671 357.888 264.756 357.48 264.927 357.213 cv
265.097 356.946 265.395 356.812 265.822 356.812 cv
266.252 356.812 266.552 356.946 266.721 357.211 cv
266.889 357.477 266.974 357.886 266.974 358.437 cv
266.974 359.632 li
266.974 359.904 266.955 360.136 266.919 360.33 cv
266.883 360.523 266.821 360.691 266.735 360.834 cv
266.648 360.977 266.53 361.085 266.38 361.155 cv
266.229 361.225 266.043 361.26 265.822 361.26 cv
265.822 357.22 mo
265.731 357.22 265.65 357.233 265.582 357.257 cv
265.414 357.376 li
265.309 357.55 li
265.282 357.612 265.262 357.693 265.249 357.792 cv
265.235 357.892 265.227 357.986 265.224 358.075 cv
265.22 358.163 265.218 358.274 265.218 358.408 cv
265.218 359.661 li
265.218 359.794 265.22 359.906 265.224 359.995 cv
265.227 360.082 265.235 360.177 265.249 360.277 cv
265.262 360.376 265.282 360.457 265.309 360.519 cv
265.414 360.694 li
265.582 360.812 li
265.65 360.836 265.731 360.848 265.822 360.848 cv
265.932 360.848 266.023 360.829 266.1 360.789 cv
266.276 360.637 li
266.318 360.577 266.351 360.491 266.372 360.378 cv
266.395 360.267 266.408 360.16 266.414 360.058 cv
266.42 359.956 266.424 359.824 266.424 359.661 cv
266.424 358.408 li
266.424 358.246 266.42 358.113 266.414 358.011 cv
266.408 357.909 266.395 357.802 266.372 357.69 cv
266.351 357.579 266.318 357.493 266.276 357.432 cv
266.1 357.281 li
266.023 357.241 265.932 357.22 265.822 357.22 cv
f
301.716 362.61 mo
301.716 356.877 li
302.256 356.877 li
302.256 357.237 li
302.49 356.958 302.769 356.814 303.084 356.814 cv
303.246 356.814 303.39 356.841 303.507 356.913 cv
303.624 356.976 303.723 357.057 303.795 357.165 cv
303.858 357.273 303.912 357.399 303.957 357.552 cv
304.002 357.714 304.029 357.867 304.038 358.02 cv
304.056 358.164 304.065 358.344 304.065 358.533 cv
304.065 359.442 li
304.065 359.667 304.056 359.874 304.029 360.054 cv
304.011 360.234 303.975 360.405 303.93 360.558 cv
303.885 360.711 303.822 360.837 303.741 360.936 cv
303.66 361.035 303.561 361.116 303.444 361.17 cv
303.327 361.233 303.183 361.26 303.03 361.26 cv
302.751 361.26 302.49 361.125 302.256 360.846 cv
302.256 362.61 li
301.716 362.61 li
302.256 357.57 mo
302.256 360.513 li
302.454 360.72 302.688 360.828 302.94 360.828 cv
303.039 360.828 303.12 360.81 303.192 360.765 cv
303.354 360.603 li
303.399 360.531 303.426 360.441 303.453 360.324 cv
303.48 360.198 303.498 360.072 303.507 359.937 cv
303.516 359.802 303.516 359.64 303.516 359.451 cv
303.516 358.533 li
303.516 358.074 303.48 357.741 303.399 357.543 cv
303.318 357.345 303.165 357.246 302.931 357.246 cv
302.706 357.246 302.481 357.354 302.256 357.57 cv
357.588 360.873 mo
357.408 360.621 357.318 360.189 357.318 359.568 cv
357.318 358.479 li
357.318 358.065 357.354 357.723 357.444 357.48 cv
357.534 357.237 357.66 357.057 357.822 356.958 cv
357.993 356.859 358.209 356.814 358.488 356.814 cv
358.668 356.814 358.821 356.832 358.947 356.886 cv
359.082 356.931 359.19 357.003 359.271 357.084 cv
359.352 357.174 359.424 357.291 359.478 357.444 cv
359.523 357.588 359.559 357.759 359.577 357.939 cv
359.595 358.119 359.604 358.335 359.604 358.587 cv
359.604 358.983 li
357.858 358.983 li
357.858 359.622 li
357.858 360.072 357.903 360.387 357.993 360.576 cv
358.074 360.756 358.236 360.846 358.479 360.846 cv
358.668 360.846 358.812 360.792 358.911 360.666 cv
359.019 360.549 359.064 360.333 359.064 360.018 cv
359.064 359.712 li
359.604 359.712 li
359.604 359.955 li
359.604 360.378 359.514 360.693 359.343 360.918 cv
359.163 361.143 358.884 361.26 358.479 361.26 cv
358.065 361.26 357.768 361.134 357.588 360.873 cv
358.002 357.462 mo
357.903 357.624 357.858 357.93 357.858 358.371 cv
357.858 358.668 li
359.064 358.668 li
359.064 358.308 li
359.064 358.155 359.064 358.038 359.055 357.93 cv
359.046 357.831 359.037 357.732 359.01 357.633 cv
358.992 357.543 358.956 357.462 358.911 357.408 cv
358.74 357.273 li
358.668 357.237 358.587 357.219 358.479 357.219 cv
358.254 357.219 358.092 357.3 358.002 357.462 cv
352.719 361.152 mo
352.566 361.08 352.449 360.981 352.359 360.837 cv
352.269 360.693 352.215 360.522 352.179 360.333 cv
352.143 360.135 352.125 359.901 352.125 359.631 cv
352.125 358.434 li
352.125 357.885 352.206 357.48 352.377 357.21 cv
352.548 356.949 352.845 356.814 353.268 356.814 cv
353.7 356.814 353.997 356.949 354.168 357.21 cv
354.339 357.48 354.42 357.885 354.42 358.434 cv
354.42 359.631 li
354.42 359.901 354.402 360.135 354.366 360.333 cv
354.33 360.522 354.267 360.693 354.186 360.837 cv
354.096 360.981 353.979 361.08 353.826 361.152 cv
353.682 361.224 353.493 361.26 353.268 361.26 cv
353.052 361.26 352.863 361.224 352.719 361.152 cv
353.034 357.255 mo
352.863 357.372 li
352.755 357.552 li
352.728 357.615 352.71 357.696 352.701 357.795 cv
352.683 357.894 352.674 357.984 352.674 358.074 cv
352.674 358.164 352.665 358.272 352.665 358.407 cv
352.665 359.658 li
352.665 359.793 352.674 359.91 352.674 359.991 cv
352.674 360.081 352.683 360.18 352.701 360.279 cv
352.71 360.378 352.728 360.459 352.755 360.522 cv
352.863 360.693 li
353.034 360.81 li
353.097 360.837 353.178 360.846 353.268 360.846 cv
353.385 360.846 353.475 360.828 353.547 360.792 cv
353.727 360.639 li
353.772 360.576 353.799 360.495 353.826 360.378 cv
353.844 360.27 353.862 360.162 353.862 360.054 cv
353.871 359.955 353.871 359.82 353.871 359.658 cv
353.871 358.407 li
353.871 358.245 353.871 358.11 353.862 358.011 cv
353.862 357.912 353.844 357.804 353.826 357.687 cv
353.799 357.579 353.772 357.489 353.727 357.435 cv
353.547 357.282 li
353.475 357.237 353.385 357.219 353.268 357.219 cv
353.178 357.219 353.097 357.237 353.034 357.255 cv
349.65 360.846 mo
349.65 361.188 li
349.101 361.188 li
349.101 355.149 li
349.65 355.149 li
349.65 357.237 li
349.884 356.958 350.154 356.814 350.478 356.814 cv
350.631 356.814 350.775 356.841 350.892 356.913 cv
351.018 356.976 351.108 357.057 351.18 357.165 cv
351.252 357.273 351.306 357.399 351.351 357.552 cv
351.387 357.714 351.414 357.867 351.432 358.02 cv
351.441 358.164 351.45 358.344 351.45 358.533 cv
351.45 359.442 li
351.45 359.667 351.441 359.874 351.423 360.054 cv
351.405 360.234 351.369 360.405 351.324 360.558 cv
351.27 360.711 351.207 360.837 351.135 360.936 cv
351.054 361.035 350.955 361.116 350.838 361.17 cv
350.721 361.233 350.577 361.26 350.424 361.26 cv
350.136 361.26 349.884 361.125 349.65 360.846 cv
349.65 357.57 mo
349.65 360.513 li
349.848 360.72 350.073 360.828 350.325 360.828 cv
350.559 360.828 350.712 360.72 350.793 360.504 cv
350.865 360.288 350.901 359.937 350.901 359.451 cv
350.901 358.533 li
350.901 358.074 350.865 357.741 350.793 357.543 cv
350.712 357.345 350.559 357.246 350.325 357.246 cv
350.1 357.246 349.875 357.354 349.65 357.57 cv
346.257 360.981 mo
346.095 360.792 346.014 360.567 346.014 360.288 cv
346.014 360.144 346.032 360.018 346.05 359.91 cv
346.077 359.793 346.122 359.685 346.185 359.586 cv
346.257 359.487 346.329 359.397 346.41 359.325 cv
346.482 359.244 346.599 359.163 346.743 359.082 cv
346.887 358.992 347.04 358.911 347.184 358.839 cv
347.328 358.767 347.517 358.677 347.751 358.578 cv
347.751 358.263 li
347.751 357.867 347.715 357.597 347.643 357.444 cv
347.562 357.3 347.427 357.228 347.22 357.228 cv
346.815 357.228 346.617 357.471 346.617 357.966 cv
346.617 358.119 li
346.077 358.101 li
346.086 357.975 li
346.104 357.561 346.212 357.273 346.401 357.084 cv
346.599 356.904 346.878 356.814 347.247 356.814 cv
347.625 356.814 347.895 356.922 348.057 357.147 cv
348.219 357.381 348.3 357.741 348.3 358.236 cv
348.3 360.333 li
348.3 360.684 348.309 360.963 348.336 361.188 cv
347.859 361.188 li
347.778 360.594 li
347.706 360.783 347.598 360.945 347.445 361.071 cv
347.283 361.197 347.103 361.26 346.887 361.26 cv
346.626 361.26 346.419 361.17 346.257 360.981 cv
347.688 358.974 mo
347.562 359.037 347.472 359.082 347.409 359.118 cv
347.184 359.244 li
346.986 359.37 li
346.833 359.496 li
346.707 359.631 li
346.635 359.784 li
346.581 359.955 li
346.563 360.162 li
346.563 360.378 346.608 360.531 346.707 360.639 cv
346.797 360.738 346.914 360.792 347.058 360.792 cv
347.211 360.792 347.337 360.738 347.463 360.639 cv
347.589 360.54 347.679 360.414 347.751 360.279 cv
347.751 358.938 li
347.688 358.974 li
338.085 361.017 mo
337.977 360.855 337.914 360.63 337.914 360.333 cv
337.914 356.877 li
338.463 356.877 li
338.463 360.225 li
338.463 360.441 338.499 360.594 338.562 360.684 cv
338.634 360.783 338.733 360.828 338.877 360.828 cv
339.12 360.828 339.372 360.684 339.642 360.405 cv
339.642 356.877 li
340.182 356.877 li
340.182 361.188 li
339.642 361.188 li
339.642 360.711 li
339.318 361.08 338.967 361.26 338.58 361.26 cv
338.364 361.26 338.202 361.179 338.085 361.017 cv
328.356 361.017 mo
328.239 360.855 328.185 360.63 328.185 360.333 cv
328.185 356.877 li
328.734 356.877 li
328.734 360.225 li
328.734 360.441 328.77 360.594 328.833 360.684 cv
328.896 360.783 329.004 360.828 329.139 360.828 cv
329.391 360.828 329.643 360.684 329.904 360.405 cv
329.904 356.877 li
330.453 356.877 li
330.453 361.188 li
329.904 361.188 li
329.904 360.711 li
329.589 361.08 329.229 361.26 328.851 361.26 cv
328.635 361.26 328.473 361.179 328.356 361.017 cv
325.296 360.837 mo
325.143 360.558 325.062 360.099 325.062 359.451 cv
325.062 358.65 li
325.062 358.416 325.062 358.209 325.08 358.029 cv
325.098 357.849 325.134 357.678 325.179 357.516 cv
325.224 357.363 325.287 357.237 325.359 357.129 cv
325.44 357.03 325.53 356.958 325.647 356.895 cv
325.773 356.841 325.908 356.814 326.07 356.814 cv
326.358 356.814 326.61 356.94 326.835 357.192 cv
326.835 355.149 li
327.384 355.149 li
327.384 361.188 li
326.835 361.188 li
326.835 360.882 li
326.619 361.134 326.367 361.26 326.097 361.26 cv
325.728 361.26 325.458 361.125 325.296 360.837 cv
325.728 357.534 mo
325.647 357.723 325.602 358.038 325.602 358.479 cv
325.602 359.496 li
325.602 359.964 325.647 360.306 325.728 360.513 cv
325.809 360.72 325.971 360.828 326.205 360.828 cv
326.421 360.828 326.628 360.729 326.835 360.54 cv
326.835 357.552 li
326.619 357.345 326.403 357.246 326.196 357.246 cv
325.962 357.246 325.809 357.336 325.728 357.534 cv
320.697 360.837 mo
320.535 360.558 320.454 360.099 320.454 359.451 cv
320.454 358.65 li
320.454 358.416 320.463 358.209 320.481 358.029 cv
320.499 357.849 320.535 357.678 320.58 357.516 cv
320.625 357.363 320.688 357.237 320.76 357.129 cv
320.832 357.03 320.931 356.958 321.048 356.895 cv
321.174 356.841 321.309 356.814 321.471 356.814 cv
321.759 356.814 322.011 356.94 322.236 357.192 cv
322.236 355.149 li
322.785 355.149 li
322.785 361.188 li
322.236 361.188 li
322.236 360.882 li
322.02 361.134 321.768 361.26 321.498 361.26 cv
321.129 361.26 320.859 361.125 320.697 360.837 cv
321.129 357.534 mo
321.048 357.723 321.003 358.038 321.003 358.479 cv
321.003 359.496 li
321.003 359.964 321.048 360.306 321.129 360.513 cv
321.21 360.72 321.372 360.828 321.606 360.828 cv
321.822 360.828 322.029 360.729 322.236 360.54 cv
322.236 357.552 li
322.02 357.345 321.804 357.246 321.597 357.246 cv
321.363 357.246 321.21 357.336 321.129 357.534 cv
316.683 361.17 mo
316.539 361.116 316.431 361.035 316.35 360.945 cv
316.269 360.855 316.197 360.729 316.152 360.576 cv
316.107 360.423 316.071 360.27 316.062 360.108 cv
316.044 359.955 316.035 359.766 316.035 359.559 cv
316.035 358.551 li
316.035 358.236 316.053 357.975 316.089 357.768 cv
316.116 357.561 316.179 357.381 316.269 357.237 cv
316.35 357.084 316.467 356.976 316.62 356.913 cv
316.773 356.85 316.962 356.814 317.187 356.814 cv
317.367 356.814 317.52 356.832 317.655 356.877 cv
317.781 356.922 317.889 356.985 317.97 357.057 cv
318.051 357.138 318.114 357.237 318.168 357.354 cv
318.213 357.471 318.24 357.597 318.267 357.732 cv
318.285 357.858 318.294 358.02 318.294 358.191 cv
318.294 358.398 li
317.781 358.398 li
317.781 358.191 li
317.781 357.822 317.736 357.57 317.655 357.426 cv
317.565 357.291 317.412 357.219 317.196 357.219 cv
316.944 357.219 316.782 357.309 316.701 357.489 cv
316.62 357.66 316.584 357.984 316.584 358.461 cv
316.584 359.667 li
316.584 360.108 316.629 360.414 316.71 360.594 cv
316.8 360.765 316.962 360.846 317.196 360.846 cv
317.304 360.846 317.385 360.837 317.457 360.801 cv
317.628 360.684 li
317.727 360.477 li
317.754 360.387 317.763 360.288 317.772 360.189 cv
317.781 360.09 317.781 359.955 317.781 359.811 cv
317.781 359.568 li
318.294 359.568 li
318.294 359.784 li
318.294 359.973 318.285 360.135 318.267 360.27 cv
318.249 360.414 318.222 360.549 318.168 360.675 cv
318.123 360.801 318.06 360.909 317.979 360.99 cv
317.907 361.071 317.799 361.143 317.664 361.188 cv
317.529 361.233 317.376 361.26 317.187 361.26 cv
316.989 361.26 316.827 361.233 316.683 361.17 cv
305.334 361.152 mo
305.19 361.08 305.064 360.981 304.983 360.837 cv
304.893 360.693 304.83 360.522 304.794 360.333 cv
304.758 360.135 304.74 359.901 304.74 359.631 cv
304.74 358.434 li
304.74 357.885 304.83 357.48 305.001 357.21 cv
305.172 356.949 305.469 356.814 305.892 356.814 cv
306.324 356.814 306.621 356.949 306.792 357.21 cv
306.963 357.48 307.044 357.885 307.044 358.434 cv
307.044 359.631 li
307.044 359.901 307.026 360.135 306.99 360.333 cv
306.954 360.522 306.891 360.693 306.81 360.837 cv
306.72 360.981 306.603 361.08 306.45 361.152 cv
306.297 361.224 306.117 361.26 305.892 361.26 cv
305.676 361.26 305.487 361.224 305.334 361.152 cv
305.658 357.255 mo
305.487 357.372 li
305.379 357.552 li
305.352 357.615 305.334 357.696 305.316 357.795 cv
305.307 357.894 305.298 357.984 305.298 358.074 cv
305.289 358.164 305.289 358.272 305.289 358.407 cv
305.289 359.658 li
305.289 359.793 305.289 359.91 305.298 359.991 cv
305.298 360.081 305.307 360.18 305.316 360.279 cv
305.334 360.378 305.352 360.459 305.379 360.522 cv
305.487 360.693 li
305.658 360.81 li
305.721 360.837 305.802 360.846 305.892 360.846 cv
306 360.846 306.099 360.828 306.171 360.792 cv
306.351 360.639 li
306.387 360.576 306.423 360.495 306.441 360.378 cv
306.468 360.27 306.477 360.162 306.486 360.054 cv
306.495 359.955 306.495 359.82 306.495 359.658 cv
306.495 358.407 li
306.495 358.245 306.495 358.11 306.486 358.011 cv
306.477 357.912 306.468 357.804 306.441 357.687 cv
306.423 357.579 306.387 357.489 306.351 357.435 cv
306.171 357.282 li
306.099 357.237 306 357.219 305.892 357.219 cv
305.802 357.219 305.721 357.237 305.658 357.255 cv
294.147 360.873 mo
293.967 360.621 293.877 360.189 293.877 359.568 cv
293.877 358.479 li
293.877 358.065 293.922 357.723 294.003 357.48 cv
294.093 357.237 294.219 357.057 294.39 356.958 cv
294.552 356.859 294.768 356.814 295.047 356.814 cv
295.227 356.814 295.38 356.832 295.515 356.886 cv
295.641 356.931 295.749 357.003 295.83 357.084 cv
295.92 357.174 295.983 357.291 296.037 357.444 cv
296.082 357.588 296.118 357.759 296.136 357.939 cv
296.163 358.119 296.172 358.335 296.172 358.587 cv
296.163 358.983 li
294.426 358.983 li
294.426 359.622 li
294.426 360.072 294.471 360.387 294.552 360.576 cv
294.642 360.756 294.804 360.846 295.038 360.846 cv
295.227 360.846 295.371 360.792 295.479 360.666 cv
295.578 360.549 295.632 360.333 295.632 360.018 cv
295.632 359.712 li
296.163 359.712 li
296.163 359.955 li
296.163 360.378 296.073 360.693 295.902 360.918 cv
295.731 361.143 295.443 361.26 295.047 361.26 cv
294.633 361.26 294.336 361.134 294.147 360.873 cv
294.561 357.462 mo
294.471 357.624 294.426 357.93 294.426 358.371 cv
294.426 358.668 li
295.632 358.668 li
295.632 358.308 li
295.632 358.155 295.623 358.038 295.614 357.93 cv
295.614 357.831 295.596 357.732 295.569 357.633 cv
295.551 357.543 295.515 357.462 295.479 357.408 cv
295.308 357.273 li
295.236 357.237 295.146 357.219 295.047 357.219 cv
294.813 357.219 294.651 357.3 294.561 357.462 cv
287.433 360.837 mo
287.271 360.558 287.19 360.099 287.19 359.451 cv
287.19 358.65 li
287.19 358.416 287.199 358.209 287.217 358.029 cv
287.235 357.849 287.262 357.678 287.307 357.516 cv
287.352 357.363 287.415 357.237 287.496 357.129 cv
287.568 357.03 287.667 356.958 287.784 356.895 cv
287.901 356.841 288.045 356.814 288.207 356.814 cv
288.486 356.814 288.747 356.94 288.963 357.192 cv
288.963 355.149 li
289.512 355.149 li
289.512 361.188 li
288.963 361.188 li
288.963 360.882 li
288.747 361.134 288.504 361.26 288.234 361.26 cv
287.856 361.26 287.595 361.125 287.433 360.837 cv
287.856 357.534 mo
287.775 357.723 287.739 358.038 287.739 358.479 cv
287.739 359.496 li
287.739 359.964 287.775 360.306 287.856 360.513 cv
287.946 360.72 288.099 360.828 288.342 360.828 cv
288.549 360.828 288.765 360.729 288.963 360.54 cv
288.963 357.552 li
288.747 357.345 288.531 357.246 288.324 357.246 cv
288.099 357.246 287.937 357.336 287.856 357.534 cv
284.814 361.152 mo
284.661 361.08 284.544 360.981 284.454 360.837 cv
284.373 360.693 284.31 360.522 284.274 360.333 cv
284.238 360.135 284.22 359.901 284.22 359.631 cv
284.22 358.434 li
284.22 357.885 284.301 357.48 284.472 357.21 cv
284.643 356.949 284.94 356.814 285.372 356.814 cv
285.795 356.814 286.101 356.949 286.263 357.21 cv
286.434 357.48 286.524 357.885 286.524 358.434 cv
286.524 359.631 li
286.524 359.901 286.497 360.135 286.461 360.333 cv
286.425 360.522 286.371 360.693 286.281 360.837 cv
286.191 360.981 286.074 361.08 285.93 361.152 cv
285.777 361.224 285.588 361.26 285.372 361.26 cv
285.147 361.26 284.958 361.224 284.814 361.152 cv
285.129 357.255 mo
284.958 357.372 li
284.85 357.552 li
284.832 357.615 284.805 357.696 284.796 357.795 cv
284.778 357.894 284.769 357.984 284.769 358.074 cv
284.769 358.164 284.76 358.272 284.76 358.407 cv
284.76 359.658 li
284.76 359.793 284.769 359.91 284.769 359.991 cv
284.769 360.081 284.778 360.18 284.796 360.279 cv
284.805 360.378 284.832 360.459 284.85 360.522 cv
284.958 360.693 li
285.129 360.81 li
285.192 360.837 285.273 360.846 285.372 360.846 cv
285.48 360.846 285.57 360.828 285.642 360.792 cv
285.822 360.639 li
285.867 360.576 285.894 360.495 285.921 360.378 cv
285.939 360.27 285.957 360.162 285.957 360.054 cv
285.966 359.955 285.966 359.82 285.966 359.658 cv
285.966 358.407 li
285.966 358.245 285.966 358.11 285.957 358.011 cv
285.957 357.912 285.939 357.804 285.921 357.687 cv
285.894 357.579 285.867 357.489 285.822 357.435 cv
285.642 357.282 li
285.57 357.237 285.48 357.219 285.372 357.219 cv
285.273 357.219 285.192 357.237 285.129 357.255 cv
276.948 360.927 mo
276.75 360.711 276.633 360.405 276.597 360.036 cv
277.056 359.892 li
277.092 360.225 277.164 360.459 277.281 360.621 cv
277.407 360.774 277.578 360.846 277.794 360.846 cv
277.983 360.846 278.136 360.792 278.244 360.684 cv
278.352 360.576 278.397 360.432 278.397 360.252 cv
278.397 360.225 li
278.397 359.937 278.217 359.649 277.875 359.37 cv
277.29 358.866 li
277.083 358.695 276.93 358.524 276.84 358.362 cv
276.741 358.2 276.696 358.011 276.696 357.795 cv
276.696 357.48 276.795 357.237 276.984 357.066 cv
277.164 356.895 277.416 356.814 277.731 356.814 cv
278.046 356.814 278.289 356.913 278.46 357.12 cv
278.631 357.327 278.73 357.597 278.748 357.948 cv
278.361 358.074 li
278.343 357.786 278.289 357.57 278.19 357.426 cv
278.082 357.291 277.938 357.219 277.749 357.219 cv
277.578 357.219 277.443 357.264 277.344 357.363 cv
277.245 357.453 277.191 357.579 277.191 357.732 cv
277.191 357.876 277.218 357.993 277.272 358.092 cv
277.317 358.2 277.416 358.308 277.551 358.425 cv
278.163 358.965 li
278.271 359.064 278.361 359.145 278.424 359.217 cv
278.496 359.289 278.568 359.379 278.649 359.487 cv
278.73 359.586 278.784 359.703 278.82 359.829 cv
278.856 359.946 278.874 360.081 278.883 360.225 cv
278.883 360.549 278.784 360.81 278.586 360.99 cv
278.379 361.17 278.109 361.26 277.776 361.26 cv
277.434 361.26 277.155 361.152 276.948 360.927 cv
273.852 361.017 mo
273.735 360.855 273.681 360.63 273.681 360.333 cv
273.681 356.877 li
274.23 356.877 li
274.23 360.225 li
274.23 360.441 274.266 360.594 274.329 360.684 cv
274.392 360.783 274.5 360.828 274.644 360.828 cv
274.887 360.828 275.139 360.684 275.409 360.405 cv
275.409 356.877 li
275.949 356.877 li
275.949 361.188 li
275.409 361.188 li
275.409 360.711 li
275.085 361.08 274.734 361.26 274.347 361.26 cv
274.131 361.26 273.969 361.179 273.852 361.017 cv
269.442 360.873 mo
269.253 360.621 269.163 360.189 269.163 359.568 cv
269.163 358.479 li
269.163 358.065 269.208 357.723 269.298 357.48 cv
269.379 357.237 269.505 357.057 269.676 356.958 cv
269.838 356.859 270.063 356.814 270.333 356.814 cv
270.522 356.814 270.675 356.832 270.801 356.886 cv
270.927 356.931 271.035 357.003 271.125 357.084 cv
271.206 357.174 271.278 357.291 271.323 357.444 cv
271.377 357.588 271.404 357.759 271.431 357.939 cv
271.449 358.119 271.458 358.335 271.458 358.587 cv
271.449 358.983 li
269.712 358.983 li
269.712 359.622 li
269.712 360.072 269.757 360.387 269.838 360.576 cv
269.928 360.756 270.09 360.846 270.324 360.846 cv
270.522 360.846 270.666 360.792 270.765 360.666 cv
270.864 360.549 270.918 360.333 270.918 360.018 cv
270.918 359.712 li
271.449 359.712 li
271.449 359.955 li
271.449 360.378 271.368 360.693 271.188 360.918 cv
271.017 361.143 270.729 361.26 270.333 361.26 cv
269.919 361.26 269.622 361.134 269.442 360.873 cv
269.847 357.462 mo
269.757 357.624 269.712 357.93 269.712 358.371 cv
269.712 358.668 li
270.918 358.668 li
270.918 358.308 li
270.918 358.155 270.918 358.038 270.909 357.93 cv
270.9 357.831 270.882 357.732 270.864 357.633 cv
270.837 357.543 270.81 357.462 270.765 357.408 cv
270.594 357.273 li
270.522 357.237 270.432 357.219 270.333 357.219 cv
270.099 357.219 269.937 357.3 269.847 357.462 cv
341.433 360.999 mo
341.325 360.846 341.262 360.603 341.262 360.297 cv
341.262 357.246 li
340.74 357.246 li
340.74 356.877 li
341.262 356.877 li
341.262 355.545 li
341.811 355.545 li
341.811 356.877 li
342.522 356.877 li
342.522 357.246 li
341.811 357.246 li
341.811 360.243 li
341.811 360.459 341.838 360.612 341.883 360.693 cv
341.937 360.774 342.036 360.819 342.198 360.819 cv
342.297 360.819 342.396 360.81 342.504 360.783 cv
342.504 361.197 li
342.342 361.233 342.189 361.242 342.045 361.242 cv
341.748 361.242 341.55 361.161 341.433 360.999 cv
334.755 360.999 mo
334.647 360.846 334.584 360.603 334.584 360.297 cv
334.584 357.246 li
334.062 357.246 li
334.062 356.877 li
334.584 356.877 li
334.584 355.545 li
335.133 355.545 li
335.133 356.877 li
335.844 356.877 li
335.844 357.246 li
335.133 357.246 li
335.133 360.243 li
335.133 360.459 335.151 360.612 335.205 360.693 cv
335.259 360.774 335.358 360.819 335.52 360.819 cv
335.619 360.819 335.718 360.81 335.817 360.783 cv
335.817 361.197 li
335.655 361.233 335.502 361.242 335.358 361.242 cv
335.07 361.242 334.863 361.161 334.755 360.999 cv
292.284 360.999 mo
292.176 360.846 292.113 360.603 292.113 360.297 cv
292.113 357.246 li
291.591 357.246 li
291.591 356.877 li
292.113 356.877 li
292.113 355.545 li
292.662 355.545 li
292.662 356.877 li
293.382 356.877 li
293.382 357.246 li
292.662 357.246 li
292.662 360.243 li
292.662 360.459 292.689 360.612 292.734 360.693 cv
292.788 360.774 292.896 360.819 293.049 360.819 cv
293.148 360.819 293.247 360.81 293.355 360.783 cv
293.355 361.197 li
293.193 361.233 293.04 361.242 292.896 361.242 cv
292.599 361.242 292.401 361.161 292.284 360.999 cv
355.221 361.188 mo
355.221 356.877 li
355.761 356.877 li
355.761 357.471 li
355.896 357.255 356.049 357.093 356.229 356.985 cv
356.4 356.886 356.58 356.832 356.76 356.832 cv
356.85 356.832 li
356.85 357.426 li
356.778 357.39 356.688 357.381 356.589 357.381 cv
356.238 357.381 355.968 357.543 355.761 357.876 cv
355.761 361.188 li
355.221 361.188 li
344.709 361.188 mo
344.709 355.149 li
345.258 355.149 li
345.258 361.188 li
344.709 361.188 li
332.991 361.188 mo
332.991 357.849 li
332.991 357.624 332.955 357.471 332.892 357.381 cv
332.82 357.291 332.721 357.246 332.577 357.246 cv
332.343 357.246 332.091 357.372 331.83 357.642 cv
331.83 361.188 li
331.29 361.188 li
331.29 356.877 li
331.83 356.877 li
331.83 357.327 li
332.154 356.985 332.496 356.814 332.874 356.814 cv
333.081 356.814 333.252 356.895 333.36 357.048 cv
333.477 357.21 333.531 357.435 333.531 357.732 cv
333.531 361.188 li
332.991 361.188 li
323.676 361.188 mo
323.676 356.877 li
324.225 356.877 li
324.225 361.188 li
323.676 361.188 li
319.077 361.188 mo
319.077 356.877 li
319.626 356.877 li
319.626 361.188 li
319.077 361.188 li
314.766 361.188 mo
314.766 357.849 li
314.766 357.624 314.73 357.471 314.667 357.381 cv
314.595 357.291 314.496 357.246 314.352 357.246 cv
314.118 357.246 313.866 357.372 313.605 357.642 cv
313.605 361.188 li
313.065 361.188 li
313.065 356.877 li
313.605 356.877 li
313.605 357.327 li
313.929 356.985 314.271 356.814 314.649 356.814 cv
314.865 356.814 315.027 356.895 315.135 357.048 cv
315.252 357.21 315.315 357.435 315.315 357.732 cv
315.315 361.188 li
314.766 361.188 li
311.607 361.188 mo
311.607 356.877 li
312.147 356.877 li
312.147 361.188 li
311.607 361.188 li
307.836 361.188 mo
307.836 356.877 li
308.385 356.877 li
308.385 357.471 li
308.52 357.255 308.673 357.093 308.844 356.985 cv
309.024 356.886 309.204 356.832 309.384 356.832 cv
309.474 356.832 li
309.474 357.426 li
309.393 357.39 309.312 357.381 309.213 357.381 cv
308.862 357.381 308.592 357.543 308.385 357.876 cv
308.385 361.188 li
307.836 361.188 li
300.393 361.188 mo
300.393 357.804 li
300.393 357.57 300.357 357.408 300.285 357.309 cv
300.204 357.219 300.105 357.174 299.97 357.174 cv
299.691 357.174 299.421 357.327 299.151 357.624 cv
299.16 357.786 li
299.16 361.188 li
298.656 361.188 li
298.656 357.804 li
298.656 357.57 298.611 357.408 298.539 357.309 cv
298.467 357.219 298.359 357.174 298.224 357.174 cv
297.945 357.174 297.684 357.327 297.414 357.624 cv
297.414 361.188 li
296.901 361.188 li
296.901 356.877 li
297.414 356.877 li
297.414 357.318 li
297.711 356.976 298.044 356.805 298.431 356.805 cv
298.791 356.805 299.016 356.994 299.115 357.372 cv
299.412 356.994 299.772 356.805 300.177 356.805 cv
300.393 356.805 300.564 356.877 300.699 357.03 cv
300.843 357.183 300.906 357.435 300.906 357.786 cv
300.906 361.188 li
300.393 361.188 li
282.978 361.188 mo
282.978 357.804 li
282.978 357.57 282.942 357.408 282.87 357.309 cv
282.798 357.219 282.69 357.174 282.555 357.174 cv
282.285 357.174 282.015 357.327 281.745 357.624 cv
281.754 357.786 li
281.754 361.188 li
281.241 361.188 li
281.241 357.804 li
281.241 357.57 281.205 357.408 281.124 357.309 cv
281.052 357.219 280.944 357.174 280.809 357.174 cv
280.539 357.174 280.269 357.327 280.008 357.624 cv
280.008 361.188 li
279.495 361.188 li
279.495 356.877 li
280.008 356.877 li
280.008 357.318 li
280.296 356.976 280.638 356.805 281.025 356.805 cv
281.385 356.805 281.61 356.994 281.7 357.372 cv
281.997 356.994 282.357 356.805 282.762 356.805 cv
282.978 356.805 283.149 356.877 283.293 357.03 cv
283.428 357.183 283.5 357.435 283.5 357.786 cv
283.5 361.188 li
282.978 361.188 li
272.259 361.188 mo
272.259 356.877 li
272.799 356.877 li
272.799 361.188 li
272.259 361.188 li
323.676 356.283 mo
323.676 355.545 li
324.225 355.545 li
324.225 356.283 li
323.676 356.283 li
319.077 356.283 mo
319.077 355.545 li
319.626 355.545 li
319.626 356.283 li
319.077 356.283 li
311.607 356.283 mo
311.607 355.545 li
312.156 355.545 li
312.156 356.283 li
311.607 356.283 li
272.259 356.283 mo
272.259 355.545 li
272.808 355.545 li
272.808 356.283 li
272.259 356.283 li
346.41 353.664 mo
346.41 347.922 li
346.95 347.922 li
346.95 348.291 li
347.184 348.003 347.463 347.859 347.778 347.859 cv
347.94 347.859 348.084 347.895 348.201 347.958 cv
348.318 348.021 348.417 348.111 348.48 348.21 cv
348.552 348.318 348.606 348.444 348.651 348.606 cv
348.696 348.759 348.723 348.912 348.732 349.065 cv
348.75 349.218 348.759 349.389 348.759 349.578 cv
348.759 350.487 li
348.759 350.721 348.75 350.919 348.723 351.099 cv
348.705 351.279 348.669 351.45 348.624 351.603 cv
348.579 351.756 348.516 351.882 348.435 351.99 cv
348.354 352.089 348.255 352.17 348.138 352.224 cv
348.021 352.278 347.877 352.305 347.724 352.305 cv
347.445 352.305 347.184 352.17 346.95 351.9 cv
346.95 353.664 li
346.41 353.664 li
346.95 348.624 mo
346.95 351.558 li
347.148 351.774 347.382 351.873 347.634 351.873 cv
347.733 351.873 347.814 351.855 347.886 351.81 cv
348.048 351.648 li
348.093 351.585 348.12 351.486 348.147 351.369 cv
348.174 351.252 348.192 351.126 348.192 350.991 cv
348.201 350.856 348.21 350.685 348.21 350.496 cv
348.21 349.578 li
348.21 349.119 348.174 348.786 348.093 348.588 cv
348.012 348.39 347.859 348.291 347.625 348.291 cv
347.4 348.291 347.175 348.399 346.95 348.624 cv
361.8 353.619 mo
361.629 353.592 361.476 353.556 361.341 353.502 cv
361.206 353.439 361.107 353.367 361.035 353.268 cv
360.963 353.178 360.927 353.061 360.927 352.926 cv
360.927 352.719 360.999 352.53 361.134 352.35 cv
361.278 352.179 361.44 352.044 361.647 351.936 cv
361.512 351.9 361.395 351.846 361.305 351.774 cv
361.206 351.711 361.161 351.63 361.161 351.558 cv
361.161 351.324 361.332 351.036 361.674 350.685 cv
361.314 350.424 361.134 349.983 361.134 349.362 cv
361.134 349.155 361.161 348.966 361.206 348.786 cv
361.26 348.606 361.332 348.444 361.422 348.309 cv
361.521 348.165 361.647 348.057 361.8 347.976 cv
361.962 347.904 362.133 347.859 362.34 347.859 cv
362.772 347.859 363.087 348.039 363.267 348.399 cv
363.312 348.318 363.393 348.228 363.501 348.138 cv
363.609 348.039 363.726 347.967 363.852 347.913 cv
363.96 347.868 li
364.104 348.246 li
363.987 348.282 363.852 348.336 363.708 348.408 cv
363.564 348.48 363.456 348.552 363.402 348.624 cv
363.438 348.714 363.465 348.831 363.492 348.993 cv
363.519 349.146 363.537 349.272 363.537 349.38 cv
363.537 349.839 363.438 350.208 363.249 350.478 cv
363.06 350.748 362.763 350.883 362.349 350.883 cv
362.277 350.883 362.196 350.883 362.106 350.865 cv
362.007 350.847 361.944 350.829 361.908 350.82 cv
361.827 350.946 li
361.719 351.108 li
361.647 351.243 li
361.611 351.378 li
361.611 351.45 361.737 351.504 361.971 351.54 cv
362.025 351.558 362.142 351.576 362.34 351.603 cv
362.529 351.63 362.637 351.648 362.664 351.657 cv
363.024 351.72 363.285 351.837 363.474 351.99 cv
363.654 352.152 363.744 352.368 363.744 352.656 cv
363.744 352.998 363.627 353.25 363.384 353.412 cv
363.141 353.574 362.817 353.655 362.403 353.655 cv
362.178 353.655 361.971 353.646 361.8 353.619 cv
361.395 352.746 mo
361.395 352.917 361.476 353.034 361.629 353.106 cv
361.791 353.178 362.043 353.214 362.394 353.214 cv
362.682 353.214 362.898 353.169 363.069 353.079 cv
363.231 352.989 363.312 352.854 363.312 352.665 cv
363.312 352.512 363.258 352.386 363.141 352.296 cv
363.033 352.215 362.817 352.143 362.502 352.08 cv
361.944 352.008 li
361.584 352.233 361.395 352.485 361.395 352.746 cv
362.043 348.318 mo
361.836 348.498 li
361.782 348.579 361.737 348.66 361.71 348.768 cv
361.674 348.867 361.647 348.966 361.638 349.065 cv
361.629 349.155 361.62 349.254 361.62 349.362 cv
361.62 350.118 361.863 350.496 362.349 350.496 cv
362.466 350.496 362.574 350.469 362.664 350.424 cv
362.871 350.253 li
362.916 350.181 362.961 350.091 362.988 349.983 cv
363.015 349.884 363.033 349.785 363.042 349.686 cv
363.051 349.596 363.06 349.488 363.06 349.362 cv
363.06 348.624 362.817 348.246 362.349 348.246 cv
362.232 348.246 362.133 348.273 362.043 348.318 cv
304.776 352.872 mo
304.911 352.8 305.001 352.71 305.055 352.611 cv
305.109 352.521 305.136 352.395 305.136 352.242 cv
304.812 352.242 li
304.812 351.423 li
305.424 351.423 li
305.424 352.179 li
305.424 352.422 305.379 352.611 305.298 352.755 cv
305.217 352.89 305.082 353.016 304.893 353.106 cv
304.776 352.872 li
354.312 352.224 mo
354.177 352.161 354.06 352.089 353.979 351.99 cv
353.898 351.9 353.835 351.774 353.781 351.621 cv
353.736 351.468 353.709 351.315 353.691 351.162 cv
353.673 351 353.664 350.82 353.664 350.604 cv
353.664 349.596 li
353.664 349.281 353.682 349.02 353.718 348.813 cv
353.754 348.606 353.808 348.435 353.898 348.282 cv
353.979 348.138 354.105 348.03 354.249 347.958 cv
354.402 347.895 354.591 347.859 354.816 347.859 cv
354.996 347.859 355.149 347.886 355.284 347.922 cv
355.41 347.967 355.518 348.03 355.599 348.102 cv
355.68 348.183 355.743 348.282 355.797 348.399 cv
355.842 348.516 355.878 348.642 355.896 348.777 cv
355.914 348.912 355.923 349.065 355.923 349.245 cv
355.923 349.443 li
355.41 349.443 li
355.41 349.245 li
355.41 348.876 355.374 348.615 355.284 348.48 cv
355.194 348.336 355.041 348.264 354.825 348.264 cv
354.573 348.264 354.411 348.354 354.33 348.534 cv
354.249 348.705 354.213 349.038 354.213 349.506 cv
354.213 350.712 li
354.213 351.162 354.258 351.468 354.339 351.639 cv
354.429 351.81 354.591 351.9 354.825 351.9 cv
354.933 351.9 355.014 351.882 355.086 351.855 cv
355.257 351.729 li
355.356 351.522 li
355.383 351.432 355.392 351.333 355.401 351.234 cv
355.41 351.135 355.41 351.009 355.41 350.856 cv
355.41 350.622 li
355.923 350.622 li
355.923 350.829 li
355.923 351.018 355.914 351.18 355.896 351.324 cv
355.878 351.459 355.851 351.594 355.806 351.72 cv
355.752 351.855 355.689 351.954 355.608 352.044 cv
355.536 352.125 355.428 352.188 355.293 352.233 cv
355.158 352.287 355.005 352.305 354.816 352.305 cv
354.627 352.305 354.456 352.278 354.312 352.224 cv
351.207 351.972 mo
351 351.756 350.883 351.459 350.856 351.081 cv
351.315 350.946 li
351.342 351.27 351.414 351.513 351.54 351.666 cv
351.657 351.819 351.828 351.9 352.044 351.9 cv
352.233 351.9 352.386 351.837 352.494 351.729 cv
352.602 351.621 352.656 351.477 352.656 351.297 cv
352.656 351.27 li
352.647 350.991 352.467 350.703 352.125 350.415 cv
351.54 349.911 li
351.333 349.74 351.189 349.578 351.09 349.407 cv
351 349.245 350.955 349.065 350.955 348.849 cv
350.955 348.534 351.045 348.291 351.234 348.12 cv
351.423 347.949 351.666 347.859 351.981 347.859 cv
352.305 347.859 352.548 347.958 352.719 348.165 cv
352.89 348.372 352.98 348.642 353.007 348.993 cv
352.62 349.119 li
352.602 348.831 352.539 348.615 352.44 348.48 cv
352.341 348.336 352.197 348.264 352.008 348.264 cv
351.837 348.264 351.702 348.318 351.594 348.408 cv
351.495 348.498 351.45 348.624 351.45 348.786 cv
351.45 348.921 351.477 349.047 351.522 349.146 cv
351.576 349.245 351.666 349.353 351.801 349.47 cv
352.413 350.019 li
352.521 350.109 352.611 350.199 352.683 350.262 cv
352.746 350.334 352.827 350.424 352.899 350.532 cv
352.98 350.64 353.034 350.748 353.07 350.874 cv
353.115 351 353.133 351.126 353.133 351.27 cv
353.133 351.603 353.034 351.855 352.836 352.035 cv
352.638 352.215 352.368 352.305 352.026 352.305 cv
351.684 352.305 351.414 352.197 351.207 351.972 cv
341.964 351.891 mo
341.802 351.612 341.721 351.144 341.721 350.496 cv
341.721 349.704 li
341.721 349.461 341.73 349.254 341.748 349.074 cv
341.766 348.894 341.793 348.723 341.838 348.57 cv
341.892 348.408 341.946 348.282 342.027 348.183 cv
342.099 348.084 342.198 348.003 342.315 347.949 cv
342.432 347.886 342.576 347.859 342.738 347.859 cv
343.026 347.859 343.278 347.985 343.503 348.237 cv
343.503 346.203 li
344.043 346.203 li
344.043 352.242 li
343.503 352.242 li
343.503 351.936 li
343.278 352.179 343.035 352.305 342.765 352.305 cv
342.396 352.305 342.126 352.17 341.964 351.891 cv
342.387 348.579 mo
342.306 348.777 342.27 349.083 342.27 349.524 cv
342.27 350.541 li
342.27 351.009 342.306 351.351 342.396 351.558 cv
342.477 351.774 342.639 351.873 342.873 351.873 cv
343.08 351.873 343.296 351.783 343.503 351.594 cv
343.503 348.597 li
343.278 348.39 343.071 348.291 342.855 348.291 cv
342.63 348.291 342.468 348.39 342.387 348.579 cv
338.967 352.026 mo
338.805 351.846 338.724 351.612 338.724 351.342 cv
338.724 351.198 338.733 351.072 338.76 350.955 cv
338.778 350.838 338.823 350.739 338.895 350.64 cv
338.958 350.541 339.03 350.451 339.111 350.37 cv
339.192 350.298 339.3 350.217 339.444 350.127 cv
339.597 350.037 339.741 349.965 339.885 349.893 cv
340.029 349.821 340.218 349.731 340.461 349.623 cv
340.461 349.317 li
340.461 348.921 340.416 348.642 340.344 348.498 cv
340.272 348.345 340.128 348.273 339.921 348.273 cv
339.525 348.273 339.327 348.516 339.327 349.011 cv
339.327 349.164 li
338.787 349.146 li
338.787 349.02 li
338.805 348.615 338.913 348.318 339.102 348.138 cv
339.3 347.949 339.579 347.859 339.948 347.859 cv
340.335 347.859 340.605 347.976 340.767 348.201 cv
340.92 348.426 341.001 348.786 341.001 349.281 cv
341.001 351.378 li
341.001 351.729 341.019 352.017 341.046 352.242 cv
340.56 352.242 li
340.479 351.639 li
340.416 351.828 340.299 351.99 340.146 352.116 cv
339.993 352.242 339.804 352.305 339.588 352.305 cv
339.336 352.305 339.129 352.215 338.967 352.026 cv
340.389 350.019 mo
340.272 350.082 340.182 350.136 340.119 350.163 cv
339.885 350.289 li
339.687 350.424 li
339.534 350.541 li
339.417 350.685 li
339.336 350.829 li
339.282 351.009 li
339.264 351.207 li
339.264 351.423 339.309 351.576 339.408 351.684 cv
339.507 351.783 339.624 351.837 339.768 351.837 cv
339.912 351.837 340.047 351.792 340.164 351.684 cv
340.29 351.585 340.389 351.468 340.461 351.324 cv
340.461 349.983 li
340.389 350.019 li
332.298 352.062 mo
332.181 351.9 332.127 351.675 332.127 351.378 cv
332.127 347.922 li
332.676 347.922 li
332.676 351.27 li
332.676 351.486 332.712 351.648 332.775 351.738 cv
332.838 351.828 332.946 351.873 333.09 351.873 cv
333.333 351.873 333.585 351.738 333.855 351.45 cv
333.855 347.922 li
334.395 347.922 li
334.395 352.242 li
333.855 352.242 li
333.855 351.765 li
333.531 352.125 333.18 352.305 332.793 352.305 cv
332.577 352.305 332.415 352.224 332.298 352.062 cv
327.321 351.927 mo
327.141 351.666 327.042 351.234 327.042 350.622 cv
327.042 349.533 li
327.042 349.11 327.087 348.777 327.177 348.525 cv
327.258 348.282 327.384 348.111 327.555 348.012 cv
327.717 347.913 327.942 347.859 328.212 347.859 cv
328.401 347.859 328.554 347.886 328.68 347.931 cv
328.815 347.976 328.914 348.048 329.004 348.129 cv
329.085 348.219 329.157 348.336 329.202 348.489 cv
329.256 348.642 329.292 348.804 329.31 348.984 cv
329.328 349.164 329.337 349.38 329.337 349.641 cv
329.337 350.028 li
327.591 350.028 li
327.591 350.676 li
327.591 351.117 327.636 351.432 327.726 351.621 cv
327.807 351.801 327.969 351.9 328.212 351.9 cv
328.401 351.9 328.545 351.837 328.644 351.72 cv
328.743 351.594 328.797 351.378 328.797 351.063 cv
328.797 350.766 li
329.337 350.766 li
329.337 351 li
329.337 351.423 329.247 351.747 329.067 351.972 cv
328.896 352.197 328.608 352.305 328.212 352.305 cv
327.798 352.305 327.501 352.179 327.321 351.927 cv
327.726 348.507 mo
327.636 348.669 327.591 348.975 327.591 349.425 cv
327.591 349.713 li
328.797 349.713 li
328.797 349.362 li
328.797 349.209 328.797 349.083 328.788 348.984 cv
328.779 348.885 328.761 348.786 328.743 348.687 cv
328.716 348.588 328.689 348.507 328.644 348.453 cv
328.473 348.318 li
328.401 348.282 328.311 348.264 328.212 348.264 cv
327.978 348.264 327.816 348.345 327.726 348.507 cv
322.704 352.224 mo
322.569 352.161 322.452 352.089 322.371 351.99 cv
322.29 351.9 322.227 351.774 322.182 351.621 cv
322.128 351.468 322.101 351.315 322.083 351.162 cv
322.065 351 322.056 350.82 322.056 350.604 cv
322.056 349.596 li
322.056 349.281 322.074 349.02 322.11 348.813 cv
322.146 348.606 322.209 348.435 322.29 348.282 cv
322.38 348.138 322.497 348.03 322.641 347.958 cv
322.794 347.895 322.983 347.859 323.208 347.859 cv
323.388 347.859 323.55 347.886 323.676 347.922 cv
323.811 347.967 323.91 348.03 324 348.102 cv
324.081 348.183 324.144 348.282 324.189 348.399 cv
324.234 348.516 324.27 348.642 324.288 348.777 cv
324.306 348.912 324.315 349.065 324.315 349.245 cv
324.315 349.443 li
323.811 349.443 li
323.811 349.245 li
323.811 348.876 323.766 348.615 323.676 348.48 cv
323.586 348.336 323.433 348.264 323.217 348.264 cv
322.974 348.264 322.803 348.354 322.731 348.534 cv
322.65 348.705 322.605 349.038 322.605 349.506 cv
322.605 350.712 li
322.605 351.162 322.65 351.468 322.731 351.639 cv
322.821 351.81 322.983 351.9 323.226 351.9 cv
323.325 351.9 323.406 351.882 323.478 351.855 cv
323.649 351.729 li
323.748 351.522 li
323.775 351.432 323.793 351.333 323.793 351.234 cv
323.802 351.135 323.811 351.009 323.811 350.856 cv
323.811 350.622 li
324.315 350.622 li
324.315 350.829 li
324.315 351.018 324.306 351.18 324.288 351.324 cv
324.279 351.459 324.243 351.594 324.198 351.72 cv
324.144 351.855 324.09 351.954 324.009 352.044 cv
323.928 352.125 323.82 352.188 323.685 352.233 cv
323.559 352.287 323.397 352.305 323.217 352.305 cv
323.019 352.305 322.848 352.278 322.704 352.224 cv
319.383 351.927 mo
319.203 351.666 319.113 351.234 319.113 350.622 cv
319.113 349.533 li
319.113 349.11 319.158 348.777 319.239 348.525 cv
319.329 348.282 319.455 348.111 319.617 348.012 cv
319.788 347.913 320.004 347.859 320.283 347.859 cv
320.463 347.859 320.616 347.886 320.751 347.931 cv
320.877 347.976 320.985 348.048 321.066 348.129 cv
321.156 348.219 321.219 348.336 321.273 348.489 cv
321.318 348.642 321.354 348.804 321.372 348.984 cv
321.39 349.164 321.399 349.38 321.399 349.641 cv
321.399 350.028 li
319.662 350.028 li
319.662 350.676 li
319.662 351.117 319.698 351.432 319.788 351.621 cv
319.878 351.801 320.04 351.9 320.274 351.9 cv
320.463 351.9 320.607 351.837 320.715 351.72 cv
320.814 351.594 320.868 351.378 320.868 351.063 cv
320.868 350.766 li
321.399 350.766 li
321.399 351 li
321.399 351.423 321.309 351.747 321.138 351.972 cv
320.967 352.197 320.679 352.305 320.274 352.305 cv
319.869 352.305 319.563 352.179 319.383 351.927 cv
319.797 348.507 mo
319.707 348.669 319.662 348.975 319.662 349.425 cv
319.662 349.713 li
320.868 349.713 li
320.868 349.362 li
320.868 349.209 320.859 349.083 320.85 348.984 cv
320.85 348.885 320.832 348.786 320.805 348.687 cv
320.787 348.588 320.751 348.507 320.715 348.453 cv
320.544 348.318 li
320.472 348.282 320.382 348.264 320.274 348.264 cv
320.049 348.264 319.887 348.345 319.797 348.507 cv
316.656 351.972 mo
316.449 351.756 316.332 351.459 316.305 351.081 cv
316.764 350.946 li
316.791 351.27 316.863 351.513 316.989 351.666 cv
317.106 351.819 317.277 351.9 317.493 351.9 cv
317.682 351.9 317.835 351.837 317.943 351.729 cv
318.051 351.621 318.105 351.477 318.105 351.297 cv
318.105 351.27 li
318.096 350.991 317.916 350.703 317.574 350.415 cv
316.989 349.911 li
316.782 349.74 316.629 349.578 316.539 349.407 cv
316.449 349.245 316.395 349.065 316.395 348.849 cv
316.395 348.534 316.494 348.291 316.683 348.12 cv
316.872 347.949 317.115 347.859 317.43 347.859 cv
317.745 347.859 317.997 347.958 318.168 348.165 cv
318.339 348.372 318.429 348.642 318.447 348.993 cv
318.06 349.119 li
318.051 348.831 317.988 348.615 317.889 348.48 cv
317.79 348.336 317.646 348.264 317.448 348.264 cv
317.286 348.264 317.142 348.318 317.043 348.408 cv
316.944 348.498 316.899 348.624 316.899 348.786 cv
316.899 348.921 316.917 349.047 316.971 349.146 cv
317.025 349.245 317.115 349.353 317.25 349.47 cv
317.862 350.019 li
317.97 350.109 318.06 350.199 318.132 350.262 cv
318.195 350.334 318.267 350.424 318.348 350.532 cv
318.429 350.64 318.483 350.748 318.519 350.874 cv
318.555 351 318.582 351.126 318.582 351.27 cv
318.582 351.603 318.483 351.855 318.285 352.035 cv
318.087 352.215 317.817 352.305 317.475 352.305 cv
317.133 352.305 316.854 352.197 316.656 351.972 cv
310.977 352.206 mo
310.824 352.134 310.707 352.026 310.617 351.882 cv
310.536 351.738 310.473 351.567 310.437 351.378 cv
310.401 351.18 310.383 350.955 310.383 350.676 cv
310.383 349.488 li
310.383 348.939 310.464 348.525 310.635 348.264 cv
310.806 347.994 311.103 347.859 311.535 347.859 cv
311.958 347.859 312.264 347.994 312.426 348.255 cv
312.597 348.525 312.687 348.93 312.687 349.488 cv
312.687 350.676 li
312.687 350.955 312.669 351.18 312.633 351.378 cv
312.588 351.567 312.534 351.738 312.444 351.882 cv
312.354 352.026 312.237 352.134 312.093 352.206 cv
311.94 352.269 311.751 352.305 311.535 352.305 cv
311.31 352.305 311.121 352.269 310.977 352.206 cv
311.292 348.309 mo
311.121 348.426 li
311.022 348.597 li
310.995 348.66 310.968 348.741 310.959 348.84 cv
310.941 348.939 310.941 349.038 310.932 349.119 cv
310.932 349.209 310.932 349.326 310.932 349.452 cv
310.932 350.712 li
310.932 350.838 310.932 350.955 310.932 351.045 cv
310.941 351.126 310.941 351.225 310.959 351.324 cv
310.968 351.423 310.995 351.504 311.022 351.567 cv
311.121 351.738 li
311.292 351.864 li
311.355 351.882 311.436 351.9 311.535 351.9 cv
311.643 351.9 311.733 351.873 311.805 351.837 cv
311.985 351.684 li
312.03 351.621 312.057 351.54 312.084 351.423 cv
312.102 351.315 312.12 351.207 312.12 351.108 cv
312.129 351 312.129 350.874 312.129 350.712 cv
312.129 349.452 li
312.129 349.29 312.129 349.164 312.12 349.056 cv
312.12 348.957 312.102 348.849 312.084 348.741 cv
312.057 348.624 312.03 348.543 311.985 348.48 cv
311.805 348.327 li
311.733 348.291 311.643 348.264 311.535 348.264 cv
311.436 348.264 311.355 348.282 311.292 348.309 cv
308.133 352.224 mo
307.989 352.161 307.881 352.089 307.791 351.99 cv
307.71 351.9 307.647 351.774 307.602 351.621 cv
307.557 351.468 307.521 351.315 307.503 351.162 cv
307.485 351 307.485 350.82 307.485 350.604 cv
307.485 349.596 li
307.485 349.281 307.503 349.02 307.53 348.813 cv
307.566 348.606 307.629 348.435 307.71 348.282 cv
307.8 348.138 307.917 348.03 308.07 347.958 cv
308.214 347.895 308.403 347.859 308.637 347.859 cv
308.808 347.859 308.97 347.886 309.096 347.922 cv
309.231 347.967 309.339 348.03 309.42 348.102 cv
309.501 348.183 309.564 348.282 309.609 348.399 cv
309.654 348.516 309.69 348.642 309.708 348.777 cv
309.726 348.912 309.735 349.065 309.735 349.245 cv
309.735 349.443 li
309.231 349.443 li
309.231 349.245 li
309.231 348.876 309.186 348.615 309.096 348.48 cv
309.015 348.336 308.862 348.264 308.637 348.264 cv
308.394 348.264 308.232 348.354 308.151 348.534 cv
308.07 348.705 308.025 349.038 308.025 349.506 cv
308.025 350.712 li
308.025 351.162 308.07 351.468 308.16 351.639 cv
308.241 351.81 308.403 351.9 308.646 351.9 cv
308.745 351.9 308.835 351.882 308.898 351.855 cv
309.069 351.729 li
309.168 351.522 li
309.195 351.432 309.213 351.333 309.222 351.234 cv
309.231 351.135 309.231 351.009 309.231 350.856 cv
309.231 350.622 li
309.735 350.622 li
309.735 350.829 li
309.735 351.018 309.726 351.18 309.717 351.324 cv
309.699 351.459 309.663 351.594 309.618 351.72 cv
309.573 351.855 309.51 351.954 309.429 352.044 cv
309.348 352.125 309.24 352.188 309.114 352.233 cv
308.979 352.287 308.817 352.305 308.637 352.305 cv
308.439 352.305 308.268 352.278 308.133 352.224 cv
299.988 351.927 mo
299.799 351.666 299.709 351.234 299.709 350.622 cv
299.709 349.533 li
299.709 349.11 299.754 348.777 299.844 348.525 cv
299.925 348.282 300.051 348.111 300.222 348.012 cv
300.384 347.913 300.609 347.859 300.879 347.859 cv
301.059 347.859 301.221 347.886 301.347 347.931 cv
301.473 347.976 301.581 348.048 301.671 348.129 cv
301.752 348.219 301.824 348.336 301.869 348.489 cv
301.923 348.642 301.959 348.804 301.977 348.984 cv
301.995 349.164 302.004 349.38 302.004 349.641 cv
302.004 350.028 li
300.258 350.028 li
300.258 350.676 li
300.258 351.117 300.303 351.432 300.384 351.621 cv
300.474 351.801 300.636 351.9 300.87 351.9 cv
301.059 351.9 301.212 351.837 301.311 351.72 cv
301.41 351.594 301.464 351.378 301.464 351.063 cv
301.464 350.766 li
302.004 350.766 li
302.004 351 li
302.004 351.423 301.914 351.747 301.734 351.972 cv
301.563 352.197 301.275 352.305 300.879 352.305 cv
300.465 352.305 300.168 352.179 299.988 351.927 cv
300.393 348.507 mo
300.303 348.669 300.258 348.975 300.258 349.425 cv
300.258 349.713 li
301.464 349.713 li
301.464 349.362 li
301.464 349.209 301.464 349.083 301.455 348.984 cv
301.446 348.885 301.428 348.786 301.41 348.687 cv
301.383 348.588 301.356 348.507 301.311 348.453 cv
301.14 348.318 li
301.068 348.282 300.978 348.264 300.879 348.264 cv
300.645 348.264 300.483 348.345 300.393 348.507 cv
292.149 352.026 mo
291.987 351.846 291.906 351.612 291.906 351.342 cv
291.906 351.198 291.915 351.072 291.942 350.955 cv
291.969 350.838 292.014 350.739 292.077 350.64 cv
292.149 350.541 292.221 350.451 292.302 350.37 cv
292.374 350.298 292.491 350.217 292.635 350.127 cv
292.779 350.037 292.923 349.965 293.076 349.893 cv
293.22 349.821 293.409 349.731 293.643 349.623 cv
293.643 349.317 li
293.643 348.921 293.607 348.642 293.526 348.498 cv
293.454 348.345 293.31 348.273 293.112 348.273 cv
292.707 348.273 292.509 348.516 292.509 349.011 cv
292.509 349.164 li
291.969 349.146 li
291.978 349.02 li
291.996 348.615 292.095 348.318 292.293 348.138 cv
292.482 347.949 292.77 347.859 293.139 347.859 cv
293.517 347.859 293.787 347.976 293.949 348.201 cv
294.111 348.426 294.192 348.786 294.192 349.281 cv
294.192 351.378 li
294.192 351.729 294.201 352.017 294.228 352.242 cv
293.742 352.242 li
293.67 351.639 li
293.598 351.828 293.49 351.99 293.328 352.116 cv
293.175 352.242 292.986 352.305 292.77 352.305 cv
292.518 352.305 292.311 352.215 292.149 352.026 cv
293.571 350.019 mo
293.454 350.082 293.364 350.136 293.301 350.163 cv
293.076 350.289 li
292.878 350.424 li
292.725 350.541 li
292.599 350.685 li
292.518 350.829 li
292.464 351.009 li
292.455 351.207 li
292.455 351.423 292.5 351.576 292.599 351.684 cv
292.689 351.783 292.806 351.837 292.95 351.837 cv
293.094 351.837 293.229 351.792 293.355 351.684 cv
293.481 351.585 293.571 351.468 293.643 351.324 cv
293.643 349.983 li
293.571 350.019 li
284.49 351.972 mo
284.283 351.756 284.166 351.459 284.139 351.081 cv
284.598 350.946 li
284.625 351.27 284.697 351.513 284.823 351.666 cv
284.94 351.819 285.111 351.9 285.336 351.9 cv
285.525 351.9 285.669 351.837 285.777 351.729 cv
285.885 351.621 285.939 351.477 285.939 351.297 cv
285.939 351.27 li
285.93 350.991 285.75 350.703 285.408 350.415 cv
284.823 349.911 li
284.616 349.74 284.472 349.578 284.373 349.407 cv
284.283 349.245 284.238 349.065 284.238 348.849 cv
284.238 348.534 284.328 348.291 284.517 348.12 cv
284.706 347.949 284.949 347.859 285.264 347.859 cv
285.588 347.859 285.831 347.958 286.002 348.165 cv
286.173 348.372 286.263 348.642 286.29 348.993 cv
285.903 349.119 li
285.885 348.831 285.822 348.615 285.723 348.48 cv
285.624 348.336 285.48 348.264 285.291 348.264 cv
285.12 348.264 284.985 348.318 284.877 348.408 cv
284.778 348.498 284.733 348.624 284.733 348.786 cv
284.733 348.921 284.76 349.047 284.805 349.146 cv
284.859 349.245 284.949 349.353 285.084 349.47 cv
285.696 350.019 li
285.804 350.109 285.894 350.199 285.966 350.262 cv
286.029 350.334 286.11 350.424 286.182 350.532 cv
286.263 350.64 286.317 350.748 286.353 350.874 cv
286.398 351 286.416 351.126 286.416 351.27 cv
286.416 351.603 286.317 351.855 286.119 352.035 cv
285.921 352.215 285.651 352.305 285.309 352.305 cv
284.967 352.305 284.697 352.197 284.49 351.972 cv
278.253 352.206 mo
278.1 352.134 277.983 352.026 277.902 351.882 cv
277.812 351.738 277.749 351.567 277.713 351.378 cv
277.677 351.18 277.659 350.955 277.659 350.676 cv
277.659 349.488 li
277.659 348.939 277.749 348.525 277.92 348.264 cv
278.082 347.994 278.388 347.859 278.811 347.859 cv
279.243 347.859 279.54 347.994 279.711 348.255 cv
279.882 348.525 279.963 348.93 279.963 349.488 cv
279.963 350.676 li
279.963 350.955 279.945 351.18 279.909 351.378 cv
279.873 351.567 279.81 351.738 279.729 351.882 cv
279.639 352.026 279.522 352.134 279.369 352.206 cv
279.216 352.269 279.036 352.305 278.811 352.305 cv
278.595 352.305 278.406 352.269 278.253 352.206 cv
278.568 348.309 mo
278.406 348.426 li
278.298 348.597 li
278.271 348.66 278.253 348.741 278.235 348.84 cv
278.226 348.939 278.217 349.038 278.217 349.119 cv
278.208 349.209 278.208 349.326 278.208 349.452 cv
278.208 350.712 li
278.208 350.838 278.208 350.955 278.217 351.045 cv
278.217 351.126 278.226 351.225 278.235 351.324 cv
278.253 351.423 278.271 351.504 278.298 351.567 cv
278.406 351.738 li
278.568 351.864 li
278.64 351.882 278.721 351.9 278.811 351.9 cv
278.919 351.9 279.009 351.873 279.09 351.837 cv
279.27 351.684 li
279.306 351.621 279.342 351.54 279.36 351.423 cv
279.387 351.315 279.396 351.207 279.405 351.108 cv
279.405 351 279.414 350.874 279.414 350.712 cv
279.414 349.452 li
279.414 349.29 279.405 349.164 279.405 349.056 cv
279.396 348.957 279.387 348.849 279.36 348.741 cv
279.342 348.624 279.306 348.543 279.27 348.48 cv
279.09 348.327 li
279.009 348.291 278.919 348.264 278.811 348.264 cv
278.721 348.264 278.64 348.282 278.568 348.309 cv
273.771 352.206 mo
273.627 352.134 273.501 352.026 273.42 351.882 cv
273.33 351.738 273.267 351.567 273.231 351.378 cv
273.195 351.18 273.177 350.955 273.177 350.676 cv
273.177 349.488 li
273.177 348.939 273.267 348.525 273.438 348.264 cv
273.609 347.994 273.906 347.859 274.329 347.859 cv
274.761 347.859 275.058 347.994 275.229 348.255 cv
275.4 348.525 275.481 348.93 275.481 349.488 cv
275.481 350.676 li
275.481 350.955 275.463 351.18 275.427 351.378 cv
275.391 351.567 275.328 351.738 275.247 351.882 cv
275.157 352.026 275.04 352.134 274.887 352.206 cv
274.734 352.269 274.554 352.305 274.329 352.305 cv
274.113 352.305 273.924 352.269 273.771 352.206 cv
274.095 348.309 mo
273.924 348.426 li
273.816 348.597 li
273.789 348.66 273.771 348.741 273.762 348.84 cv
273.744 348.939 273.735 349.038 273.735 349.119 cv
273.726 349.209 273.726 349.326 273.726 349.452 cv
273.726 350.712 li
273.726 350.838 273.726 350.955 273.735 351.045 cv
273.735 351.126 273.744 351.225 273.762 351.324 cv
273.771 351.423 273.789 351.504 273.816 351.567 cv
273.924 351.738 li
274.095 351.864 li
274.158 351.882 274.239 351.9 274.329 351.9 cv
274.437 351.9 274.536 351.873 274.608 351.837 cv
274.788 351.684 li
274.824 351.621 274.86 351.54 274.878 351.423 cv
274.905 351.315 274.914 351.207 274.923 351.108 cv
274.932 351 274.932 350.874 274.932 350.712 cv
274.932 349.452 li
274.932 349.29 274.932 349.164 274.923 349.056 cv
274.914 348.957 274.905 348.849 274.878 348.741 cv
274.86 348.624 274.824 348.543 274.788 348.48 cv
274.608 348.327 li
274.536 348.291 274.437 348.264 274.329 348.264 cv
274.239 348.264 274.158 348.282 274.095 348.309 cv
270.342 351.891 mo
270.18 351.612 270.099 351.144 270.099 350.496 cv
270.099 349.704 li
270.099 349.461 270.108 349.254 270.126 349.074 cv
270.144 348.894 270.18 348.723 270.225 348.57 cv
270.27 348.408 270.333 348.282 270.405 348.183 cv
270.477 348.084 270.576 348.003 270.693 347.949 cv
270.819 347.886 270.954 347.859 271.116 347.859 cv
271.404 347.859 271.656 347.985 271.881 348.237 cv
271.881 346.203 li
272.43 346.203 li
272.43 352.242 li
271.881 352.242 li
271.881 351.936 li
271.665 352.179 271.413 352.305 271.143 352.305 cv
270.774 352.305 270.504 352.17 270.342 351.891 cv
270.774 348.579 mo
270.693 348.777 270.648 349.083 270.648 349.524 cv
270.648 350.541 li
270.648 351.009 270.693 351.351 270.774 351.558 cv
270.855 351.774 271.017 351.873 271.251 351.873 cv
271.467 351.873 271.674 351.783 271.881 351.594 cv
271.881 348.597 li
271.665 348.39 271.449 348.291 271.242 348.291 cv
271.008 348.291 270.855 348.39 270.774 348.579 cv
330.489 352.053 mo
330.381 351.891 330.318 351.657 330.318 351.342 cv
330.318 348.291 li
329.796 348.291 li
329.796 347.922 li
330.318 347.922 li
330.318 346.59 li
330.867 346.59 li
330.867 347.922 li
331.578 347.922 li
331.578 348.291 li
330.867 348.291 li
330.867 351.288 li
330.867 351.513 330.894 351.657 330.939 351.738 cv
330.993 351.819 331.092 351.864 331.254 351.864 cv
331.353 351.864 331.452 351.855 331.56 351.837 cv
331.56 352.242 li
331.398 352.278 331.236 352.296 331.101 352.296 cv
330.804 352.296 330.597 352.215 330.489 352.053 cv
325.458 352.053 mo
325.341 351.891 325.287 351.657 325.287 351.342 cv
325.287 348.291 li
324.765 348.291 li
324.765 347.922 li
325.287 347.922 li
325.287 346.59 li
325.827 346.59 li
325.827 347.922 li
326.547 347.922 li
326.547 348.291 li
325.827 348.291 li
325.827 351.288 li
325.827 351.513 325.854 351.657 325.908 351.738 cv
325.953 351.819 326.061 351.864 326.214 351.864 cv
326.313 351.864 326.421 351.855 326.52 351.837 cv
326.52 352.242 li
326.358 352.278 326.205 352.296 326.061 352.296 cv
325.773 352.296 325.566 352.215 325.458 352.053 cv
303.156 352.053 mo
303.039 351.891 302.985 351.657 302.985 351.342 cv
302.985 348.291 li
302.463 348.291 li
302.463 347.922 li
302.985 347.922 li
302.985 346.59 li
303.534 346.59 li
303.534 347.922 li
304.245 347.922 li
304.245 348.291 li
303.534 348.291 li
303.534 351.288 li
303.534 351.513 303.552 351.657 303.606 351.738 cv
303.66 351.819 303.759 351.864 303.912 351.864 cv
304.02 351.864 304.119 351.855 304.218 351.837 cv
304.218 352.242 li
304.056 352.278 303.903 352.296 303.759 352.296 cv
303.471 352.296 303.264 352.215 303.156 352.053 cv
288.963 352.053 mo
288.855 351.891 288.801 351.657 288.792 351.342 cv
288.792 348.291 li
288.27 348.291 li
288.27 347.922 li
288.792 347.922 li
288.792 346.59 li
289.341 346.59 li
289.341 347.922 li
290.061 347.922 li
290.061 348.291 li
289.341 348.291 li
289.341 351.288 li
289.341 351.513 289.368 351.657 289.422 351.738 cv
289.467 351.819 289.575 351.864 289.728 351.864 cv
289.827 351.864 289.926 351.855 290.034 351.837 cv
290.034 352.242 li
289.872 352.278 289.719 352.296 289.575 352.296 cv
289.278 352.296 289.08 352.215 288.963 352.053 cv
359.865 352.242 mo
359.865 348.894 li
359.865 348.678 359.838 348.525 359.766 348.426 cv
359.703 348.336 359.595 348.291 359.46 348.291 cv
359.217 348.291 358.974 348.426 358.713 348.687 cv
358.713 352.242 li
358.164 352.242 li
358.164 347.922 li
358.713 347.922 li
358.713 348.372 li
359.028 348.03 359.379 347.859 359.748 347.859 cv
359.964 347.859 360.126 347.94 360.243 348.102 cv
360.36 348.255 360.414 348.489 360.414 348.777 cv
360.414 352.242 li
359.865 352.242 li
356.706 352.242 mo
356.706 347.922 li
357.255 347.922 li
357.255 352.242 li
356.706 352.242 li
349.578 352.242 mo
349.578 347.922 li
350.127 347.922 li
350.127 352.242 li
349.578 352.242 li
344.943 352.242 mo
344.943 347.922 li
345.492 347.922 li
345.492 352.242 li
344.943 352.242 li
335.277 352.242 mo
335.277 347.922 li
335.817 347.922 li
335.817 348.516 li
335.952 348.3 336.105 348.138 336.285 348.039 cv
336.456 347.931 336.636 347.877 336.816 347.877 cv
336.906 347.886 li
336.906 348.471 li
336.834 348.444 336.744 348.426 336.645 348.426 cv
336.294 348.426 336.024 348.588 335.817 348.93 cv
335.817 352.242 li
335.277 352.242 li
315.135 352.242 mo
315.135 348.894 li
315.135 348.678 315.099 348.525 315.036 348.426 cv
314.964 348.336 314.865 348.291 314.721 348.291 cv
314.487 348.291 314.244 348.426 313.983 348.687 cv
313.983 352.242 li
313.434 352.242 li
313.434 347.922 li
313.983 347.922 li
313.983 348.372 li
314.298 348.03 314.649 347.859 315.018 347.859 cv
315.234 347.859 315.396 347.94 315.513 348.102 cv
315.621 348.255 315.684 348.489 315.684 348.777 cv
315.684 352.242 li
315.135 352.242 li
298.476 352.242 mo
298.476 348.849 li
298.476 348.615 298.44 348.453 298.368 348.363 cv
298.296 348.264 298.188 348.219 298.053 348.219 cv
297.774 348.228 297.504 348.372 297.243 348.669 cv
297.243 348.84 li
297.243 352.242 li
296.739 352.242 li
296.739 348.849 li
296.739 348.615 296.694 348.453 296.622 348.363 cv
296.55 348.264 296.442 348.219 296.307 348.219 cv
296.028 348.228 295.767 348.372 295.497 348.669 cv
295.497 352.242 li
294.984 352.242 li
294.984 347.922 li
295.497 347.922 li
295.497 348.363 li
295.794 348.021 296.127 347.85 296.523 347.85 cv
296.874 347.85 297.099 348.039 297.198 348.417 cv
297.495 348.039 297.855 347.85 298.26 347.85 cv
298.476 347.85 298.647 347.922 298.782 348.084 cv
298.926 348.237 298.989 348.489 298.989 348.84 cv
298.989 352.242 li
298.476 352.242 li
287.091 352.242 mo
287.091 347.922 li
287.64 347.922 li
287.64 352.242 li
287.091 352.242 li
280.755 352.242 mo
280.755 347.922 li
281.304 347.922 li
281.304 348.516 li
281.439 348.3 281.592 348.138 281.763 348.039 cv
281.943 347.931 282.114 347.877 282.294 347.877 cv
282.393 347.886 li
282.393 348.471 li
282.312 348.444 282.231 348.426 282.132 348.426 cv
281.781 348.426 281.502 348.588 281.304 348.93 cv
281.304 352.242 li
280.755 352.242 li
276.309 352.242 mo
276.309 346.203 li
276.858 346.203 li
276.858 352.242 li
276.309 352.242 li
356.706 347.337 mo
356.706 346.59 li
357.255 346.59 li
357.255 347.337 li
356.706 347.337 li
349.578 347.337 mo
349.578 346.59 li
350.127 346.59 li
350.127 347.337 li
349.578 347.337 li
344.943 347.337 mo
344.943 346.59 li
345.492 346.59 li
345.492 347.337 li
344.943 347.337 li
287.091 347.337 mo
287.091 346.59 li
287.64 346.59 li
287.64 347.337 li
287.091 347.337 li
/0 /CSA get_res setcolorspace
gsave
eclp
[1 0 0 -1 0 400 ]ct
[95.76 0 0 17.04 268.8 37.12 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 399 
/H 71 
/M[399 0 0 -71 0 71 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 399 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 399 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 399 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 399 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&XT8<Fnc8Z7li;V;JcPfNrct.:rBp,Ur^6YbJcLB&m/[,QTE+p&
rW)TkrXk7mJcOO*rXl12JcLB&JcOj3rH[r6rctmOJcN7[rcufidK'55nc8YV`rL\kV#^K^i;h(%o`4q&
nc8Y$U]>uHa8l2O^&W`bJcLB&d/a,jnc8Z7f)Yeqr;chBquG"Brcu!Rn,WH5mf<?4blI`grW)qCnGrQ6
qZ,s_rd!)qrBp,Ur^5B>rW)pbr;cgaaT2<-aoL8ur^6,Sr^4p1r^6Ybr^6M^p]1:\joGBJf)Ya]nc8Y$
li?APrXo)/rXm6PrXmocbQ.VSmf<>!cN*tFrXo,0rXnZ#rXn8mrXljEJcLB&M#dL"rW)Tkrd!)qrd"GB
rcuTcrcnJDVuZgBmf<?4o)RMFrd"JCrd"#6rd!W+rd!K'p&P%Ync8YVf)Ye;r;cgaf)YCBr^3R`r^6/T
!!*!cblI`1rW)pbnGrPUjoGBJoDmqPr=ST#rXm`^rXo)/rXnApi;iihVZ?`/!"nZ"rXmBTrXo,0rXnZ#
rXn>orrE$1LB)o+JcO!po`4r9nc8Z7f)Yeqr;chBfDtIBrctCArd"#6rrE%DblI`grW)qCnGrQ6joGC+
o`4"PrBp,Ur^59;r^6Var^5rNhuNaDVZ6]as$Q5Tr^4p1r^6Ybr^62Ur^5oMrW)pbf)Ya]nc8Y$f)Yd^
r;cg/quG"BrXlX?n,WG"mf<>!blI_TrW)p0nGrP#qZ,s_rXkS!JcLB&XT8<Fnc8Z7li?APrd"GBrcuTc
rd!9!bQ.Wfmf<?4cN*tFrd"JCrd"#6rd!W+rd!)qrBp,Ur^6Ybg&V+>r;cgaaT2<-mJsfur^6,Sr^5WE
m/[,QrW)pbnGrPUjoGBJf)Ya]rW)TkrXm`^rXo)/rXm6PrXf,1VuZf/mf<>!o)RMFrXo,0rXnZ#rXn8m
rXn,iJcLB&JcOj3rH[r6rcuijrd!`.i;ik&VZ?aB!."#5rcu`grcufidK'55nc8YVciF&4qZ+qBr^4-p
nGrPUmf<>SblI`1i;h(%o`4q&nc8Y$ciF%WfDtIBrXl%.rXnZ#rrE$1blI_T^&W`bJcLB&ec>Jjr;c_?
quH_AquHV>r;ceA!!*"Dp]15;quH_ArrDk?rrDlqqg&)>rcnJDr-A;Br-A/>qg&/@q0DN2qg&&=qg&,?
rHSACrH\8?r-A/>qfr/AqZ-M=rW)b>rW)h@r;cY=!!)tCr;chBrrE"C!!*"Dp]12:q>g>:rW)qCrW)qC
!!)qBr;chBqu?_BrH\8?qg&)>rd"JCrcnJDr-A/>r-A8As*=A>pd=u[qa:8]r^6S`qa:;^rBgPbr^6G\
r'UJarW)pbrrDj^p]11YquH^`!!)parrDsaqZ-L\rW)a]nc8PSqZ-L\r;cd`!!)sbqZ-O]qZ-L\q>gC[
rW)a]rW)g_r;cX\!!)sbr;cgarrE!b!!*!cp]11Yq>g=YrW)pbrW)pb!!)par;cgaquHX^qZ-L\quH^`
rW)pb!!)paqZ-O]rW)scp]1($r;c^,quH^.quHU+r;cd.!<<`3&blA(&c;Y.&cVk,&blA'&c;Y.&HDh/
&cVk/&c2S*&cMe+&b5r!&c2S*&HDh1!<!K0!<!N,!;mH+!;dB)!;dB-!;R6+!;dB,!;R3,!<!N.!<*T1
!<!K0!<*T*!;dB)!<*T.&cMe0&cMe0&HDh/&cD_/&c;Y,&c2S*&c;Y.&cMe0&HDh/&c2S+&cMe1&_[5:
!.k33!;Cd<!;Up=!<.9B!;Up>!;Up9!;_!>!<.9D!;Up9!;Up=!;Lg>!;_!?!;Lj>!;h'AH1M%3H2Ra=
H2[g<H2Ra>H2Ra<H2Ra=H2dm?H2dm>H2dm?GlRjCH2RaCGli6k!;Up9!;Up=!;Cd<!<.9C!;Cd<!<.9B
!;_!>!;Lj=!<.9C!;Cd;!;1X;!;lik6iI)]6i@#a6i@#\6iI)]6hp`Y6i@#a6iR/^6hp`X6i@#[6N@,_
6iR,d!;Jq]!;T"R!;T"\!;T"]!;AkZ!;](]!;Jq[!;T"^!;T"^!;Jn_!!#C_6N@,b6i@#a6iR/^6hp`X
6i@#Z6iI)b6iI)[6iI)b6i@#]6i@#[6iI)b6iI)[6i@#X6i$fW&cMe+&cD_/&cD_*&cMe+&buG'&cD_/
&cVk,&buG&&cD\0&c!"=!;[<,!;I0+!;R5u!;R6*!;R6+!;@*(!;[<+!;I0)!;R6,!<!N.&cVk+&cVk,
&HDh0&cD_/&cVk,&buG&&cD_(&cMe0&cMe)&cMe0&cD_+&cD_)&HDh2!<*T0!;@*(!;-r"!.k3&!6bH?
!;Cd=!;Cd<!<.9C!;Lj=!;Up:!;Lj=!<.9D!;Up:!;Cd<!:Y76!<3&oH2dm?H1V+2H2dm=H2dm<H2dm>
H2[g=H2[g=H2dm?H2dm>H2dm?GlRjCH2RaBH2dm?H2.I8H2[g<H2[gCH2[g<H2[gCH2[g=H2[g=H2[gC
H2[g=GlW-h!;(R5!;Ak\!;Ak[!<,@b!;Jq\!;T"Y!;Jq\!<,@c!;T"Y!;Ak[!:WAT!;Jq]!;T"S!;Ak\
!;Ak\!;8e[!;Jq\!;Jq\!;Jq]!<,@`6iR/]6iR/^6N@,b6i@#a6iR/^6hp`W6iI)[6iI)b6iI)[6iI)b
6iI)\6iI)\6iI)b6iI)[6iI)X6i$fW&cVk*&cMe0&cMe*&cMe+&c)M&&cMe0&cVk,&cVk/!;@*)!:UU"
!;I0+!;R6!!;@**!;@**!;7$)!;I0*!;R3,&cMe*&cVk,&cVk+&cVk,&HDh0&cD_/&cVk,&buG%&cMe)
&cMe0&cMe)&cMe0&cMe0&c31>!;I0*!<*T0!;@*)!;$l4!.k3&!42b)H2dmBH2dmCH2dmCH2[gCH2[gC
H2[gBH2dmAH2%C=H2[gCH2[gCH2RaBH1q=;H2dmCH2[gBH2[gBH2[gCH2[gCH2[gCH2RaBH1:n5H2dmC
H2dmCH2dmDGli6k!;q-B!<%3C!<.9C!<.9D!<%3B!<.9C!<.9C!<%3B!<.9A!<.9C!<.9B!<.9B!<%3A
!<.9D!;h':!<%3C!<%3B!<%0C!!!#tH2[gCH2[gBH2dmCH2[gCH2[gCH2[gCH2dmCH2[gCH2[gCH2[gB
H2[gCH2[gCH2[gAH2.I=6iR/a6iR/b6iR/b6iI)b6iI)b6iI)a6iR/`6hgZ\6iI)b6iI)b6i@#a6h^TZ
6iR/b6iI)a6iI)a6iI)b6iI)b6iI)b6i@#a6h(0U6NTUT!<#:b!<#:b!<#:b!;o4a!<#:b!<,@b!<,@c
!<#:a!<,@b!<,@b!<#:a!<,@`!<,@b!<,@a!<,@a!<#:`!<,@c!;f.Y!<#:b!<#:a!<#:b!<#:a!<,@b
!<#:b!<#:a!<,@b!<,@b!<,@c!<#:a!<,@b!<,@b!<#:a!<,@b!<,@b!;o4[!<!N0!;mE1!!!W1&cVk0
&cMe0&cMe0&cMe/&cVk.&blA*&cMe0&cMe0&cD_/&bc;(&cVk0&cMe/&cMe/&cMe0&cMe0&cMe0&cD_/
&HDh%!<!N0!<!N0!<!N0!<!N0!;mH/!<!N0!<*T0!<*T1!<!N/!<*T0!<*T0!<!N/!<*T.!<*T0!<*T/
!<*T/!<!N.!<3W4&HDh.&blA)&cVk0&cMe/&cVk0&cMe0&cMe/&cVk0&cMe0&cMe0&cMe0&cVk0&cMe0
&cMe0&cMe/&cMe0&cMe0&cMe.&cD]]!.k3&!:'X`H2[gBH2dmDH2RaBH2[gCH2[gCH2[gBH2dmCH1h7;
H2[gCH2[gCH2RaBH1q=<H2RaBH2[dDH2i0g!<.9B!<.9D!<%3B!<%3B!<.96!<.9B!<.9D!<.9B!<.9D
!<%3B!<%3C!<.9C!<.9D!<%3B!<%3C!<.9B!<.9C!<7<EH2RaAH2[gBH2[gCH2RaAH2RaBH2dmCH1h7;
H2RaBH2[gCH2RaBH2[gCH2[gCH2RaBH2[gCH2[gCH2[gCH2dmCH2[gCGlRjE!<.9C!<.9B!<.9D!<%3A
!<.9=!<#:a!<#:b!<,@a!<,@b!<,@b!<,@b!<#:b!<#:Y!<,@b!<,@b!<,@a!<,@_!;uos6i@#a6iI)b
6i@#a6i@#a6iR/b6iI)a6iI)b6h(0U6i@#a6iR/c6i@#a6iR/b6iI)a6iR/c6iI)b6iR/b6iI)b6NTUT
!<,@a!<,@b!<,@a!<#:a!<#:a!<,@a!<#:`!<,@c!<#:Y!<,@a!<,@b!<,@a!<,@b!<,@b!<,@a!<,@b
!<,@b!<,=c!<3&u6iR/b6iI)b6iI)b6iI)b6i@#a6iR/b6i@#a6i@#_!<!N/!<!N0!<*T/!<*T0!<*T0
!<*T0!<!N0!<!N'!<*T0!<*T0!<*T/!<*T)!<*T/!<*T0!<*T/!<*T/!<*Q1!!!#t&cMe/&cMe0&b,l#
&cD_/&cVk1&cD_/&cVk0&cMe/&cVk1&cMe0&cVk0&cMe/&cVk1&cD_/&cMe0&cD_.&cMe/&HDh2!<*T/
!<!N.!<*T1!<!N'!<*T/!<*T0!<*T/!<*T0!<*T0!<*T/!<*T0!<*T0!<*T0!<*T1!<!N/!<*T0!<*T0
!<*T/!<3W4&HDh0&cD_/&Wd!E!.k4'!<.9B!<%3C!<.9B!<.9C!<.9D!<%3A!<.9D!<%3:!<.9B!<7?D
!<.9B!<.9A!;lirH2RaBH2[gCH2RaBH2RaBH2dmCH2RaBH2[gCH1:n6H2RaBH2dmDH2RaBH2dmCH2RaB
H2dmDH2RaCH2dmCH2[gDGli8:!<%3A!<.9C!<.9B!<%3B!<%3B!<.9B!<%3A!<.9D!<%3:!<.9B!<.9D
!<%3A!<.9C!<.9C!<.9B!<%3C!<.9C!<.9B!<7?E!<.9B!<.9C!<.9C!<.9B!<.9D!<.9A!<.9=!<,@a
!<#:b!<,@a!<,@b!<,@c!<#:`!<,@c!<#:Y!<,@a!<5Fc!<,@a!<,@[!<,@a!<,@b!<,@a!<,@a!<,@c
!<#:`!<,@b!<,@U!<,@a!<,@c!<,@a!<,@c!<#:`!<,@c!<5Cd6i@#b6iR/b6iI)a6N@,b6i@#a6iI)b
6i@#`6iI)a6iI)b6i@#`6i@#a6iR/b6hUNZ6i@#a6iR/b6i@#a6iI)b6iI)b6N@,c!<#:b!<,@b!<,@a
!<5Fd!<,@a!<,@b!<,@b!<,@a!<,@c!<,@`!<,@\!<*T/!<!N0!<*T/!<*T0!<*T1!<!N.!<*T1!<!N0
!;HQn&cD_0&cMe0&cD_/&bc;)&cD_/&cMe0&cD_/&cD_/&cVk0&cD_/&cMe0&b,l#&cD_/&cVk1&cD_0
&HWOE!<!N.!<*T1!<*T/!<3Z2!<!N/!<!K0!<!N.!<*T0!<*T/!<!N/!<!N/!<*T/!<!N.!<*T1!<!N'
!<*T/!<*T1!<!N0!<3&u&cMe0&cMe0&cD_.&cVk1&cMe0&cD_0&cVk1&cD_/&cMe0&cMe0&cD_/&cVk1
&c;Y.&_I)8!.k34!<.9B!<%0E!!%<EH2RaBH2[gCH2dmCH2RaBH2dmCH1h7:H2.I>H2RaBH11h5H2[gC
H2RaBH2RaBH2dmCH2RaBH2[gCGlRj8!<.9B!<.9D!<.9B!<.9D!<%3A!<.9D!<%3>!<.9B!<%0C!<%3A
!<.9C!<.9B!<%3B!<%3B!<.9B!<%3A!<7<GGlRjCH1(b4H2dmCH2RaBH2[gCH2[gCH2RaAH2dmDH2[gB
H27O?H2RaBH2[gCH2[gCH2RaBH2dmDH2I[AH2I[@!<,@a!<#:b!<,@a!<,@b!<,@c!<#:`!<,@c!<#:Y
!<#:\!<,@a!<,@T!<,@b!<,@a!<,@a!<,@c!<#:`!<,@b!<,@U!<,@a!<,@c!<,@a!<,@c!<#:`!<,@c
!<#:]!<,@a!<#7b!<#:`!<,@b!<,@a!<#:a!<#:b!!!#u6i@#`6i@#a6iR/b6gk$S6iR/b6i@#a6iI)b
6iI)b6i@#`6iR/c6iI)a6i$f^6i@#a6iI)b6iI)b6i@#a6iR/c6i6r`6hgZ\&cD_.&cVk1&cD_/&cMe0
&cVk0&cD_/&cVk0&bZ5'&buG+&cD_/&b#f"&cMb1&cWIA!<*T/!<*T1!<!N.!<*T0!<*T#!<*T/!<*T1
!<*T/!<*T1!<!N.!<*T1!<!N+!<*T/!<!K0!<!N.!<*T0!<3W2&cD_.&cMe/&cMe0&cD_.&cD_/&cVk0
&ao`!&cVk0&cD_/&cMe0&cMe0&cD_.&cVk1&cMe/&c)M,&cD_/&HDh2!<*T0!<*T/!<*T1!<*T.!<*S(
!.k3&!6bH@!<.9B!<%3C!<.9B!<.9C!<.9D!<%3A!<.9D!<%39!<%3>!<.9B!<.95!<.9C!<.9B!<.9B
!<.6D!!!#tH2RaBH2[gCH1:n6H2RaBH2dmDH2RaBH2dmCH2RaBH2[gBH2@U@H2RaAGlRjCH2RaBH2[gC
H2RaBH2RaAGlRjE!<.9B!<%3A!<.9D!<%33!<.9D!<%3A!<.9C!<.9C!<.9B!<%3C!<.9C!;q->!<.9B
!<.9C!<.9C!<.9B!<7<GGlRjDH2I[AH2%C=6i@#`6iR/c6i@#a6iI)b6iR/b6i@#a6iR/b6hLHX6i$f^
6i@#a6gt*T6iI)b6i@#a6i@#a6iR/b6i@#a6iI)b6h(0U6i@#a6iR/c6i@#a6iR/b6i@#a6iI)a6i-l_
6i@#`6N@,b6i@#a6iI&c6iTOP!<,@a!<#:a!<,@a!<#:`!<,@c!<#:R!<,@c!<#:`!<,@b!<,@b!<,@a
!<#:b!<,@b!;o4]!<,@a!<,@b!<,@b!<,@a!<,@c!<,@`!<,@\!<*T/!<!N0!<*T/!<*T0!<*T1!<!N.
!<*T1!<!N&!<!N+!<*T/!<*T.!;-?k&cMe0&cD_/&cD_/&cVk0&cD_/&cMe0&b,l#&cD_/&cVk1&cD_/
&cVk0&cD_/&cMe/&c2S-&cD_0&HWOV!<!N.!<*T0!<*T/!<*T/!<!N/!<*T/!<!N.!<*T1!<!Mu!<*T1
!<!N.!<*T0!<*T0!<*T/!<!N0!<*T0!<*T1&c2S-&cD_/&cMe0&cMe0&cD_/&cVk1&c;Y.&[VOi!.k3X
!<.9B!<%3C!<.9B!<.9C!<.9D!<%3A!<.9D!<%3C!;?KkH2@U@H2RaBH1M%5H2[gCH2RaBH2RaBH2dm<
H2[gCH1:n6H2%C=H2RaCGli6k!<%3A!<.9C!;q-?!;:[<!<%3;!<.9B!;:^;!<.9B!<%3A!<.9D!<%36
!;h'A!<%3C!<3&uH2[gCH2[gCH2RaAH2dmDH2Ra@H2I[AH1q=<H2[gCH2RaBH2dmCH2RaBH2%C=6i@#`
6iR/c6i@#a6iI)b6NR5f6iKIO!<,@c!<#:X!;o4]!<,@a!<,@W!;f._!<,@a!<,@a!<,@c!;8eZ!<,@U
!<,@\!<,@a!<,@c!<#:`!<,@b!;o4^!;8b[!<#:Z!<,@a!;8eZ!<,@a!<#:`!<,@c!<#:Y!;uop6iR/b
6i@#a6iI)b6iI)b6i@#`6iR/c6i@#_6i6r`6h^T[6iI)b6i@#a6iR/b6i@#a6hgZ\&cD_.&HVq4&cWIA
!<*T0!<*T1!<!N.!<*T1!<!N&!;mH+!<*T/!<*T%!;dB-!<*T/!<*T/!<*T1!;7$(!<*Q1!:g-h&blA*
&cD_/&cVk0&cD_/&cMe.&c;Y&&HDh0&bc;)&cD_'&cMe0&cD_.&cD_0&HWOE!<!N#!;dB.!<!N.!<*T0
!<*T0!<*T/!<!N0!<*T/!;mH,!<*T)!<*T0!<*T/!<*T1!<!N.!<*T.!.k3&!.k4:!<.9B!<%3C!<.9B
!<.9C!<.9D!<%3A!<.9D!<%38!;h'?!<.9B!<.99!;_!?!!%<EH2RaBH2RaBH2dm<H2[gCH1:n6H2%C=
H2RaBH2dmCH2RaBH2Ra?H2[g;GlRjCH1q==GlW-g!;:^;!<.9B!<%3A!<.9D!<%37!;_!@!<%3A!<.9C
!<.9C!<.9B!<%3C!<.9A!;h'@!<.9>!<3&uH2[gCH2RaBH2dmCH2RaBH2%C=6i@#`6iR/c6i@#a6iI)b
6iR/b6i@#a6iR/b6hCBU6i@#a6i@#a6i-l[!;](^!<,@a!<,@a!<,@c!;8eZ!<,@U!<,@\!<,@a!<,@c
!<#:`!<,@a!;f._!;Ah]6NI'PpAk1[r;cOYrW)pbr;cd`r;cgarrE!bo)SVSrrE!br;cgarW)pbrW)pb
r;cd`rrE$cquHaarBpPar^6D[r^6Ybr^6Var^6\crBpM`r^6VaquH^.r;cd.rrE$1r;cg/rW)p0rrE!0
r;cg/rrE!0oDnb#r;cg/r;cg/oDn_"rW)p0r;cg/r;cg/zp(@9(rXnZ#rXno*rXo)/rXo/1r=Su.rXo)
/q[rf-p(79)r=Sc(rXo)/p(79)rrE$1r;cd.r;cg/rrE!0o)SV!rrE!0r;cg/rW)p0rW)p0r;cd.rrE$
1quHU+rW)p0pAk1)rW)p0r;cj0!YGD4r=Su.rXk4lJcLB&fDtnrr;ceArrE%Dr;chBrW)qCrrE"Cr;ch
BrrE"Co)S]6r;chBr;chBquHTopj)i=rd"GBrd"GBrd"MDrH\,;rd"#6rd"8=rd"GBrd"MDrH\>Ard"D
Ar-A8Ard"A@rW)nBpAk2<r;chBp&P);r;ceAr;chBrrE"Co`4c4rrE"Cr;chBrW)qCrW)qCr;ceArrE%
DqZ-P>rW)qCpAk2<rW)qCr;chBrW)nBrrE"Cp]1:\r;cd`rrE$cr;cgarW)pbrrE!br;cgarrE!bo)S\
U!!)uur^6Var^6AZpd>#\r^6Var^6Var^6\crBp;Zr^62Ur^6G\r^6Var^6\crBpM`r^6Va!!)parW)p
bp]17[pAk1[r;cgap&P(Zr;cd`r;cgarrE!bo`4bSrrE!br;cgarW)pbrW)pb!!)uurBpSbr^6P_r'UG
`r^6D[r^6Ybr^6Var^6YbrBpSbrBp>[rXo)/r=T&0rXo)/rXo,0rXo/1r=Su.rXo/1r=T&0o`4n%r;cg
/r;cg/p&Ok"rW)p0r;cg/r;cg/rrE!0pAk1)nGrP#p]1:*r;cj0!YGD4r=Su.rXo&.r"8o.rXno*r=Sc
(rXo)/rXni(rXo)/r=Su.rXo/1r=S]&p_!N+r=T&0rrE$1rW)p0rW)p0r;cd.rrE$1qZ-O+rW)p0pAk1
)rW)p0r;cg/rW)m/rrE!0fDpL'JcLl4rd"GBrHSGE!."Tir;chBrW)qCrrE"Cr;chBrrE"CnGrN5rW)q
Cr;chBpAk,:rrE%DrW)qCr;chBr;chBrrE"CpAk2<!!)Qird"GBrd"MDrd"GBrd"MDrH\>Ard">?rH\D
Crd"8=rH\>Ard"JCrd"GBrd"2;rd"GBrH\>As*4Zk!!)tCo`4r9rrE%DrrE"Cr;chBrW)qCrW)qCr;ce
ArrE%Dq#LA=rrE%Dr;chBrW)qCrW)qCr;chBrW)_=qZ-Qpr^6VarBpSbr^6Var^6Ybr^6\crBpM`r^6\
crBp)TrBpPar^6Var^6D[r'UJar^6Ybr^6Var^6Var^6\crBp;Zr^62Ur^6Var^6\cr^6Var^6\crBpM
`r^6M^rBpSbr^6G\rBpM`r^6Ybr^6Var^6D[!!*!cr;cd`r;cgarrE!bo`4qXrrE$crrE!br;cgarW)p
brW)pbr;cd`rrE$cq#L@\rrE$cr;cgarW)pbrW)pbr;cgarW)^\pAk1)r;cd.rrE$1r;cg/rW)p0rrE!
0r;cg/rrE!0nGrM"rW)p0r;cg/pAk+'rrE$1rVup1rt520rXo)/rXo/1r=Sc(rXnZ#rXo)/rXo/1rXo)
/rXo/1r=Su.rXnu,r=T&0rXno*r=Su.rXo,0rt,5Cr;cg/p&P((r;cd.r;cg/rrE!0o`4q&rrE$1rrE!
0r;cg/rW)p0rW)p0r;cd.rrE$1q#L@*rrE$1r;cg/!!*$!rXo,0rXo)/rXo,0p^s/!JcLB&bQ.P@rd"G
BrH\DCrd"GBrd"JCrd"MDrH\>Ard"MDrH[l4rH\DCrd"GBrd"5<rH\ABrd"JCrd"GBrd"GBrcnJD!!)t
Cr;chBrW)qCnGrQ6r;chBrrE%Dr;chBrrE"Cr;chBq#LA=!!*"Dr;ceA!!)tCr;chBrW)qCr;chBr;ce
A!!*$!rd"GBrH\>Ard"MDrH\):rH\ABrd"MDrH\>Ard"JCrd"JCrd"GBrH\DCrd"8=rHSACrd"GBrd"J
Crd"JCrd"GBs*4Tir;c\>p&P(Zr;cd`rrE$cr;cgarW)pbrrE!br;cgarrE!bn,WDSrrE$cr;cgapAk.
ZrW)pbrW)pbr;cgar;cgarrE!br;cgarW)pbnGrPUr;cgarrE$cr;cgarrE!br;cgaq#L@\!!*!cr;cd
`!!)sbr;cgarVupcs$Q_br^6VarBpPar^6VarBpM`r^6\crBp8YrBpPar^6\crBpM`r^6Ybr^6Ybr^6V
arBpSbr^6G\rBgPbr^6Var^6Ybr^6Ybr^6Var^6VaqEsrVrXo)/r=T&0rXo)/rXo,0rXo/1r=Su.rXo/
1r=SN!r=T&0rXo)/rXo&.quH[-rW)p0rW)p0r;cg/r;cg/rrE!0r;cg/rW)p0nGrP#r;cg/rrE$1r;cg
/rrE!0r;cg/q#L@*!!*!1r;cj0!YH"Er=Su.rXo,0rXo)/rXo)/r=T#/rXo)/r=Su.rXo/1r=S`'r=T#
/rXo/1r=Su.rXo,0rXo,0rXo)/r=T&0rXo#-rW)m/!!*!1r;cg/rW)p0rW)p0r;cg/r;c[+Z2fIVJcN.
Xrd"GBrH\DCrd"GBrd"JCrd"MDrH\>Ard"MDrH\DCq#LD>r;ceArrE%Dr;chBpAk2<r;chBrW)qCr;ch
Br;chBrrE"Cr;chBrW)qCnGrQ6r;chBrrE%Dr;ckC!dObGrH\>ArcnJDrd"GBrHSACrd"GBrHSACrH\>
Ard"JCrd"GBrH\ABrH\ABrd"GBrH\>Ard"MDrH\):rd"GBrd"MDrH\DCrrE%DrW)qCrW)qCr;ceArrE%
DrrE%Dr;ceA!!*"Dr;chBrW)qCrW)qCr;chBrW)qC!W[LkoDnkXr;cd`rrE$cr;cgarW)pb!WW3fr^6V
ar^6\crBp;Zr^6VarBpSbr^6Var^6D[r^6Var^6Ybr^6Var^6Var^6\crBpM`r^6Ybr^62Ur^6Var^6\
cr^6Var^6\crBpM`r^-Ycr^6VarBgPbr^6VarBgPbrBpM`r^6Ybr^6VarBpParBpPar^6VarBpM`r^6\
crBp8Yr^6Var^6\crBpM`r^6Ybr^6Ybr^6VarBpSbr^6\cr^6VarBgPbr^6Var^6Ybr^6Ybr^6Var^6Y
br^-_e6UUJGrXo)/r=K)2!"o5Cr;cg/rW)p0rrE!0r;cg/rrE!0pAk1)r;cd.rrE$1r;cg/pAk1)r;cg
/rW)p0r;cg/r;cg/rrE!0r;cg/rW)p0!!)QirXo)/rXo/1rXo)/rXo/1r=Su.rXf,1rXo)/r=K#0rXo)
/r=K#0r=Su.rXo,0rXo)/r=T#/r=T#/rXo)/r=Su.rt,;E!!)s0p&P((r;cg/rrE!0r;cg/rW)p0rW)p
0r;cd.rrE$1rrE$1r;cd.!!*!1r;cg/rW)p0rW)p0r;cg/rW)p0!WWfEp],mGJcLB&lN$p0r;ceArrE%
Dr;chBrW)qCrW)qCr;chBrrE"CpAk/;r;chBrrE%Dr;chBpAk2<r;chBrVuqDs*=PCrd"GBrd"MDrH\>
Ard"JCrd"#6rd"GBrd"MDrd"GBrd"MDrH\>ArcnJDrH\>ArcnJDrH\ABrH\DCrd"GBrd"JCs*4Tir;ce
ArW)nBrW)qCr;ceAr;chBrrE"Cp&P);r;chBrrE"Cr;chBrW)qCrW)qCr;ceArrE%DrrE"Cr;chB!!)t
CrW)qC!!*$!rd"JCrd"GBrd"JCrd"#6r^6VarBpSbr^6Var^6Ybr^6Ybr^6Var^6\crBp;ZrBpM`r^6\
cr^6Var^6P_r;cgar;cgarW)pbr;cgar;cgarrE!br;cgarW)pbnGrPUr;cgarrE$cr;cgarrE!br;cg
a!!)sbr;cga!!)sbrW)pb!^cqfr^6Var^6Ybr^6VarBpParBpPar^6VarBpM`r^6\crBp8Yr^6Var^6\
crBpM`r^6Ybr^6Ybr^6VarBpSbr^6\crBgPbrW)pb!!)sbrW)pbrW)pbrW)pbr;cgarW)pbp&P!jrXo)
/r=T&0rXo)/rXo,0rXo,0rXo)/rXo/1r=Sc(r=Su.rXo/1rXo)/rXnl)rXo)/rXo,0rXo)/rXo)/rXf,
1!!)s0r;cg/rW)p0nGrP#r;cg/rrE$1r;cg/rrE!0r;cg/!!)s0r;cg/!!)s0rW)m/rrE$1r;cg/rW)p
0r;cd.rW)m/!!*$!rXo)/r=Su.rXo/1r=S`'rXo)/rXo/1r=Su.rXo,0rXo,0rXo)/r=T&0rXo/1r=Su
.rXf,1r=T#/rXo,0rXo,0rXo)/rt,5CrW)p0M#`,-JcOF'rH\ABrH\DCrd"GBrd"JCrd"JCrd"JCrH\D
CrH\):rd"JCrH\DCrd"GBrd"DAquH\@rrE"CrW)qCr;chBr;chBrW)qCrW)nBrW)qCquH_Aq#LD>r;ch
BrrE%Dr;chBrrE"Cr;chBrrE%DrW)nB!!)tCrW)tDs*=VErd"JCrH\ABrd"GBrH\ABrH\ABrd"GBrH\A
BrH\DCrH\):rH\DCrH\ABrd"GBrd"JCrd"JCrd"GBrd"JCrd"JCrd"JCrHSACrH\ABrd"JCrd"JCrd"G
Brd"MDqg%c5rBpParBpSbr^6Var^6Ybr^6Ybr^6YbrBpSbrBp8Yr^6Ybr^-`S!!*!cr;cgapAk.ZrrE!
brW)pbr;cgar;cgarW)pbrW)marW)pbquH^`q#LC]r;cgarrE$cr;cgarrE!br;cgarrE'd!(6_crBgP
brBpParBpSbr^6YbrBpPar^6VarBpParBpPar^6VarBpParBpSbrBp8YrBpSbrBpPar^6Var^6Ybr^6Y
br^-YcrW)pbrW)pbrW)pbrW)ma!!)sbrW)pbrW)pbrW)pbr;cgarrDp`o)S_$rW)m/rrE$1r;cg/rW)p
0rW)p0rW)m/rrE!0rrDforXo,0r=T&0rXo)/rXnl)r=T&0r=T#/rXo)/rXo)/rXo,0rXo,0r=T#/rXo&
.rXnr+rXo)/rXo/1rXo)/rt,;E!!)s0r;cg/rrE$1rW)m/!!)s0rW)m/rrE$1rW)m/rW)p0r;cd.rW)m
/rW)p0r;cd.rW)m/rrE!0p&P%'rrE!0rW)p0rrE'!rXo,0rXo,0rXo)/rXo,0rXo,0rXo,0r=K#0r=T#
/rXo,0rXo,0rXo)/rXo/1q[q9WJcLB&O9#!"!WW4Grd"MDrH\ABrd"JCrHSACrH\ABrH\):pNcc=rd"G
BrHSDDH27O8H2[gCH2RaBH2RaBH2[g=H2RaAH2i0i!<.9>!;q*B!<%3C!<%3C!<%3C!<%3A!<.9D!;Cd
=!;Lj=!;Lj<!<%0F!-nPEpj)f<rHSGEGl[Sa!dObGrH\):pNc`<pNc`<rd"JCr-88BrH\ABrd"JCpNcc
=pj)i=rd"JCrd"GBrd"MDpNcW9r;cOYrrE!brrE!brW)pbrW)ma!!)sbrW)map&OhSrrE$cr;cd`!<>L
`!;Ak[!<,@a!<,@a!<,@c!!!#o6i@#^6iR/c6hp`[6N@,b6iR/b6iR/b6iR/b6i@#a6iR/\6iR/]6iI)
\6i@#`6N[<U!!)d]rVuourBgVd6NHgIrrE!bp&OhSrW)[[rW)pbrW)j`!!)sbrW)pbrW)[[rrDg]rW)p
brW)pbr;cgarrDd\pAjn!rrE!0rrE!0rW)p0rW)m/!!)s0rW)m/p&Oh!rrE$1r;cd.!<<`.!;@*)!!!W
2&cD_/&cD_/&cMe*&cD_,&cVk1&buG)&HDh0&cVk0&cVk0&cVk0&cD_/&cVk*&cVk+&cMe*&cD_0&Hra
Y!"f22p_!H)r=K)2&HMM:rrE!0p&Oh!rW)[)rW)p0rW)j.!!)s0rW)p0rW)[)rrDg+!!*$!rXo,0rXo)
/rXo/1pCX%uJcLB&bQ.M?pNc`<q0Do=rd"JCpj)i=rH\):pj)i=rd"GBqg&#<pNc`<rd"GBrd"GBrcnJ
DrrDh>r;c_?rrE%Dp]1,8r;cY=rW)nBr;chBrrDh>rW)_=rW)_=r;c_?rrDh>rrE'!qg&2ApNcc=rH\)
:pNc`<pNc`<rd"JCpNc`<rd"JCpj)i=pj)i=rd"JCrd"GBs*4TirW)\<pAjqTrW)a]r;cgarW)^\rW)m
ap&OkTrW)pbr;c^^q>g7WrW)pbr;cgar;cgarW)^\r;c^^rrE$cp]1+Wr;cX\rW)mar;cgarrDg]rW)^
\rW)^\r;Zgbr'UJapd=u[qa:A`pI"r\rBp8YpI"o[pI"o[r^6YbpI"o[r^6Ybpd>#\pd>#\r^6Ybr^6V
ar^6YbpI"ZTpC[B)q%<Q*rXo,0p_!K*r=S`'p_!K*rXo)/q[ri.quHI'rW)p0r;cg/r;cg/rW)^*r;c^
,rrE$1p]1+%r;cX*rW)m/r;cg/rrDg+rW)a+!"o21p_!H)q[ri.p_!H)q[ri.pC[E*r=S`'pC[B)pC[B
)rXo,0pC[B)rXo,0rXo#>rW)^*rW)p0rW)p0r;cg/rW)[)ZiG[XJcN(Vpj)f<qg&)>rd"GBqK`#>rH\D
CpAk&8r;chBquHY?q#L28rW)qCr;chBr;chBr;c\>qZ-P>rrE%DpAk&8quHV>!!)uurH\>Ard"JCqK_u
=qK_u=qK_r<r-A8AqK_r<r-A;Bqfr/Ard"MDrH\&9pNc`<rH\<drW)qCrW)_=r;chBr;c\>quHS=r;ch
BrW)qCr;chBrrE"CrrDqApAjtUr;c^^quH^`rVuouqEt2]rBp5XqEt2]r^6S`r'U8[pd>#\r^6Var^6V
ar^6VaqEt,[r'UJar^6D[!(6WNquHU]r;cd`r;cgarW)d^quHR\quHR\qZ-O]rW)d^qZ-O]rrDp`!!*!
crrE!bp&G'mpI"o[pd>#\r^6Ybpd=u[r^6VaqEt/\qEt2]r^6Ybr^6Var^6\crBpSbqa:)Xp_!K*!!)m
.quH^.r;c[+r;cd.o`4h#r;cg/quHX,q#L1%rW)p0r;cg/r;cg/r;c[+qZ-U-rt582rXnl)q@WW*q[rc
,r=Su.rXo,0q@WW*q@WW*q@WT)r"8o.q@WT)r"8r/q[il0&J5'V!!)s0o`4^urW)^*rW)p0rW)^*r;cg
/r;c[+quHR*r;cg/rW)p0r;cg/rrE!0rrDp.r;_ELJcLB&JcOF's*:^HWrW-EgApU@rd"A@rct4<`W6$
+^AsZ%r^6&QgAq4?qZ-U_rW%NMklC_qS,g2%rXm9QrW)p0qZ-U-OT9t5JcLB&`W6!`^]9`%rd!o3g&V+
tqZ-V@[/dQ6r^5*6L&h3?!!((?r^6P_r^4^+U&b0)j8ac3o)Sb%`rQ)NqZ-U-f`6U(JcLB&JcPcMrcs;
"cN*ria8l0aquH\@r;_ELli@#PRK1#$r^4d-!!)sbquH[_O9!u7rXl43WrW,2gApXAr=Sr-r=Pb(JcLB
&bQ*4pl2Ug0RK0u#rcuWdrW)V:OT=#6!(3gfWW<#cg]6[@og>JS`W,uN^&XN#rXnPug&UdX[/bdYJcLB
&JcLB&o)Sc8`rPgYfDpL'JcOa0r^4^+p-\*FJcLB&cN*qV`rPfFquD<KJcLB&JcLB&WrW-EgApR?pj&M
4JcM2=r^6&Qg&Un8quD<KJcNF`rXm9Qr;cU)NrXb3JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB
&JcLB&JcLB&JcLB&JcLB&JcLB&bQ*4pJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB
&JcLB&JcLB&JcLB&JcLB&JcLB&bQ*4pJcLB&JcLB&JcLW-rd"GBJcP`Lrd"#6rHYsSrd"&7rd";>JcPK
Er^2bIlN$oOnGrMT\cD^sq#L6kr^2VEj8f/kU&`jHrXnZ#r=QjGq>gL,nc8Y$ScF?BJcLB&^]=@Z`W3C
Hrd"#6rH[K)ec>\pnc8Z7_>p_=r^5<<UB(9\nGrMTpAi,3r^65Vr^508S,iO#l2ZqHrXnf'r;cd.\cD^
Anc8Y$joBu5JcLB&bQ.57rcu3Xrd"5<rd!W+c2dihjT,:*pAk2<rW)qCpAk/;p]0[]rd!`.rH\):rd"&
7rd!#oi;ijE^&\."pAk1[p].r,r^5cIr^6D[r^6Ybr^6S`quH[_j8f0HklCZLp&P(Znc8YVk5`g.rXlj
ErXo)/qZ-U-ZN0t:jT,8lqZ-QprXo,0rXnl)r=S)jrXnApr=S`'rXn]$rXnr+JcLB&JcMhOrd!5uj8f1
)pAk2<ZN0uM!!)-]rd"5<rd"JCrd"5<rH[H(rd!`.rH\>Aq>gM?nc8Z7[/g1nm/YQ7r^6D[r^4L%o)Sb
WjT,9IpAk1[rW)pbpAk.Zj8f0Ho)SLbrBp8Yr^65Vr^4'nrXo/1^]=?GpAk1)dfA>,rXn5lrXnl)rXo,
0rXnl)r=S,k!!*!1klCYop&P((nc8Y$_>o/fJcLB&iW/t'^&\.XpAk2<pAhl,rd!T*rd"5<rd"JCrd"A
@r;ceAj8f1)klC[-p&P);nc8Z7joEa.r^4C"r^6S`quH^`ZN0tljT,9Iq>gKpr^6Ybr^6D[rBoWGr^5o
MrBp8Yr^65Vr^6G\bQ.57rXljErXnl)rXn8mc2dhUjT,8lpAk1)rW)p0pAk.(p]0[]rXnApr=S`'rXn]
$rXmZ\JcLB&JcO*srcu3Xrd"GBqZ-V@ZN0uMjT,:*qZ-Qprd"JCrd"5<rH[H(rd!`.rH\):rd"&7rd";
>]`A%!aT2#7r^6D[r^4!lr^6)Rp]1:\pAk1[rW)pbpAk.Zj8f0HklCZLp&P(Zq#L6kr^4'nrXmlbj8f/
kpAk1)ZN0t:!!)-]rXnl)rXo,0rXnl)r=S)jrXnApr=Su.q>gL,nc8Y$ScF?BJcLB&^]=@ZpAk2<df?c
Urd"#6rH[K)!!*"DklC[-p&P);nc8Z7_>p_=r^6D[r^5cIUB(9\nGrMTpAjU]r^5oMrBp8Yr^65Vr^50
8S,iO#pAk1)pAg<UrXnf'r;cd.j8f/kklCYop&P((nc8Y$joBu5JcLB&bQ.SAr-A2?rd"JCrd"GBrd"D
ArH\;@rd"MDrH\ABrd";>rH\2=rHSACrd">?pj)f<r-A2?rcnJDrH\DC!!)tCquH_A!!)tCq>gG=quH_
ArW)tDq#LD>rW)qCrrE%Dq#LA=quH_AqZ-V@!!*"DrW)qCqZ-V@!!)tCrrE%Dr;chBrW)qCrrE%DrW)_
=q>gJ>r;chB!!)e>q#LD>quHY?quH_A!!)tCq#LA=qZ-V@rrE(Er;cb@quH$_r'UA^r^6Ybr^6Var^6S
`rBpJ_r^6\crBpPar^6J]rBpA\rBgPbr^6M^pd=u[s$QcQquH^`!!)sbrW)maquH^`!!)sbq>gF\quH^
`rW)scq#LC]rW)pbrrE$cq#L@\quH^`qZ-U_!!*!crW)pbqu?]sr^-YcrBpSbr^6Var^6Ybr^6\cr^6Y
bpd=lXrBpM`r^-Ycpd=iWr^6S`r'UA^r^-YcrBpA\rBpG^r^6\cs$Q_br'TTHr"8i,rXo,0rXo)/rXo&
.r=Sr-rXo/1r=T#/rXnr+r=Si*r=K#0rXo)/rW)^*r;ca-quH^.!!)s0rW)m/quH^.!!)s0q>gF*quH^
.rW)s1q#LC+rW)p0rrE$1q#L@*quH^.qZ-U-!!*!1rW)p0qZ-U-!!)s0rrE$1r;cg/rW)p0rrE$1rW)^
*q>gI+r;cg/!!)d+q#LC+quHX,quH^.!!)s0rW)irr=So,rXo/1rt520r"5V&JcLB&[fH5Lr;chBrW)q
Cr;chBrW)b>rW)Y;qg&,?q0Do=pNcT8pj)l>q0Do=piui>qK`&?pj)c;qK`#>rcnJDrH\2=rcnJDrrDe
=r;cY=rW)qCr;cV<rW)qCr;cS;rrE%Dr;chBrW)\<!!)e>q>gJ>r;chB!!)e>!!)iqrd"GBq0Dr>pNc]
;q0Do=qK`&?q0D6*q*Y)\r^6Ybr^6Var^6YbrBpNNrW)FTr;cX\r;cRZq>g:XrrDj^r;cU[!!)j_rW)^
\quHR\r;cjb!CHkc6hp`]6iI)[6i@#\6iI)b6i@#[6iI)b6i@#Z6iR/c6i@#a6iI)[6N@,]6i$f]6i@#
a6N@,]6hp`]6i@#\6iI)[6i@#\6i@#]6iI)]6g=[I&cD_/&cVh2!<*T/!<*T0!;R6+!:UU!!;R6*!;@*
%!;I0+!;R6*!;I-+!;[<,!;I0(!;[<+!<*Q1!<!N*!<*T0!;@*(!;R6+!<*T/!;I0*!<*T/!;@**!<*T
/!<*T0!;@',!"fh>&c)M+&cD_/&HDh+&buG+&cD_*&cMe)&cD_*&cD_+&cMe+&aKFK!.k3&!:Bj^H2[g
CH2[gCH2RaBH2[g>H2[g4H2dm=H2[g<H27O9H2dmBH2W$f!:Y:5!;Cd<!;Lj=!;Up9!<.9C!;Cd<!;Lj
=!<.9B!;Lj=!<.9B!<7??H2dmDH2RaBH2[g<GlRj>H27O>H2RaBGlRj>H2.I>H2[g=H2[g<H2[g<H2[g
BH2`*h!;Lj)!;Jq\!<,@b!<,@a!<,@b!;T"]!:N;T!;Ak[!;AkY!<3&o6iR/]6iI)T6iI)[6iI)\6iI)
]6hp`]6iI)[6iI)\6iI)b6i@#a6i07M!<,@a!;Ak\!<,@a!<,@b!;Ah\!;JqX!<#:`!<,=c!;JqW!<,@
b!;Jq\!;Ak\!!!#n6iI)^6iR/]6gOgQ!;I0*!<*T0!<*T/!<*T0!;R6+!:LO"!;@*)!;@*%!;I0+!;I0
*!;@*%&cMe)&cMe*&cMe+&buG+&cMe)&cMe*&cMe0&cD_)&cMe0&cD_(&cVk1&cD_/&cMe)&HDh+&c)M
+&cD_/&HDh+&buG+&cMe*&cMe)&cMe)&cMe,&cVk+&cMc^!.k3&!8ISPGlRjCH2[gCH2[gCH2RaBH2dm
CH2dmCH2dmCH2[gAH2dmCH2dmCH2dmCH2[gBGlRjBH2Ra?!<.9B!;q*B!<%3B!<%3C!;q-A!<.9C!;Cd
<!<.9C!<.9C!;Up9!<.9C!;q*B!<%3B!<.9D!<%3B!<.9C!<.9?H2[gCH2[gAGlRjBH2dmDH2RaBH2[g
AGlRjCH2RaBH1q=;H2RaBH2[gBH1h7;H2[gBGlRjBH2dmBGlRjCGlRjE!<%3C!<%3B!;_!@!<%3C!<.9
0!;o1a!<#:a!<,@b!<,@a!<,@c!<#:b!<#:b!<#:a!;o4a!<#:b!<#:b!<,=c6iI)a6N@,a6h^T[6i@#
_6N@,b6iI)a6iR/a6iI)b6iI)[6iI)b6iI)b6iI)]6hp`]6iI)`6N@,b6iI)b6iR/b6iI)b6iI)[6iI)
b6iI)`6N@,a6iR/c6i@#a6iI)`6N@,b6i@#a6h^TZ6i@#a6iI)a6hUNZ6iI)a6N@,a6iR/a6N@,b6iI)
a6iR/b6iI)^6iR/b6iR/c6gFaM&HDh0&cMe0&cMe0&cD_/&cVk0&cVk0&cVk0&cMe/&HWOE!<!N0!<!N
0!<!N/!<!K0!;mH'!<*T/!;mE/!<!N/!<!N0!;mH.!<*T0!;@*)!<*T0!<*T0!;R6&!<*Q1!<3&s&HDh
0&cMe0&cVk0&cMe0&cMe)&cMe0&cMe.&HDh/&cVk1&cD_/&cMe.&HDh0&cD_/&bc;(&cD_/&cMe/&cD_
+!<*T0!<!K0!;mH/!;mE/!<!N/!<!N0!<!N/!;[<-!<!N0!<*SN!.k3&!0dK^H2[gCH2[gCH2djE!<.9
B!<.9D!<%3B!<.9D!<.9B!<%3B!<%3C!<.9B!<.9D!<%3A!<.9<!<.9B!<%3B!<.9C!<.9B!<.9B!<.9
C!<.9B!<7<GGlRjCH2[gBH2dmCH1_1:H2[gCH2RaBH2dmCH2[gBH2dmDH2[gCH2RaBH2[gCH2[gBH2[g
BH2dmDH2RaBH2[gCH2RaBH2[dD!<.9<!<%3A!<.9C!<%3:!<.9C!<.9C!<%3C!<.9B!<%3C!<.9B!<.9
C!<%3@!<.9C!<%30!<#:a!<,@b!<,@b!<,@a!<,@c!<#:a!<,@c!<,@a!<#:a!<#:b!<,@a!<,@c!<#:
`!<,@[!<,@a!<#:a!<,@b!<,@a!<,=c!<)ut6iI)b6i@#a6iR/b6iI)a6iR/b6hLHY6iI)b6i@#a6iR/
b6iI)a6iR/c6iI)b6i@#a6iI)b6iI)a6iI)a6iR/c6i?ub6iTOQ!<,@a!<,@a!<,@[!<#:`!<,@b!<#:
Y!<,@b!<,@b!<#:b!<,@a!<#:b!<,@a!<,@b!<#:_!<,@b!<#:a!:Kpd&cMe0&cMe0&cMe0&cD_/&cVk
0&cMe0&cVk1&cD_.&cMe/&cVk1&cD_/&cVk0&cD_/&bc;)&cD_.&cVh2!<*T0!<*T/!<*T/!<*T0!<*T
/!<*T1!<!N/!<!N0!<!N&!<*T0!<*T/!<*T1!<!N/!<!N0!<*T0!<*T/!<*T0!<*T0!<*Q1&cMe/&cVk
1&cD_/&cMe0&cD_/&cD_/&bc;(&cD_/&cMe/&bZ5(&cMe0&cMe/&cVk1&cD_.&cVk1&cD_/&cMe/&c;Y
.&cMe/&Wm'F!.k3p!!!#uH2RaBH2[gCH2[gCH2RaBH2dmCH2[gCH2dmDH2RaBH2I[AH2dmDH2RaBH2dm
CH2RaBH1q=<H2RaBH2RaBH2[gCH2RaBH2RaBH2[gCH2RaBH2dmCH2[gBH2dmCH1_1:H2[gCH2RaBH2dm
CH2RaBH2dmDH2[gCH2RaBH2[gCH2[gCH2RaAH2dmDH2RaBH2[gCH2RaBH2RaBH1q=;H2RaBH2[gBH1h7
;H2[gCH2[gBH2dmDH2RaAH2dmDH2RaBH2[gCH2I[@H2RaBH2dm4!<,@a!<,@b!<,@b!<,@a!<,@c!<#:
a!<,@c!<,@a!<,@`!<,@c!<,@a!<,@c!<#:`!<,@[!<,@a!<,@c!<3&u6iI)b6i@#a6i@#a6iI)b6i@#
a6iR/b6iI)a6iR/b6hLHY6iI)b6i@#a6iR/b6i@#a6iR/c6iI)b6i@#a6iI)b6iI)c6NBLP!<#:b!<,@
a!<,@b!<,@a!<,@a!<,@[!<#:`!<,@b!<#:Y!<,@b!<,@b!<#:b!<,@a!<#:b!<,@a!<,@b!<,@`!<#:
`!<,@P!<*T/!<*T0!<*T0!<*T/!<*T1!<!N/!<*T1!<*T/!<*T.!<*T1!<*T/!<*T1!<!N.!<*T/!;cc
q&cD_/&cD_/&cMe0&cD_/&cD_/&cMe0&cD_/&cVk0&cMe/&cVk0&bQ/'&cMe0&cD_/&cVk0&cD_/&cVk
1&cMe0&cD_/&cMe0&cMe0&cD_.&cVk1&cD_/&cMe0&cD_/&cD_/&bc;(&cD_/&cMe/&bZ5(&cMe0&cMe
/&cVk1&cD_.&cVk1&cD_/&cMe0&c;Y-&cD_/&YoDY!.k3\!<.9B!<%3C!<.9C!<.9B!<.9C!<%3>!<.9
B!<.6D!;uosH2dmDH2RaBH2dmDH2I[AH1q=<H2RaBH2RaAH2dmDH2RaBH2RaBH2[gCH2RaBH2dmCH2Ra
BH2dmDH1V+9GlRjE!<.9B!<.9D!<%3A!<.9D!<.9C!<.9B!<.9C!<.9C!<.9B!<%3C!<.9B!<.9C!<.9
B!<.9B!<.9<!<%3A!<.9C!<%3A!;Z]pH2[gCH2[gBH2dmDH2I[AH2dmDH2RaBH2[gCH2I[@H2RaBH0bP
16i@#`6iR/c6iI)b6i@#a6iI)a6i$f^6i@#a6i6r`6iR/c6i@#a6iR/c6i6r`6h^T[6i@#a6i@#`6iR/
c6i@#a6i@#a6iI)b6i@#a6iR/b6i@#a6iR/d6NBLG!<,@b!<,@a!<,@c!<#:`!<,@c!<,@b!<,@a!<,@
b!<,@b!<,@a!<#:b!<,@a!<,@b!<,@a!<,@a!<,@[!<#:`!<,@b!<#:Y!<,@b!<,@b!<#:b!<,@`!<,@
c!<,@a!<,@b!<,@`!<#:`!<,@P!<*T/!<!N0!<*T1!!!#u&cD_/&cMe/&c)M,&cD_/&c;Y.&cVk1&cD_
/&cVk1&c;Y.&bc;)&cD_/&cD_.&cVk1&cD_/&cD_/&cMe0&cD_0&HWOE!<!N.!<*T1!<*T&!<*T0!<*T
/!<*T1!<!N.!<*T1!<*T0!<*T/!<*T0!<*T0!<*T/!<!N0!<*T/!<*T0!<*T/!<*T0!!!#u&bc;(&cD_
/&cMe/&bZ5(&cMe0&cMe/&cVk1&c;Y.&cVk1&cD_/&cMe0&c;Y-&cD_/&aTLL!.k3&!:KpeH2RaAH2dm
DH2[gCH2RaBH2[gAH2@U@H2RaBH2I[AH2dmDH2RaBH2dmDH2I[AH1q=<H2RaBH2[dD!<%3C!<.9B!<.9
B!<.9C!<.9B!<.9D!<%3A!<.9D!<.99!<.9C!<.9B!<.9D!<%3A!<.9D!<.9C!<.9B!<.9C!<.9C!<.9
B!<%3C!<.9B!<.9C!<.9B!<.9B!<.9<!<%3A!<.9C!<%3:!<.9=!<%3C!<.9A!<.9D!<.9B!<.9C!<.6
D!;uorH2RaBH0bP16i@#`6iR/c6iI)b6i@#a6iI)`6i-l_6i@#a6i6r`6iR/c6i@#a6iR/c6i6r`6i6r
^!<,@a!<,@a!<#:b!<,@a!<,@a!<,@b!<,@a!<,@c!<#:`!<,@c!<,@X!<,@b!<,@a!<,@c!<#:`!<,@
c!<,@b!<,=c!<)ut6iI)b6iI)b6i@#`6iR/c6i@#a6iI)b6i@#a6i@#a6h^TZ6i@#a6iI)a6hUNZ6hgZ
[6iR/c6i6r`6N@)d!<,@a!<,@b!<,@`!<#:`!<,@Q!!!#u&cD_.&cVk1&cMe0&cD_/&cMe.&c2S-&cD_
/&c;Y.&cVk1&cD_/&cVk1&c;Y.&bc;)&cD_/&cD_.&cVk1&cD_/&cD_/&cMe0&cD_/&cVk0&cD_/&cVk
1&bH)&&cMe0&cD_/&cVk0&cD_/&cVk1&cMe0&cD_/&cMe0&cMe0&cD_.&cVk1&cD_/&cMe0&cD_/&cD_
/&bc;(&cD_/&cMe/&bZ5(&blA)&cVk1&c;Y.&cVk1&cD_/&cMe0&c;Y-&cD_/&cVi_!.k3&!8ISJH2dm
DH2[gCH2RaBH2Ra@H2I[AH2RaBH2I[AH2dmDH2RaBH2dmDH2I[AH2Ra?!<.9B!;:^<!<.9B!<.9B!<.9
C!<.9B!<.9D!<%3A!<.9D!<.99!<.9C!<.9B!<.9D!<%3<!<.9C!<.9B!<.9C!<.9C!<.9B!<%3C!<.9
B!<.9C!<.9B!<.9B!<.9<!<%3A!<.9C!<%3:!<.9?!;h'A!<.9A!<.9D!<.9B!<.9C!<.9A!;:^)!;8e
[!<,@b!<,@a!<,@a!;o4^!<,@a!<,@`!<,@c!<,@a!<5Cf6N@,c6i6r`6h^T[6i@#Y6iR/c6i@#a6i@#
a6iI)b6i@#a6iR/b6i@#a6iR/c6hCBX6iI)b6i@#a6iR/b6hgZ\6iI)b6i@#a6iI)b6iI)b6i@#`6iR/
c6i@#a6iI)b6i@#a6i@#a6h^TZ6i@#a6iI)a6hUNZ6i$c_6i9=O!<,@`!<,@c!<,@a!<,@b!<,@`!;8e
H!;7$)!<*T0!<*T/!<*T/!;mH,!<*T/!<*Q1!;uos&cVk1&cD_/&cVk1&c;Y.&bc;)&cD_'&cVk1&cD_
/&cD_/&cMe0&cD_/&cVk0&cD_/&cVk1&bH)&&HDh2!<*T/!<*T1!<!N)!<*T0!<*T/!<*T0!<*T0!<*T
/!<!N0!<*T/!<*T0!<*T/!<*T/!<*T)!<!N.!<*T0!<!N.!;Z]p&c)M)&cVk1&c;Y.&cVk1&cD_/&cMe
0&c;Y&&]as(!.k38!;:^<!<.9D!!!#uH2RaBH2I[?H2RaBH2RaBH2I[AH2dmDH2RaBH2dmDH2I[AH1q=
<H2Ra:H2dmDH2RaBH2RaBH2[gCH2RaCGli6k!<%3A!<.9D!<.99!<.9C!<.9B!<.9D!<%3<!<.9C!<.9
B!<.9C!<.9C!<.9B!<%3C!<.9B!<.9C!<.9B!<.9C!!!#uH1q=;H2RaBH2[gBH1h7;H2@U<H2dmDH2I[
AH2dmDH2RaBH2[gCH2I[9H0bP)6iR/c6iI)b6i@#a6i6r^6i@#a6i@#a6i6r`6iR/c6i@#a6iR/c6i6r
`6h^T[6i@#Y6iR/c6i@#a6N@,c!<,@b!<,@a!<,@c!<#:`!<,@c!<,@X!<,@b!<,@a!<,@c!<#:[!<,@
b!<,@a!<,@b!<,@b!<,@a!<#:b!<,@a!!#Cd6iI)b6i@#a6i@#a6h^TZ6i@#a6iI)a6hUNZ6i-l[6iR/
c6i6r`6iR/c6i@#a6iI)b6i6rX6iI)S!;7$)!<*T0!<*T/!<*T.!;mH-!<*T/!<*T.!<*T1!<*T/!<*T
1!<*T.!<*T)!<*T/!;dB+&cVk1&cD_/&cD_/&cMe0&cD_/&cVk0&cD_/&cVk1&bH)&&cMe0&cD_/&cVk
0&blA*&cMe0&cD_/&cMe0&cMe0&cD_.&cVk1&cD_/&cMe0&cD_/&cD_/&bc;(&cD_/&cMe/&bZ5(&c2S
)&cVk1&c;Y.&cVk1&cD_/&cMe0&HDh0!;7"e!.k3&!6bEC!<.9<!<.9C!<.9B!<.9@!;q-A!<.9B!<.9
A!<.9D!<.9B!<.9D!<.9A!<.9<!<.9B!<.9<!<.9B!<.9B!<.9C!<.9B!<.9D!<%3A!<.9D!<.99!<.9
C!<.9B!<.9D!<%3<!<.9C!<.9B!<.9C!<.9C!<.9B!<%3C!<.9B!<.9C!<.9B!<.9B!<.9<!<%3A!<.9
C!<%3:!<.9B!;Lj>!<.9A!<.9D!<.9B!<.9C!<.9A!<%3<!:Bjd6h^T[6iI)b6i@#a6i-l]6iI)b6i@#
a6i6r`6iR/c6i@#a6iR/c6i6r`6h^T[6i@#a6iR/^!<,@a!<,@a!<,@b!<,@a!<,@c!<#:`!<,@c!<,@
X!<,@b!<,@a!<,@c!<#:[!<,@b!<,@a!<,@b!<,@b!<5Cd6i@#`6iR/c6i@#a6iI)b6i@#a6i@#a6h^T
Z6i@#a6iI)a6hUNZ6i@#[6iR/c6i6r`6iR/c6i@#a6iI)b6i6r_6fe=I&bc;)&cMe0&cD_/&c2S+&cMe
0&cD_/&c;Y.&cVk1&cD_/&cVk1&c;Y.&cD_,!<*T/!<*T)!<*T/!<*T/!<*T0!<*T/!<*T1!<!N.!<*T
1!<*T&!<*T0!<*T/!<*T1!<!N)!<*T0!<*T/!<*T0!<*T0!<*T/!<!N0!<*T/!<*T0!<*T/!<*T/!<*T
)!<!N.!<*T0!<!N'!<*T/!;I0+!<*T.!<*T1!<*T/!<*T0!<*T.!<!M#!.k3&!4W%.H1q=<H2[gCH2Ra
BH27O=H2dmDH2RaBGlRjC!<.9D!<.9B!<.9D!<.9A!<.9<!<.9B!<.9<!<.9B!<.9B!<.9C!<.9B!<.9
D!<%3A!<.9D!<.99!<.6D!<3&uH2RaBH2dmCH2%C=H2[gCH2RaBH2[gCH2[gCH2RaAH2dmDH2RaBH2[g
CH2RaBH2RaBH1q=;H2RaBH2[gBH2Ra>!<.9C!;q*B!<%3C!<.9A!<.9D!<.9B!<.9C!<.9A!<%3)!<,@
[!<,@b!<,@a!<,@^!;o4a!<,@a!<,@`!<,@c!<,@a!<,@c!<,@`!<,@[!<,@a!<,@[!<,@a!<,@a!<,@
b!<,@a!<,@c!<#:`!<,@c!<5Cd6hCBX6iI)b6i@#a6iR/b6hgZ\6iI)b6i@#a6iI)b6iI)b6i@#`6iR/
c6i@#a6iI)b6i@#a6i@#a6h^TZ6i@#a6iI)a6hUNZ6iI)`6N@,b6iR/c6i6r`6iR/c6i@#a6iI)b6i6r
_6fe=I&bc;)&cVh2!<*T/!<*T,!;mH/!<*T/!<*T.!<*T1!<*T/!<*T1!<*T.!<*T)!<*T/!<*T)!<*T
/!<*T/!<*T0!<*T/!<3W4&HDh0&cD_/&cVk1&bH)&&cMe0&cD_/&cVk0&blA*&cMe0&cD_/&cMe0&cMe
0&cD_.&cVk1&cD_/&cMe0&cD_/&cMb1!<*T)!<!N.!<*T0!<!N'!<*T0!;mE/!<!N0!<*T.!<*T1!<*T
/!<*T0!<*T.!<!Mk!.k3&!.k4>!<.9B!<%3C!<.9C!<.9B!<.9>!<%3C!<.9B!<.9A!<.9D!<.9B!<.9
D!<.9A!<.9<!<.9B!<.9C!!!#tH2dmDH2RaBH2RaBH2[gCH2RaBH2dmCH2RaBH2dmDH1V+9H2[gCH2Ra
BH2dmCH2RaBH2dmDH2[gCH2RaBH2[gCH2[gCH2RaAH2dmDH2RaBH2[gCH2RaBH2RaBH1q=;H2RaBH2[g
BH1h7;H2[gBH2dmCH2dmDH2I[AH2dmDH2RaBH2[gCGlRjC!<%3A!<.91!<,@a!<#:b!<,@b!<,@a!<,@
]!<#:b!<,@a!<,@`!<,@c!<,@a!<,@c!<,@`!<,@`!;lir6i@#a6i@#`6iR/c6i@#a6i@#a6iI)b6i@#
a6iR/b6i@#a6iR/c6hCBX6iI)b6i@#a6iR/b6i@#a6iR/c6iI)b6N@,c!<,@b!<,@b!<,@a!<#:b!<,@
a!<,@b!<,@a!<,@a!<,@[!<#:`!<,@b!<#:Y!<,@b!<#:b!<#:b!<,@`!<,=c!!!#u6i@#a6iI)b6i6r
_6i@#a6gXjR!<*T/!<!N0!<*T0!<*T/!<*T+!<!N0!<*T/!<*T.!<*T1!<*T/!<*T1!<*T.!<*T)!<*T
/!<*T/!<!N0!<*T/!<*T/!<*T0!<*T/!<*T1!<!N.!<*T1!<*T&!<*T0!<*T/!<*T1!<!N.!<*T1!<*T
0!<*T/!<*T0!<*T0!<*T/!<!N0!<*T/!<*T0!<*T/!<*T/!<*T)!<!N.!<*T0!<!N'!<*T0!<!N0!<!N
0!<*T.!<*T1!<*T/!<*T0!<*T.!<!N.!<*T1!.k3&!.k4+!<.9B!<%3C!<.9C!<.9B!<.9D!<.9B!<.9
D!<.9B!<.9A!<.9D!<.9B!<.9D!<.9A!<.9B!;ccqH2RaBH2RaAH2dmDH2RaBH2RaBH2[gCH2RaBH2dm
CH2RaBH2dmDH1V+9H2[gCH2RaBH2dmCH2RaBH2dmDH2[gCH2RaBH2[gCH2[gCH2RaAH2dmDH2RaBH2[g
CH2RaBH2RaBH1q=;H2RaBH2[gBH1h7;H2dmCH2[gBH2dmDH2I[AH2dmDH2RaBH2[gCH2I[@H2RaBH0bP
16i@#`6iR/c6iI)b6i@#a6iR/c6i@#a6iR/c6i@#a6i6r`6iR/c6i@#b6NTUT!<,@`!<,@[!<,@a!<,@
a!<#:b!<,@a!<,@a!<,@b!<,@a!<,@c!<#:`!<,@c!<,@X!<,@b!<,@a!<,@c!<#:`!<,@c!<,@b!<,@
a!<,@b!<,@b!<,@a!<#:b!<,@a!<,@b!<,@a!<,@a!<,@[!<#:`!<,@b!<#:Y!<,@c!<#:b!!!#t6iR/
c6i6r`6iR/c6i@#a6iI)b6i6r_6i@#a6gOgP&cD_.&cVk1&cMe0&cD_/&cVk1&cD_/&cVk1&cD_/&HDh
0!<*T1!<*T/!<*T1!<*T.!<*T)!<*T/!<*T/!<!N0!<*T/!<*T/!<*T0!<*T/!<*T1!<!N.!<*T1!<*T
&!<*Q1!<3&u&cD_/&cVk0&cD_/&cVk1&cMe0&cD_/&cMe0&cMe0&cD_.&cVk1&cD_/&cMe0&cD_/&cD_
/&bc;(&cD_/&cMe/&cD_+!<*T1!<!N/!<!N0!<*T.!<*T1!<*T/!<*T0!<*T.!<!N.!<*SO!.k3&!0dK
_H2RaAH2dmDH2djE!<.9B!<.9D!<.9B!<%0C!<.9B!<.9A!<.9D!<.9B!<.9D!<%3A!<.9<!<.9B!<.9
B!<%3C!<.9B!<.9B!<.9C!<.9B!<7<GGlRjCH2[gBH2dmDH1V+9H2[gCH2RaBH2dmCH2RaBH2dmDH2[g
CH2RaBH2[gCH2[gCH2RaAH2dmDH2RaBH2[gCH2RaBH2[dD!<.9<!<%3A!<.9C!<%3:!<.9D!<%3B!<%3
C!<.9B!<%3C!<.9B!<.9C!<.9A!<%3A!<.91!<,@a!<#:b!<,@b!<,@a!<,@c!<,@a!<#7b!<,@a!<,@
`!<,@c!<,@a!<,@c!<#:`!<,@[!<,@a!<,@a!<#:b!<,@a!<,=c!<)ut6iI)b6i@#a6iR/b6iI)a6iR/
c6hCBX6iI)b6i@#a6iR/b6i@#a6iR/c6iI)b6i@#a6iI)b6iI)b6i@#`6iR/c6i?ub6iTOQ!<,@a!<,@
a!<,@[!<#:`!<,@b!<#:Y!<,@c!<#:a!<#:b!<,@a!<#:b!<,@a!<,@b!<,@`!<#:`!<,@b!:Kpe&cD_
.&cVk1&cMe0&cD_/&cVk1&cD_.&HDh1&cD_/&c;Y.&cVk1&cD_/&cVk0&cD_/&bc;)&cD_/&cMb1!<!N
0!<*T/!<*T/!<*T0!<*T/!<*T1!<!N/!<!N0!<*T&!<*T0!<*T/!<*T1!<!N.!<*T1!<*T0!<*T/!<*T
0!<*T0!<*T/!<!N0!<*T/!<*T0!<*T/!<*T/!<*T)!<!N.!<*T0!<!N'!<*T1!<!N/!<!N0!<*T/!<!N
0!<*T/!<*T0!<*Q1!;uor&cD_/&Wm'F!.k3p!!!#tH2[gCH2[gCH2[gCH2RaBH2dmCH2[gCH2dmDH2Ra
BH2I[AH2dmDH2RaBH2dmCH2RaBH1q=<H2RaAH2[gCH2[gCH2RaBH2RaBH2[gCH2RaBH2dmCH2[gBH2dm
DH1V+9H2[gCH2RaBH2[gCH2[gBH2dmDH2[gCH2RaBH2[gCH2[gBH2[gBH2dmDH2RaBH2[gCH2RaBH2Ra
BH1q=;H2[gBH2[gBH1h7;H2dmCH2[gBH2dmDH2RaAH2dmDH2RaBH2[gCH2@U@H2[gBH2dm4!<#:a!<,@
b!<,@b!<,@a!<,@c!<#:a!<,@c!<,@a!<,@`!<,@c!<,@a!<,@c!<#:`!<,@[!<,@a!<#7b!<3&u6iI)
b6i@#a6i@#a6iI)b6i@#a6iR/b6iI)a6iR/c6hCBX6iI)b6i@#a6iI)b6iI)a6iR/c6iI)b6i@#a6iI)
b6iI)c6iTOQ!<#:b!<,@a!<,@b!<,@a!<,@a!<,@[!<#:a!<#:a!<#:Y!<,@c!<#:a!<#:b!<,@a!<#:
b!<,@a!<,@b!<,@_!<,@b!<#:O!<!N/!<*T0!<*T0!<*T/!<*T1!<!N/!<*T1!<*T/!<*T.!<*T1!<*T
/!<*T1!<!N.!<*T/!;ccq&cD_.&cMe0&cMe0&cD_/&cD_/&cMe0&cD_/&cVk0&cMe/&cVk1&bH)&&cMe
0&cD_/&cMe0&cMe/&cVk1&cMe0&cD_/&cMe0&cMe/&cMe/&cVk1&cD_/&cMe0&cD_/&cD_/&bc;(&cMe
/&cMe/&bZ5(&cVk0&cMe/&cVk1&cD_.&cVk1&cD_/&cMe0&c2S-&cMe/&YoDY!.k3\!;q*B!<%3B!<.9
C!<%0C!;q-B!;q*B!<%3C!<.9B!<.6D!;uosH2dmCH2dmCH2[gBGlRjBH1q=;H2[gAGlRjCH2[gCH2Ra
BH2RaBH2[gBH2dmCH2[gBH2dmDH2[gCH1V+9GlRjE!<.9B!<.9C!<%3C!<.9C!<.9C!;q*B!<%3B!<.9
C!;q*B!;q-B!<%0C!;q-A!<.9B!<.9B!<.9;!<.9D!;q-A!<%3A!;Z]pH2dm<H2dmBGlRjCH2[gBH2dm
CH2[gCH2@U?GlRjBH0bP/6N@,b6iI)b6iI)a6N@,a6iR/a6N@,b6iR/c6i@#a6i6r`6iR/b6iR/b6iI)
a6N@,a6h^TZ6iI)`6N@,b6iI)b6i@#a6i@#a6iI)a6iR/b6iI)a6iR/c6iI)c6NBLG!<,@b!<,@a!<,@
b!<#:b!<,@b!<,@b!;o1a!<#:a!<,@b!;o1a!;o4a!<#7b!;o4`!<,@a!<,@a!<,@Z!<,@c!;o4`!<#:
Y!<,@c!;8e[!;o1a!<#:a!<#:b!<#:a!<,@_!<#7b!;o4N!;mE/!<!N/!<*T1!!!#t&HDh/&cVk/&HDh
0&cVk1&cD_/&c;Y.&cVk0&cVk0&cMe/&HDh/&bc;(&cMe.&HDh0&cMe0&cD_/&cD_/&cMe/&cVk1&HEF
B!<!N0!<*T0!<*T&!<*T0!<*T/!<*T0!<!N0!<*T0!<*T0!;mE/!<!N/!<*T0!;mE/!;mH/!<!K0!;mH
.!<*T/!<*T0!!!#u&bZ5(&cVk/&cMe/&bZ5(&cVk)&cVk/&HDh0&cMe/&cVk0&cMe0&c2S,&HDh/&aTL
L!.k3&!:Bj^H2[gCH2[g<H2[g=H2dmDH2RaBH2I[AH2[g=H2[g<H1q=9H2dmBH2W$f!<.9B!<.9B!<.9
C!;Cd<!;Lj=!<.99!<.9C!<.9B!<.9C!;Lj=!<.9B!;Lj=!<.9B!<7??H2dm=H2[gCH2RaBH2Ra?H2.I
7H2Ra?H2.I>H2[g<H2dm=H2[g=H2RaBGlRjB!;Lj)!;Jq\!<,@b!;Ak[!;Jq]!<,@a!<,@`!<,@b!;Jq
\!;AkY!;lio6iR/]6iI)b6i@#a6i@#a6iI)[6iI)\6iI)b6hCBX6iI)b6i@#a6iI)\6iI)b6i@#a6i07
M!<,@a!;Ak\!;Ak[!<,@a!<,@a!;f.Z!;AkZ!;f.Z!<,@b!;Ak\!;Ak\!!!#o6i@#a6i-lY6gOgQ!;I0
*!<*T0!;@*)!;I0+!<*T/!<*T.!<*T0!;I0*!;@*"!;dB.!;I0*!<*T/!<*T/!<*T0!;@*)!;I0*!<*T
&!<*T0!<*T/!<*T0!;I0*!<*T/!;I0*!<*T/!;@**!;[<,&cMe0&cD_/&cD_,&buG$&cD_,&buG+&cMe
)&cVk*&cMe*&cD_/&c2S'&cMc^!.k3&!87GLH2RaBH2[g<H2Ra>H2[gCH2RaBH2I[AH2[g>H2I[;H2Ra
?!;h'A!;Up=!<.9B!<.9B!<.9C!;Lj;!;_!>!<.99!<.9C!<.9B!<.9B!;Up>!<.9B!<7?@H2[gCH2Ra
;H2[g=H2[gCH2RaBH2Ra?H2.I7H2Ra?H2.I>H2[g@GlRjDH2dm>H2dmD!;Up=!<.9?!;Up)!;](]!<,@
b!;AkZ!;](^!<,@a!<,@`!<,@b!;T"[!;JqU!;f.`!;T"\!<,@a!<,@a!<,@b!;JqZ!;](]!<,@X!<,@
b!<,@a!<,@a!<5F`6iI)b6i@#[6iI)b6i@#Z6iI)\6iI)b6i@#a6i@#^6hp`V6i@#^6hp`]6iI)`6NKO
Sr^6\cpd=rZq*Y)\r^6M^q*XBHq@WZ+rXo,0pC[?(q@W],rXo)/rXf,1r;cg/rW)a+quHL(pAk(&rrDj
,r;cg/r;cg/r;cg/rW)^*quHR*r;cg/oDnk&!!*$!rXo)/rXo)/q%<T+rXo)/p_!K*rXo)/pC[B)p_!K
*rXo)/rXo)/q[rW(pC[?(q[if.q>gL,rW)g-!!*!1rrDg+quHO)r;cg/q>g='`rL\kJcLo5r-A#:rW)q
CpAk,:joG@*q#LA=nGrN5r;cb@kQ(U-!!*"DrrDlqrd!#orH[u7rd"#6rd"8=rd!i1rW)nBpAk2<pAk/
;n,WH5p&P&:q#LA=n,WB3klC\_r'U)Vr^6D[r'TTHrBpA\rBp)TrBpM`r'TuSp]1:\!!*!cp]1:\eH#P
8o)SbWnGrPUp]1:\rW)9brBp;Zr^6D[rBp&Sr^6AZrBpA\rBp&Sr'U>]li?qqoDnk&pAk+'joG>lq#L@
*nGrM"r;cg/rt4GprXf,1rXno*rXmZ\r=SW$rXnZ#rXno*rXnApr=Sc(rXnl)r=SN!rXni(r=Si*r=Sc
(q>gF*NW=Y2JcO!pJcPNFrcsP)JcLB&jT,9IT`BZEJcO7"rXlI:JcLB&JcLB&JcMtSrd!)qJcLB&SH/X
Vkl?;8JcL]/rXo#-JcLB&JcLB&JcLB&joGC+TE'QDJcO:#r^3skJcO!pJcPNFrXk1kJcLB&JcLB&JcO7
"rctgMJcLB&_#XI%`;kJiJcMtSrXm`^JcLB&JcLB&JcL]/rd"A@JcLB&JcPQGr^2\GJcLB&joGAmTE'Q
DJcLB&JcO!pJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&\H%-~>

%%EndBinary
grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (collaboration_03.eps)
%%CreationDate: 12/20/2018 4:42 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B3X+_o/QZ\51c(gi1)W%E7>8k+B]JR"TfsF'4D8f0Xg#)F)o%jJ+dMeG#qkXMNj`MNkMs,g,?:d[Ca"ka)CYieQV"WDuR@H
%0\+%GmO1]D1,\j']C(ZnmbE(bgQ+FEjbf)\Qr(_Eh4gng(=YnGFIn81K4^s())o-Rm:I[4F@sf(Ze\b5P^Z#[_G51W=/*RD\6a+Q
%;t0*MjT=^l)s2-BX2eYTI2R/8<`,ParKo(LmQ`@;!.XV<NCKc$X2]K_5H\m/_Y"CEZ&e.AK=KZiJO?UjNi9>VDG)%q8jOo[L21QS
%r31!=FUe2@5T]iB("G#*_U=4#:u\6e=s%TKK5Uk+c&]<8Z>UE6$NC$H++*N9/2l@;\.uEHDQVTBEPN,./]#Cm&>)G*HC"Y185$eF
%mem2FnZ]7P_OM+dZ3gq=L/IN[r_o@56_n9.s3bA/^[S^5cjL'DB5]H=4u?<U;@8-bQSi)8*U!KEQ=u@:/a[0912:0<Y!<e*mkDIl
%eY@"U'W%:&;.mjA-tZo<+aKe3O9\ci[]i=<M`@k>['?':CIQud4Xt3o9WP#.(k8a.s/Zo@`)/C0F.2^Sh1OG]J@7":!(0V.p3s1d
%[pM(/?%>_G4I==Z:9tkj),]qh@6Hq4PHdiS]Yn7.5)[%g9?hbn-[)?E,e^kW?#E.sic[gKkT93$il5Eu%1RD^eVgkO>D,Ec?rF'-
%+NGt1[VcjcdhHns)Xu<g!YIS'F4clD`l>RH"9-qif?S,jQ":3A`mRi33pZ0:2<>f^.lcmJ!%L%XgD+WjDSSTJ)`ImBWchY$8R#)W
%im%Snj7'^*H.%L`LdfQ;3:M]Unm`M4&9Xb5Ju^pjbgO60s$rEc>(IJ`/%dD@5@#'i9-o_$lhIUJGSLMp5M=R@V!>%MARR=:_Z).p
%Mcgf2Z`GhpNOga.EEt-U\g.XQ#8VAd/;Cq/'8r,J=KGK=Whg>7.@%,2(uj("Zn/3uL0,Q,=X>t>2In]iegJ(e<Q0)dL[+Yg`=O["
%`*s"=J<jJ.T^WW<+Ahi)YR>QWap8f4idV4JIUZ4a=fc<?$9ni?r.3N,(\Z!jb!pp#&2a='11>ua@[:]s%+>WO$s!)EW\WcU!,VFH
%FKBs1]U10GKY=T,_MFi:'UqVt3P39Y%Y%k@KMfrM6Og)T0]FJZLB'(j^e[.=bed.,L+qU7RnQ:(%(U0WfVbAG)SD^g0m.;g%/3k_
%+]%$N6-fP(_6]i?SlsfWg/nsW_D2CiTMYiRW\_`LAV:X[Yo'6YKTY5I<Q7fcK)e5\603]^)#@>VN7%ki$_e5T7tYG"_h^W5M3qM%
%I5X9DHe'u?*XuFLN.?ru+,c!T=nA]qG+H>Ai#/:Fb%>_@&B("Cl,?1RjaL58WXJ5hq+Mn]jTA!:Jd51GV!9Bd$-l=Z>MqQ5%31Qs
%-WNr>,).V&/:(n;Z`:%*cjRV!W)WRce(CMhS%T5_rL\PF(K<=fQBcp*QYj)/dr4r#*;7/-,eZ;;ja$2jqTW?\ci-_TfaFeb!R"*M
%frJ@is/4c@V'I]HkA_"%PKbcX?i7sY&Ot"n)5clt2Pm,),pNgL2%2eLlF*"mTt:0*Xn`m=2Y<K-JY#"QCQtg0iNSsQhdN12Ba*81
%4I]EYe*:Yuk[*cu)_qG#c\2iclGTC]lt?$=1`l-j1kkd1c_=q=4aL((SHe53JZ]%8H=<J3"JhfsK&6tma;TVI:doV=1R\ErSO#)D
%^GEP6)-A#M/U;f\AjE\:>S;eD`!mi-*"bKC-8t/oDLb'qo/&pg"?CFA%V5-Mio#U;YR[B-Mj?IJ<"25&2Jqqd:Cr>7+&6f%BW)?a
%+<k6+W)j4mY[e+%eH`?@C9DOj\rEJhFcWIrB9NL80U2RVd36A5-DH%qBSZX;%,GKN"HdQZ<E2\+@3i`#@o+)Fb?,HO6'Kr`5paZ5
%E?Hk25^M1:N2]Ti*9!VgZ8mpIOP.?PU;92-!ksg.P\8@t-h7NW",TNZ-I=1;p2n%X.DS_m!kA>_E*,PBc>cDj\f;cP[0st&GJJ3K
%TGW=_=.U"mG>BUAUOIdq+s>CL"3KZ2i"H@uDk_M*Nl,m#SJ"mFPJBHSF\</?8r4HF#RaDL`eH(7WBrt.TT\7Wid?<MOp4?`K%TEo
%"tRm?_`%oQ8!$:tgOQ&^SoR$\hblj4-'L2QK,;l@;KVl#j-MMH$J81*<BqZ1-@DK]5b]ErjTBZ>=ou]a/R-K*Mee1s&2tqm2PN6-
%SA&Zg:EN1KCt?PeHq.-gq4>dMiA)(fDug`*JY[=`Dl4!g_Z!8uU!NsGjg"*m@'G-6X?92%_$GRl;_.pAAQBfV6ESt%LE$KNe<9pP
%Z!,S*1'SF/)NL3ISbgrphamjT!b_bB2h(T5lQ6e"K>n#DGube//G3lnC076%k:e5Yoeb!GL>7sX=[^PqB9ocGqMBBaabH.p_t:ER
%E`V/sTbqSQM/:h[4d)_i^/GAn]b.7B!79Xm<`Y5(+=<P2clgtHR&?XV<dYlH)_G)42W0\gZm;5Z&n%S/a=OYPU"<+Mns(%H?tdZ2
%ZXJb8e$mT98^7iJ_:Y)O`kGtgiuF0OdQPS!3Tf!@nVsn;C`Y.B?\.k&2M`t1OaHS7B<^hKXW[c9NHqUL\VNBgdc%2eULfPU%9!-M
%&F:$4m4\S\Bb:>D?oe>-KUVu5=RYr#R*.IG3&AIZ%:Pk,FJ1i"ktbqY_DQm0<Sk39TXc+_AJm*;XNM4_/"6kp-/1!bjE?hG0tDiE
%@U+GO:2\t%"(]2[##^cGPe#j*6[+&rf4,gHTXm&TDQBoHrf@2J<-Tq8)_`FV?&AqI5XAtJ7iGtJ)p$j2^-W`48uuU@Q-U/Oabdna
%W@1\Y$ngJUJo?S-`#XjOA/RW?aVGQjUMW#Q25k5OA^M,Ugdhj3kQ1<Ycr\<N!l#<hfG!6GoUTH+RU[:U'n1K\]JCHh*m&N-cP2VY
%8O]A>J`2k[#^BlW+s:V%B)jEfK^8i#b@ng@3jD:,.4Nk61dM4u(7I9O'th)%:/Q^d_FR5=@Zp>X*$$.H*Gl)YG#3`;(*FdG7K$Q@
%R&KLRgBKVX:0WOeZ5_M`<X*(HLRV\+!]E='HYMr%+NO[(0`f8oA=ir+/:21g?*Yi5&shqS_0a8D%U'QW761KmIS%U"Zo;*J-'A7e
%XO%:(*RYhPUP<HuDh]0F3(umN%1-!E=9cK<e7"W9eE1e>k70eJbP5?Hjo_XS'^C=5$4P7eq/:MUQ7)ZuNf0Tk'gYHEr]F845rKd0
%c,6N@EuZuW"O]8F,1:E;/`J^d;dD+AJK*a)C90"o*!OibEM3X]Oq>U:dna6(QN7,@7\<1!d:lcTnc2`;k"sbZP;K4XR9A``<K8,r
%.Y`j:a+6.k^EM5=Ks_9=UrKqOAIN>EJ9ag.1fnq5/.[\N?Vhc*V]_GenqK_D!X#eM6`b53b"4]^fN$/je^8'h,+Jb\nDFL\]L[_!
%d%kB]Qn>A#^3;m&OWD[4H);.hH7Y9V6T#8Z.]"^@S>#M(H]b8]'%r#QKZk\C8PnQbpe8\['B517!N>U32K8qjacQo46/hOMWmL6&
%?t5Q#EGYD\]p=eM),#S$jeuYRH%^IYW/_RSmpV80ROI5i\YOTIn<p-?TO.e-(.oidn6RRq#A1e#j7$1V.2?eTP"`MD;&KT@/I]*V
%St&GQ@<1Z!)nN-.*<Ca^FO#2#e"?!j1,GFn`7EEXfm6&/1fY;WV_RD>B>ADQ'hsIR!6=5TSBrg'S/cgnEhD%IQ8Cm&-.ab(f\H[J
%7tM[ZEX$F@1LXk"E?pj8"LlS5-;T5_`h]WjOLp:V&/n5A>+VIBrU;lQkR:+C+:CD`Vm+(Nbi/:Ur#-LTbe4,@PL%4F_OY1hMb8X3
%H7GiaNX?XE4U65_9Ap[@9Abn$m1#P/A0sK?0'[i"!V\0CHk=I(N1L(5!&<^p5qp47eHN1KRts[I!7jC#:TE?MN[VHY8S8lEi1cAY
%2Sq\"V&>S2RV?jr0VLk@$5/@l,qKe[K`+Fu:4a02Cn`o(S:l8WdJFb/&OllAV9T6);kXu9.T+@Xa:30UQmf+t\/9pV'GCb;Fa;uV
%:gbF_6p93]>WpaiZT46&8DQ%Z9q3G(S3UFj('l,38;ps^V2uQn3XI=()JG[N'&7CQ7ft?'1(Sg;Cngj5jIR`R),?Dhl6/jT*dG#G
%4P$UW_\>(TYi^2[6n6LO:mS3iY!@@M(a/2bZ?Zt6i;k"*QN#I&=Vt!-JUc\/PMDil6J*_+h)ros!4V,6#C6kn*r]l?*<Ue:Np3iS
%R#00XfH%kOOZ>-(VhZJXZ3-,HqC#Q)Y\NP\&g.%+b2bkK%lD54&3ilE`_9h_b'-\q@$@mWc#f$/&^c24E5BXE;qpp[%@XdT"2A+u
%>^<N;VcYj`la/F*&lJk:0AqCE+<%YL,`fjWT`Z+8TUXRq6O*5km=bsGGR4a<#(mj^9PG=NVjWuc-8?*d*N!l%8Z7QR#oeR49k2R;
%-[#I<J4I[jefdd)]M8<Y"Q/E/ZT%cR-4VBI'lR-;2*ejc^>0mci-9I59hVieZ)LRrmBZaTl2OF@!lQ[ko$Br*@-G^DKT)Z/att+Q
%Q1uX0/mokGkSoGbU9$R>.*CQ@RCaLIR9a2h\f?92he_<KZU<<ia;YQ09I3Q2;Li0jN5pVQh**^Km>X;g_mcP@+X3k&RFKQ=)ejp1
%jM<b^8uC-/g]q<@851r[SM!7W4Nom_f=nI.$op%sP9tO53Z+YD[-WJUKpp97P=W:7<MoMl%@'pr'O]PgX=(fgl4Ub&W5/?8ImjMo
%&j99?"8U;&dK7GPEP+7e@>V&+jJM:7EheMmJ,%>fo+KYkiSkrf12*lIX>eK#easrpFqAkEXW))m'4i/uCdNhZ"'6T#q!06<jrEj?
%HZ3u<h<_O-)Q1h!Ik>rrk"/h1Xu52?]3(`,pBsV9F]J5C&sU(Hl_A?snCHM,q$+J`a>;f0[]';+ZVc^WF:D_7WjV7jkkX-\mT.V_
%WGgA+:\F]6Y&p0#gAg/I@JAh5r'PmJE^)%#@pbU96GE_02`86S?l'6@?Vo4/#6&O-^*s6nD(#;D)-g:)g1"*U0)[<7o@+<1;a<b)
%^dh\XfQ_@?[ZZZq<"T[o!s.;F^q<NPD3Z'tj*J%crNg,-$t-7[257N9WB];?hbY2PC[6V;!#34\^^qcdaA_^ioS`m/]5MbM3Gs%E
%0MAhB!t6ohJ935A=&J_)i7I!Y[I`_:;/K?rY_(c0.$"YdL*<gnEq/4ObEHPOf""I7dELU@7UW"pDJ>VFP[qk:.JQKI;32V^AL!s2
%-=0LV.?@?,)Cp@m)Ec>F&A_5U>H?96K--Y%S;RMC;8$9tCIbMu>,C/dH_'cF@C',:%J\L"JeLPM96.r.1.09D.L;29/H0-/.9^SW
%.!`H^>T@TU@d:u#`bpE+eSg+?do-9[$&FgfcGr31[C^6?s&DmY>/-Et\>lekc@HlQ.5eU8A$fLA&7tM:TaH[="<@AYZa$1O@/pVE
%A-fH[+m(\6/S(6gJ:uL!Qe-5ES4sCQC(5!J&^#-1R=fu50\j*P-PNj":@r8&;$EI0oP33L)/3h$*JVr;*#2/T(m8Fldb31bYg\=;
%dLhke?sh+NoCDI3^T<%EOR;B,G#YSpH+j>IYnatj#"/j/7Vn9ID=c",-I7=4Z!eKXKtCpcD2=`=XH97n<5X50r8n1k8jP-*eJj!d
%\FJ17)h0kZ[Xu:p>h.@Il)k'/KOdBS>mt:j\4d84qed9i,^KfB1q6eDm_X5RG`W[d)r9s%J)Pu[8@Wt"nB-hZ?\,">dX9k0+ITr4
%*g5Qq=Od*D'!9mqrNN*USYqVT8V^i@bSu%s/9ZZ9DI.[sW]@la'"C\/TE\Sm#=`*!Z67hO"%2__BTfK_%D]Zgn^fRKQeu4l1<CP-
%*reot:FU\q/4#0pN<W<PmuWT(,df:>4R"\?K9+jJ$/A(%!+BgP%["CLq17b"6!%Y0Q5)q?,Roo3n1+&8:fDVWL,h"t[a>%R4iIk=
%/cu+&a1ITjcSj"V$$39P'r\9%\'>(@O7.=RlSspl=;^UJF9ap>7s,Lb6W*rXe$j>)-*G+iCst;`9ic,M$EZ(6<3glo&(bhQgTiBZ
%1+Zg09=5Hi1s5lFan.=A"XN8u[V;/,Bp^$%9\!+$cmT!J^f<<U+A9b*`XU*F%Dr2.2H3&k6bNna/Eo?[U+9gnUOA6H8P5)IQ'12U
%a\.dI,pu8<-^r;DPpA.W7[!BhV(X\t8t'YqV1qPk-Rg@*;NcDVGtE$2$$_#@0RO7,aqdU'JGKi()Zg(.SWJCC.A9WLBq73r%?dfR
%%#R`<@\@P(@D^/@.6%5UiuJo+OG<o?g&`21CA:-Lo8+6F16G=KU0XR)Uh?5pNF4/Z7iM2To*N.`l:@9!j^\%3/R2rp$$dR>7g1oG
%TKM.J3WihUTAVR6GE2V[_6!d,WBc=L)]UYi-\aW$!b2PP\/Nd(UpIo"M9R!bU<Vj=B:R42IPSKB<.ZsE-jTiaPXSQK/!*kc#1tfK
%,.\-r=jd=g6NK4Oojcp;()MK0!4<tH[t2-sJEf:js1g0i$Li]QggL8VfYB'[n4eEH@YM5lJE#r)e$a/l"deb5[fgZ,!fDoA*BJiZ
%,$9JOAV"3*[dek\$J`EG$_$$+)UKgHc(ij_-#*hBd@h$#$A\qcN>#>>?(m@W5[@gG]a<$t2uWk=;F:<^)FA*B,LHo:U6W(eB`pgS
%C'.-r+1R/&JCu9o^iTZO+kI;W0hn?_9nCD3>-^\/=BsG3SBg?LCS0Z`DH@>3KVXXXJh:pHYh1'kFc`>/P+X3f/\hT`blE9:!,J$u
%!\R+k)%DaaAXH="pMO+`0P:](*]14&)k`aP-@D1;e'LCTQ#L^N:m)18jhjJg+@R!-"L`%F&Vg]G<,iUNd?P:sOSllhorBYON<JGI
%_30Zk&hYG96E\OcLaeGn:Bc^h2)Z70M80.WBokC+AAQ/P:IqKGaG:q1.s3"g;DEiVaMb]eM)Z+L8X4s,aN79bV@r:J+hNL8R!=Sq
%Jmlre^k%kI14F=;9_4pY6K:V1Rr9R18]S0rYm0_e2ddNfOg5bfRON'HZC0-QC0N*(VRhKPB'NSjdW?2#^d/M;--k#M:uk<8$Y@W5
%\PVK`V$j-Fe@JKC?lYh[:XhI)n=\c4_(ufZPWVn96I@Sh09j/GmX[M0Y4@:pB51d%ISftgFD\8IYuu_QMJB_[Jlta*5Np`DdHZm6
%/Wk9h_H#Wj&4NWe_U'[XMLnhOEMuMSeKo3=!])7_!`A'VZT2DM$\MST9P#uDa\6<`0]^(^N+8RpAfSFg@8+O5@g4Xo2M]LT?S[=6
%6Wc6t@>rD5-K>Xo'qcFd%Gl(.V=3AL$"1;a3<\@B1aF1ZF;%?TNBR@SAQIoEc_(sm:g1;a]:N<DSB:JM(GuXK'DF^AY+t4U_kp!R
%BE_<`Qt?r-gqmZBfCSO9[GlCL*4QC&[BPI^Wg[V;Z8?NGi.pTJ!6$`&>kUN8(bX<X$^t3t+\s$"YI;Bh"'X*H+TnPj3]4\l6Prhg
%^]L/c%=[NDV:Z9/<J2Gj>T1ql[Y3\749+)_(#J2IpK1`"2g_XQ@%YK^`$l!k-:jP=bX<imSj!gUP0_%Y*_bel0[D*h@fu*6LU=N^
%_Gp5W:l'Fnc"6FEOl-X]E@;/e'U0jg8N[&uJtPEWBTYPJ56o0#8#">,]q[!N5jY1a:1B7j4VW6:n1h1\Oj/\8&?-rM5kJLEi\)$s
%63K%eLgn_c/h@Wg9GHb7$<7Xn,RuP[V42d#bTE!2+R\tp*fof4AFCl*f0G6$pLf08/Ssp*?`#[6US6b1?#Of]?6he4C1`XcQa@nb
%o7@aa0-sCd@L"(ai:f_B\G)Wgr!33"^'F^pAt?sCF=A-$F(6QAeH9Z%;A4,,-YQ?h`fF[0KJZ#(rhP9El?eq^R?RJQ,nqQYZk6mZ
%2eU3L8"u9m(c#GpV+G8,\,F]X0Z[_S_0Y76aE`p$FsXGhIBo\Ti^ej,HK'=/Wg-,F]B<pDnF.i,)7UE,f&rW^a*H:q#*;PabS'N.
%9LhmAE;%D3UA+q\81ZL!aC\(a!\*qnaW!bj#V`U?^>qs_K(=AO"Y\Wi;f>M:O^TYG<J%MDiX(0;Fl762j\\?p@7grEd'Op`TpMm5
%,VsS4j;kN1b!Yg'/Wc>0OCO.Eef'?>1c-3q*ZrJ8$oSR=.f%[#4#;L.JNeD4,[et!A=g3H]j^K5M%Xq$Ke:EA7UJ2Aas1h,iSLe1
%M+o[d5GrDkMT\Q\8`Wk2)aJQ*%88B1oBDbA'#[Mg)(6m#6's"]4=!K;8-YKH`fO_k:Qi1VG-S91Kl-0LJHpm5aNR+3,Xf2u;YE+d
%QJ!<$6<H/$D"0cB6gX8]la`6&0BC2IK?e2`)&*5b0R0#D1Cl]_!mhi'%0?PGg"L0(JHm6D:uPr1#AMgV$94itBnJgOaTE"s:uFs^
%j$[&>!8*sEOB$nh(DKUH_mU6nk$_[0p21KUAk<I@#?#f6!lQWED`\7@X%CAL&pWOQc'"6P8S2>8L*Ttucsl/;Z84LpM8'8Y.>)#9
%a*42$0L4l,4Qts+W/m>`AT1pWBMYCb*h"PoL%8=OcY#O*13u7oetFgO07sZZ$Ufk>g;P:XWW^e$i.iRc<%u&5Ott*$ZcG7MaA<!!
%OgqAY;cZA?c;_kC_'/#E*$#eca?gA.#EJq8.$S[sb9WMj$N@$[Hc?((jAB.BYM,eYR)!/TX$jZP%h=a-X,mU^h4m*6-b'ooLAY]t
%ia.s%-H<s"KTF;Ca`2bF_*j8580_!#+<7m0AQh^=>gDeP\C")]BnCH'C$(m58UMj?5pSH'Y=m"$9BJLF=Fq<j^,2L6qbp+44G[nG
%n@?[Dk5c*]]2Gl'Kum=9+:k9p3"(XSKF3YZDQ5-rO9JN!glVZr\n$DLkYc/CM-(BN4s6OUDK^_*e4>s4%X3?>%3Kc:8'O"XbhVb%
%F3E\_'+q&dVSq:6i=Mi*,r[Q[/:MBU85(HfT7B\$5-q5Q7%-6[#dTYMPF4h0FFM8a=oShe565t]>gP1@=Q7^VT1>\>51tl[D4]D'
%jN6>:(n^Dh\>uAO8J0&QV3D^F_*ETd]^_=k)Nr,*>>BIlXc;g/^D8CrXi3'qA;Mab5I'04O40(MEU1p4\*s0W\=I7X\+<Ls`,=]`
%Z3dn@6NS8GL#'g[nb+f^*[HkjLW@kH/6umdMT`!;Ba!`JNL;k5Asln9l.dVKSO[K[NJW!b)4!hHl-E*(X.2o2@ehqk9R=r/eFVI)
%R;U)jGQnB8&TP]Me_)6(j88L-e(i'Y-d^7Dc4IIojdY"<T8RY])J$Z:`/EM[&i<@Lj)7W+Tg^Q&.(D5cWFM-T9m"iG%98:)AN:'#
%N_1THq/X(:=7TSjc0di;V!r#c9R]J[%>@[_'3\A`E2XHZ9p^O/JPZpY79#)YVo$?B,1$XBT8,3C$=Hbb(R!(]OG^'B)kD*>g;iCn
%RT=+5.jgttP5:)&Q&2^%gL<M06R*"(T70.cI;T+n38ch+,\LX#!I6+[MrM3+ON-g[`$_jcXTSOodCr<7Jsr+T.d1$:2I_n%06JHg
%#(P6g-ohb"Vi-hg0L!pk=Fqe"o2796d50.Z+i<NSRY^/f+F6d33f0<r6q0#\\A@F"L<C3+UklAW2QH[\/[<kDN=Xf\pr2l\>+?_6
%a!>^[6&Y\eeqdiI8^9R&5*TsVUeA-YC$CqUga#KjHA<^S>&b2m(XaVQlGQsMn^94O]F96&Mn+.C6(a>lpu74FJ8:M^&.?2"V-Y;m
%??S,!j8-]e.$BB2fmNT3M^DjpM/d\]@S03k.?,hq'N`FFQ:AlZYUeYL,d&De8j7NgJJ:o.Uc;7qeO/6*LP3Zgh%%W#(+oMm[A\a[
%9->I_=Q:3%/71P+Mg<JMP>eak8GTs`2mh3b8nn7RUniuEH8b:1(Q0g<-Spsl03_&/PX(6V@9%=Ib"n1&K.5BYQURE*M,c'27;-DR
%RdMtgW3s`/'iF9RDXAfkCD!t?,M"&B9p+][IjK<5dX+h4O%BSEN=Y<iSLAJ"9&,,pHVc[#P#cT4Y2pR(br'Mn=0e!I2C.3$UN@fK
%=N;^gEVX]@LTTHCX1-a8/R5i?laCc_(0e-,%'J,YO;r3CO^U9B5SkB8KhX(S>[1`l=f/7!-9gHY2Z[-1W>14'GsTl^1rE?afq=UE
%23mRgJM2D1($Ie^_,X0:*kLtX%9nH9I-c_pFA9_'=KF;m0Yc<SNX$YHj19K\"thsC1tP"V1gG?Z58;j+Z%sTiJE\s?B7*g?UD;1\
%OHs\\L8LiX?H`<'la>OF"gq`/la7LDoG;<8(Mi[C]VG<b>$S/V?`_X^XO3[/2>W5*]o,UuMbUmC9tg//WE3mEU0k8`85QtO*5o;>
%i9h_./,<*EZX3)omDShrrC*_he3MR_L7Lr2,rV?efm@:<2>n=ME:HDHIMAqk<)rGQIr-$sQ)XT80YH</G@Q9`GO#XOHf90%r9f9r
%^$rWMIeU_J?MN=a^O+p`0Dt6lh`]BU^/f^ST/trkB7*EX07me9J'ha@X\@&N2729-YsO(k*\6,'mr4?/'otlJ$;fU/>8CFi#<)<K
%]:8&d&1^V=kn[X",fKuFFF.pUd<*L'82g/CisF1$W3,W@nhd.:]+.n#rfq]uUKg.oc(Lo>(+lJ-E=XmJL%^<p;UD'_RV7>JLQ;M>
%9YNVAJM]WnihBeH]Q<YaPPt)d&:1]30r/B:C^Hi\\$V#uoK%9V\;T4=V1g'@)P%:*k(0:YW06=<5&p]L\(g_V80X,nk=Sh:17hG]
%^Hlm;M]V\:5+NJ)lMJ4'2gM_TQ6D1d*U,fF0=3.Z:%G.WSlAqj]Z)<S82WDdrMp@7Th4]GrOY?hOe>-4bA"7<acV`:V(@=V":PYi
%ML\33,K^ArP6HaT)#PWrDSi8'DL*)@GkG5!RrU[[bbj-8NFZ7rb.$Juq6jP#Dp,O7__Gpfp)B'Lq$:kTepn`L64Pps"cUQ@2Xq,0
%>6]MtE"St*SXM3Zlb=."J/4Eo<l,sc89gP!KZ1DbVZ@(FLlk@JO3Z==9c/.k@K3dQP'eHJ^C/&JbEXl$Sa>"*Y$L>JamP^=n.HNJ
%Pll=8^O>-Gi^U3*+qQn,-WrhLUQH_D4,Y:DFH-Wu+/2W^ciIl2nMm4;nNkZ?W6o9u+^e5%RA@1-!>K+JT5[r,_]>@u/.!;-Z%P(d
%,7Q@Y-*e]U9:tetk;^as)F(IBi0sqhOU^[(L-Rf,6,P#Ei"X7f26^R/fHC]5EP5(-M^$2uef(l2*loO5UcVFcO'5OH.-"3^#1<l_
%'N0it6cMO8&$F9B6S$ppp5gKbVPK\KJebXQ^e'u_\XZ*B<oGe`q#uOmQobTKOW?dI&rpr;P9?#3!_DAf#3>c/G\<''%<1G4`jp2%
%7i#cp<(tVO]8@i8i\;&**9j)8UMp&Vn2BJ?!P/\6-0nej@".lHiO7Bqdf=6S-5u/edEp7bOKACfBS8GfVM"Rt\5KbN>-sM.Ak/[>
%d#;iW"I[X5>lMXl<7>lU,NB]"=tgBS+DadG6[iskag,*f<b^ZrY$dbA>oR<`<GkMgp`a"7/K,[4Er=)i:!HN:9)QA_&iL$6TLk/A
%AfnbRnJdm`I+E!$1D+jn3Q=c1/`JUL1s.Gp(,n6JV#N!.XPnaa`i^EaUtE:'@df0$j[s_5`i!7SSd*W)>?CNcj@I%k2n5#UC2onY
%2@dh&A?g3)b[`Ama3XHfqlnLS=;.Iq,iV7?I6r$=?Yhm3?boF2b'^Z7Ks<DAHl?:S?b2J\^:eX:N]IaOo"M\WDdBrh:>09Ggc?3B
%o"@J>&R#U=\78Y]?-1@F&i\gu,ep-b*&:`\UekKu8I;mL9X_"nP;ZO+%tKd<jKPKA8BDU':A2c!f7n!9d9J[m26]C,B3X;@1L(s-
%44UdpA4M>+G'9fXj?mduUV]tc.dj47k7Q'.T3A0Cm,GjNorqKc`dl"Jam[(Rr:bAIqdm)Pe*ir1l.2;_W;U5CV:EH2^R+Tt>[3<#
%h0/1]f8Vld$]gsRf5=+WALclNHF4bPW.\2r][>r?(\+9t".tSY(RLT_,XK2uCK(<E^\R?s_W(a^TlHC#nNEoHGa22/k&mHMm>NIK
%Lb;h5(fR=(UFALnD&e&T'h(79M*5Xp:la)Jd+53WJAae'Jk`d3)2K@p@/)J2+H.L<)2*L;#6MuI*'g%7[BoIB%S0"(f`pW3>.&^K
%!ubM6;8*XgRY]H?,GNStgoY[nmr9D*-l8K+r-!GSPK@4?j%ceLLKm9aW<nZ\@SR-j,jN<V49!fh)jNMuZ*4)4J86tP\i"eIn0@uq
%<:6tkcUEVWdaKJ[?6'Rs:Blm1RL!!CpofW[*B39*-;o4N#qfr1j)I<$ntFVO,o\Y[&XJk$I2t.km7P%:*`AI4U0I[m&"\mcP^mGU
%ic`gg[W?t^(7d4qPa[r@AqutER=efEcmZt8R66#?6$uj<?$LP!m+E6acYh^p/NgY;"m<YZg#WbX$dW_ESm@?nh86Fd4icut*<@\?
%?T)\jKkiV?6>ti:/R5oACH'kJ*Bn=>am77>kL(5GfkJk6J&u-Lcq+CR'cgA0rAICF?\=96bq`!AA>sOqADSmQ[!>)uQhg%C0^$iD
%Do\u+PUD&&<NENFm<]mQ,:tr>I8Go!CQ6_n1Lnb?ii!ggngF^Am*q!3$'IlO1=>\d!b(Z4A]mlqc-?>o2:m4UV`@\8Ag7gn<@Y]*
%?9QH+j"lCe2E_4d<Ds7)$(jfjhQ-,b^/s8[@5>Lf1QTZj"fDN:VcBq^RD;EoYO"MT%Zo,5;i:tC@'()IKp=#"^rf@ZPc4RWoHOT#
%mC:W)g,T6nXQ6`RC<)[cOW$,n]@HKjD=o?i0N"TgR7jp3TXSk&#qf51pj4U0n`5Q[ai11Dr-S+fH#sL#s-*:M94/fn[e[`7h-S3q
%MI3GT]hYI@2>kiuc*e%jEhI726[q*&Ct@;=:Ib8Z!`2==qK@4\jO>j*ZhXo<cC,Hg&LY02_tY$HjSKo_c\kY>AmeH5k^)BA6-fXc
%525Z_lK3Bs#%MO%aI1Y:=-L<RY8a6[Xa>L7GOnofF/pO,aFaGnP+9Q3&QbLWX"`KhkB&(hT>cW1C#6[;UKH;=?JInSgdD(spQ0H4
%EEh3c(5Brj*qJ;3o&:_]iZ9jh:qV^f.B>J:l.k&Q`k05fNY(O9^@C3sn`%:Q.#GCBDnNSu49P>o(AEfd_#2gB^2]/=<jd*sg?Z\R
%AcoD1,7fbCe<l^#Q:&O^g8EjB*e<L<a25q6T,(Zrid/<6cXbu!\.9;]/6A;5>bUcg$<)#(nk-R-o9Lggj0EUS2%jQjCS[286aVZ2
%/L"^]'d:aHiNGP7bZohCAiNK(m#fi)FrWGA6-I6J^iHihk3D\EZQ=<lgMqADfo?sqn*M^dB8cQ<,(>hF4YPf-ZXYOh3UR*iFndV&
%oLp_r2*L9dJ1:>%mBW)Ekb+a4Pf#=DN<0^Hq9Eo)oHsl1NlEudg?+Rbea",R!A!7MLK(EJn=e<g.q%bQs4Hal.4kYC_,D?E.g0;d
%X%^ijb7A"Vh\N^n<rt(XZ3\)o!\]JIb9HHHh[$ma0FJ9$n0e^a?P\3Z7Gq_hGZb/U(4hhPI,JR^k0`j)k;+mpU]^&Sb]O'Q\o#X(
%;G:Q^,:qI7`/6c#17G(NRdU>/nf0D=lN^JO3UC2*&$3i.%uUN?An`FBltaT+G'<bj4ftGblg@3LOn&.!Eh$RW1@*)&ELP?C3DR]@
%RX#()?g]Ogj0[u_EJi6<3lU=jo=?otBlSaR[)hl(G1MdinKWuDG,u:IF_"Zpd4j2r89i.:Ts8Muo>ott,2&aXYFiJZ0GQDqX4Q9D
%Yk`g:p#j/[fB[^d\\M?1%p&HCo6]]?ong+/NkLgQU8DX>cMb!a3M\ntO,g58;+]l#+cim)SYEN29f=:S:JX&l(V-4[=*(N[QlFGl
%J@e"^CNga\ZRrU\lcj%,XZ0ZJWCN53eH3p/[\?BrqdW&Dk-AoSjP,s=b"[f^E\=Gc)a;CNcb-JZLkI^R>kBi#H4Fg?jJB%_=/OSe
%rRnTe%Q`cM[J<V_HHEU2^M[G!VVfVb56'e.f/Ca]h1*-udVjk_mc$dPhklTL9cI3dE3ke#6OCukAuR4ATB/k::G]=]l8fooZ`nZ9
%e)%V^QGGFAD^Pcgc1Q'<=#a">^NePZ_C1i`UM+'LrUtdnG*%b_ZATaaM[9<HN1`VDqe)g=Z%IE^2T[OoOO(on\]#'Lg!u#4I[AhV
%3R3q2>jNT*%HY+P5s?71ENt.DTc7WgNrHArE?6@G5IZG*58-e5@^!5(I+DolcNqMcR?'QnMRfO=lh*O44SSOf^!#5(2u9-34En@*
%["(4([82,A\<5qd(isbb\Z"T!-$KuEiijGQlN-L#[d3UOT,)7&k!?K-Xc0iVR+ZA1jUQ)!>f<!Y4Y>SegCZ,-rFN=$-^)L79nY'3
%I[[9I,+m,g,Zb?\:W%W-3KrWBDB<t@'u;m$WbWViGK-^^Rn"WO)*r=(cK1HA.7)^6G/aP@gLB/g+7aDW%,!k[,Arr42"tWn/740"
%16uu`i%ojT`h//E9a.'Cs.fOse)^Kg5%NYcVIpD,Q!D0!S9YUUFpm[+<WZ/=H99_S(sMe"Jmt<'8FpLi?]F>_?7O%SjOd0dDd5-n
%#5*,e5Y,[/:ZHV#C]C)9c90qted=G*c#f_EHMf+.r%V,r>-gqU\6^>]Yh,i?c_VI-g'+=W+LCkeZh=,>1Nakbk)%7YW@eZ((C.DP
%+1@q6k;:Ku(hSllYIrh%k+`u!ZdWOCm(AX8%n:]j[A4V4O(#@^9A[=-IGs/_/A3[%=T4^7Q@EQNMh`\)kJNK_Rm/aOi6Om0#:JUe
%hllq9GEq(`I(.(Hhqp=JIjdWHS\9#gDNQIcqYo(^qT^X%?$EQGM]YaLc-&4ASr-6<ZIh2$ZC-ItS(!"a*Ok<2Se]IH[9DnI^?=I\
%[-7.6&_6Z`f#Vum-"%jU\j;oLQZCbnJX/f-ajVS_In=$AT"Ah7BgHHndSo_r^g'f=S`XH?RZ0G2<N5UCHhAd_-mhl;>%#lrNB#(#
%KPDg5=*C$X4Emdg["+&!s$T(lO<%H1h5Hmnp15PJ-epAE,:.Na[iQ8TlZ9)l\IFTa'*a:3[EDg&o&g'/o=e)f\fK.bbGq0,5f0/+
%HSRfE)&Appaco+X71C?KNc1Bj(2a#FDJAI2l\:7WCtDej94q%1a1%`^kL__6h&XlBK+2MCA@O-C`E_of+6L*R;1e,ZF#d($i40$;
%NTN63-!OfjAh!(9RV=+]2sPq-rt(+M5X@K3ep;W$s.\GYN8a)G\88Q2-FP_n#6%B(h)]K*RqFbLRk5oCDjPk&6Ls5'_*[]E,i:rZ
%c&:WbM.^R>d?H4U4Hi?)gHK50QagEBa*H5K>sSlok<'/I\MG+^4Ng[#\0N@B&:'9_RGu=6Wf[OBo/PV0UQU58%F.2GC9FIqnT&\c
%/1cgRRKp/BhZGq&D8X?JmukEqVbZ?)@Fbs[\gGb,:![OgI_7kbLJ29Od_(b7@F1S5O*ja5B'#mYF4^)Ih:G%?i)=#!O0d+tFGn1B
%c\]O?%PbUCj61tQORg.8qXnSe0P3I1@HN.cIsb^o2TB(0[WlQ[@Su3i.FOVC$*N*p&qAENRAN*8mfOjO&*/s_=?M]:O3b^+4HT0G
%4H/mCh,[lFOn6>g*9Y]U^.P3qH6,^9CGW8@''C>V`F;!Wig?YpYBp&?$_$3TC#mpt\QGjdF]3Ce<+@9JqdQPE@]@?h1#Nko"hW(J
%fq3PSh>FbdZSjUh0Q8m6PHs].(;AKRqeEnA<6$GimkF4Ss6>VL5g9)e'7I.]A0a#'^%iqo:=Vd$A*UeR,,-fUVQb+N+rY`7=@=uX
%f&rS_SmOlB((lO/S!c]5@hI*j6o8L1U-Zg8icuImqebV4Pf'fZM*n`M]?aZMcMGc\O*+]_@lBS;($WdCc@7(eOi,S7]>nB'HgR#4
%ZnYQ0.Z5Zac/k.o\s&^M+G%RJ9nY$2I$utcijfBu2UXE@:#qL^1EYg`4BZ+Omk+INTD/)#(^US"D`0j_pj9=Pc@<ahbHY#jiU9Lq
%hod`G$[6O_gq>rL+QS6o[rD*X%c>.^><%#^gYjsAJbnTkiO<7bjidH![5^<6f/h@uGOh''_trJ1G'La4nF@2s'Q\)5R'UGm>aJI6
%J,2_udlHUT)Yr99M!R'mkjYK$d47EVBHbBm9ih_]23!=\f1:/JM$kkffDgi&Eujt9>Q^C:P/D(,+9%kKGuK3M_<:U@/%MNceeo^Q
%Jq:JE(O2+`@[n6H=7Y"YM`ZLi[6&pqb?4A1GinpIAr_j6S\3:eRe"A#nds@<hiGGdf"aieZC2`WR0T+I^JhS5itbSX4DH_4qE\AI
%/,A0VK2ncPT9nRri76d*X>4@('@](FH;o_Sj$n5?C<`Tt;$nK^#(ES?T9JH&Ic`BH7)>9,+u:n'F+g7L7]]rdcs2UM+7io<kEqZ_
%Z)C=j"PTDdZSUA,/^M=!kOH?k>VnA1+tQ6WC2QFA*al/J!s<R_gM+9FR:k=s'q<cZk*X;/1QNSl:(N)&9ZH=-8>9k,euaAHUK>p=
%dt0')Ya.QgS\HEm-Gu0%5;i!NAOO^c)"S^ka@]/7N(1.9L\rWehIUWLl@[:`8VO&G<k[(?UDsO.<MFeNVjZ^1.]MX=J5UELgdumZ
%bG=(XV?KRks!RZ*!us!3\ktPeBu*D:$`)6p*<.Ys0:g\ZomD\WlVmL.U.4N*(X#&>;^8dV#I5shMpkA'JKn+(:+K34!&H:eM`G+#
%P%ttJSMAV6@H4n&MGguk92QI[O=f%XbXgeW%qj.FlC%7O-ojuE3E_9'Ml:6;/]tK*#:e>>/P7'l(2Hb_CJk'a[*?!`Mk^1UetV4<
%+u:n'(Mcl[eY6BO7@>%hG$W^ojJ&oI(Lbp0/P7'lk(W,Nk?XO%>Z6i%0!E&re""VWIW/>j'jcfdR(j:nk%>n;kU<;gJnoM/+eAA*
%S*Y*<3pY,k;\/>c7u`f^"un8Ks89]g.8C&<\34"0c2$V+=$1Y<+m=ALd,fN%qK3Tr3DcpkF:1CD&9K&YmW]\NEa3K]'7iZ!->":5
%Cc;![PqFo#]Zftq>\,Hn\ae:p(0u"6[Cpks5'Q7EBp;WJk"/hIgV(mX@4,eXB-:)rgJo*NUl,D"[1q0W[55f&]]`e1=apjP]up/4
%bE)*.ML7Yh7!:P>!43?u6O6/@&?k&`(!S/*MF)5T)S=JhqhOXGCL4W"d/?h&42;;0NTNG7q@?_<a_N^P"k>GLq#PBM+HAI\?+0$<
%;Fi8'_FN!/D,#Z1(Nn!M<Lo,[W#MaO>O]P;/]5TONab))??dDt9pOU(HM[gEgOrp@+n$KQ]s(H1n4>'.Dns>?<qL5D3o>hq#c,gH
%-P%.PoK-d.1`4Ck*!:Y'L>o-Ar(pWseP,h5W%O*8dp5\e*sN3[rUV8c-R(X_onM^lO2mhSq2T'&Q:',;3f#<*<ZT/u+,[(5pd<MP
%PC=A.LP7DY:QOCd)4i:1\un2Y2J3c"+$SDYrR!O*_FNA/iJ3!a^`.`,E5>B/[g@!J[]N=iKD0d,-Ea*m2F:pnL4p%Nl&MS_?eW),
%k]f\LD9^!=<DuW8V&uSn(>a@=JmKH,4c)]@X-/"'/8=jQHJIo-%(NtaKZ5oTRma#_];eNNfF$]U%hLLNC%JSRH8UsreBf%U%D\jC
%Z>Y:s_Z\33XSn4)8`!&urn=C]_tqeO>7nh_->f8U<L!Kja^D5d2J_..oTABHWUplO"lA_+^%E)h*l"rBV[-)FH8V8%?0cT^Jo1hV
%Si-/(MAAl7\p3`)nt]F/VZ&g5`9PMdeH6%.BNBGhXsAh7JD<6,O$s8Y(&j[Wfc`_gkD*:`D&Pe#`&Rb2C?@JJ1<PEeF$/"_\T>E*
%\'[58*jn)1':f^`N#*geMofWnfmi0+<@9YM9[)SpkYN$kH4Y;lm/*Ukai,@H"L,F[cU,0gZZ6XR%&D6@7+'m`'YfZaZ$ti+j*YoR
%Mb\:Dh8`sbRGFi<rmc_>b4kgC!R&amOX$B]?DlPjS,r0S7nIg!';7FD3YV]kIS0RRi1#A@>NGdea)epr\T@Vn%++_g8FfNh<k1D'
%I+^1_^$'3g;g>qs8+eTe:CPe%0Rh6%gg8PHb:]fPC/4tKi_iK/N#;Z?<+*RZ8"2VLq&Z.t6]iF_2LPi?f2dg,iCnt[f+Z\J,j@,8
%V@Oci+MZSL#M2PR$hhS`I+mCnf5dBp6A$/W1c)!4a\6l)NZOuV)n#pK]U9VWA_`9F@!)@%_776BQs3Q33QX^2;JF9O"O$Z733FGW
%^6'>cQ/oNci>-T`h,^^`fT/)L\6\tR/J0Z&a.6hUQ`Lr-r0j$G4)sG2;O+'h+*C:h\,6[kI?#cT2@KG7_U\dE68nk`JgUHq,b`$.
%:t7lF<!)Bhf.)Gr@&URI[gRQM\.a&oP&IKaHmXSJgl<:c^$%""lnr"\QJf`23M]j\mT*;hp</IkX!o3_j[JiGVa'W*l<FV*b(ir1
%f%]bS:hI+8/#Mq'D%sWh\!\@";*LGBV3&6AW80UN7dXraJf>d=>2^`tm:6KU!^S5gM[$]d9pk[]Fu'/J@_6:?G_"fY$h=@bC$OjE
%f$m#J#r,+).KMAGOD2%i<34i7)P'pY`cD=aN`rj;8J+"gIi7_f(p*i78)5#:)H6->Yd@VJ74k1]:5r!qPF*lL,*?mBHX&Ohs6UTE
%eQOmmWRYci@FM3Amc_c#"]:V\`qQEQ+;'I'g\#ma,c^=RX^8])p6h0Xqe15q66^dPYh>0m%TCqMlk_9;0)s[@[_(asGo^;7c;sjQ
%#cMq*T\!oZ[%5(]Gn!TZq`Si+0X<5pE0=Yr`U-DNY2G_"lS*V).+HE>G2k\r$+NZ;6^hdC5>]),l:$Nl_KPi?Xq)DS;E.C(%Iak!
%moJXogWbXEPqQid;(9ZB%PPJSYZJ"9oXoa[!Tr>*&8E-7IM[fJ'\`EmLP*,9,3hKj!*e78#Wd'Q\<2o<h/68f3f;-TBt;/*c6IKq
%PVdcnGPXiXJ]NusMAk;S!>$5BdSU9_mJ$Z,.GM>^X:CV2ICQ9+CFrpg%$USsm!]-u&T-5N)eZ1X8VA^GVbOZ)i.m-6>8Z*h9/'gR
%ct2K5!t$O&Fu?E4R@;"QQd'FA\gq1EL2hHC\nhMe1bqUPo%lZ@)^c_"!nsYJ&rbGa]\5D!s$C^YeX2ZjYEnQM.tEqrEbA?%7pf>!
%^oAq=)pK)kKj',k]\09,'0GHr:0apo/u=U*bQSpK3"mH.Xf-6%9KaZM</@RfV.,kKIY*YQLe<nn6qa%<pICApRl%#"+2;7&l&R)b
%<dL**L4bHG;>Nd*MB/Pq7.-JcN9`H])!lJaAsAFqPPS;V!M57biBU/0Dq=ot$(o/9Jl<bhIbNhcc'.-YXa:qZ8B=\R_A.+ef%K.R
%nH?g@oCTE2>XDk6N%BGr[4aQCjjbNlaYr&B`5#J#N&reQ%oiG8<GW2)IouSEYgR@'*-IZmP=<9k_IpD`"g7WAhEbL]N=;#3!E)h#
%,76>5Q0+kTe_^'6W;`MBo4Z$7G.:QE%iRm]ete<f6QE]H[<.:so;ES:j*nu%?RkK<nnUMBisXF<'ZABYUd6HFDO568N[rV8c_BKn
%kV5e;&k9kS(_f*3+^^:Em'P.Dr18#Kf_#gf8f$?`AubN)qm;d6YT01hQK!8/+CNH#VA<!g2S1_u9G0eb!-5GP#:hkVmSM?sUDRNW
%("`.`aML"90\Cu,'7O.D@qicnC`V(\p'&2=cV&ibQG*);)!c;0`G0c=p$,g\.'^"WLUW2\Gr\GYN%*M]ib[*`q+&i4:2H3Oa@o5:
%V>=5^QQ&Hb:l+kh90%`1FL@f`"_BIjk2GA&V.u?)Pf[ub\n5qmRrV2H6B`jtNbsmnQ:Z3]<31I:CG#W&,15(H"[fjgQZNMu'I6Sa
%^^:@D@tJ;J1fdFh=YYmJ`/8'G.\"7o<cXn6P&HLcYpM]@FAf$)El1id=uXA6-Tik@Osm:qMPQ1[K[!NW:@5,+a#JgK%a.Voe&ggB
%VmUiRJl.<VC?#;n[u6E:*E=A)5#1B?70N*:HYDqm[Ff;j3tu8._k@MIo*V!oJP'uOUZCo<BG$,mJn]AaD#\E)4jY%lMLl&_i<BB"
%USIUAj,'&1p3hmM@SKi@M8#P5jnB(#Ft0V?ji>;Z!I!d+CLV)8>!:ohN,S*29P^F`is*Lq`[_$=a<^WcJu4\O>iIcS5p6/EXZO'R
%Z33RhU1TFm!C3c["4ej*L,Xu5)"84d&O(i[4k?@(1+eUN[Dlp%gq71b)G+(kmMVcm-W.L>^Y/&-Z*p_#:>_:s/9]`_<5r'=X:TS[
%4.U@BF]fE0WQO=`MfAlkQ>C`j'?b&WUQRTAH<iW](67C<6E(iF_(kr!FE"V!p[N^k]/If>_nKXf4\X6g+Z-m\!:TEc#T$@5dEGH=
%@j9UDA174Dfl5h`&nf7`Os`j;U_)]sct,m5B2V!'(qrpS<Nh=M%@scN;@VE!(,aCWb6':Eg6>6kd[=ca8)6b53Z#1>BYh^-(b1]B
%Ra>:Y*3=<2DUR+H@IpeX4P9]H:rij4`N3`F)GJqer>XA_iq@(K3.D0mW-*1l<-\Jd,nnVj]=ubl%[W5<nJSbq&=2T7#L;f6kX%Qs
%qBr%=GkA%%Ve8s:Ci`h^,Me(GeqaIc61d=s!Md@5jQ?,t`tFH&BZu5uF4N8EcGR=<6qu$EFW#U>,GBY9_CiGG#K1H!OeT59@ab4N
%T8B&f)Ai'A(FZAOYe6@bNQ+Bf2\u%j?#j/H036kc)M>M0qJZ#a"GkJ%2)/"tTX:u_QiW/S8fN6I(sdEpIX(YKkioe2kj>->rU0*Z
%^Xc`+4C:*agtW<V5$GO!W^XnPD<pkQZ?9qomIg=^*TQt<p;_MAC[GHI%a3RdF%8*H>Dgi8^'852PhTuST8O62Sigb1eiI$hA*@NA
%Fo,cTPhPL#B.mS.Y<=W"K2V+$ZV"%FhE)\?CV0EQ3jaP/cAMRL]c2@tj;[QS+*j3tm1.K3p\`u+lW,YIN8$l%fD<0*kU&8h2G](9
%G2%19m5M44I.RnA`AaQ=Q-6:W>'k9%ITft?'JCO4O7)YWV=j+&F@5g1^Du_9K%!Lc[U3CB^Kikmcb$#pqn8H7aHsM)7G[sOp>l%_
%,M!D7\l8HQp:1LEmX>O%WZ*nqA`rArmpPrlK+6gW<:)t1man:jQ#aik[8]1GN`VitGP&KXrKiSZ4BsDmHQAF3hLfHZ2K,.i<[uK#
%ri/+4T5L:-Y#XS'A@H?`^T>pKDcZi5S`fa5gCHOB]^:?`h[k>8CTErf3cnl6^A5.u2(J>Q+$SL`I;E8>Hs3lDa.6/bCKEFDLDMIU
%dUXZVm(<ACg%StQ86;fA[F4(@-<]/M]!VA`p?VG/-%k14p78V>`fjUsj[ZJ1Ha86_&([jqG,b<5iKH4N%kHAUX\[I7Zc4!cl'_5&
%(/E$Xlc=D&5ZBo<0CE&fS3Yt2[h\SbXe"Bio]0n7oATR)G%9KbcdW::JSp^9^GcStkM`c:$30\ZW4^*lQQDF,Yh$1*g'1CC>NOhM
%BB;WenGMW%Ds6ELPL\sMQ_.tMP7^0/]=o`*JPuJZ15&Hf&CdPSqcG=+.*oQj#KMMc+RV?NXS:;tMK]nbI2JJ<hYL95U3j@tlf@^h
%GONi3fA:Deh[<0iC>[UVI9JX`DLCL#iA!^`H`R"WI&oMZiu;pMh(\VMFBkho[2uNC?J[[M9;`;"^u;UQ[_6$bVB%]&h_)CNh<bGO
%@;rum`NUS+buas;T\Cs1HMID4oSnFob]9Gce\gh4hVi(U2[EY1E[=D8a`uRS.@N9t%b`Mn^9$o&lCB`ubEM+?&q4*7M%6,)GnL<H
%,7bhYoUG:3rqX\\=.WYO)2rs7T6GU7-\OrYe`QS:GJ'mfh)ou8>5]'dSSf0*jiQJ.mJcM!:Y84D(pSDaDB(:bD;?k9>Pf5uLYKd%
%V,uT-G>/].#N[EJl5FWnj]qlSf)=%MH+@Fg<aP6Ap3Z2*Iie;ieDFdTs*MGlr92'>2D+>c]N'Q$]Yg<*6P)0%gq_frG;3pH<)b?V
%rm!\2jsb)'[VkF?P#$9T]Y@NT%0Q48p@-c3(YlQeJd-0o:;_*[g:ju-qhAWW;17us&bR&)rmH,NJ*g8irHdKudlT[AHQ1\kHC-P9
%.R.[^eAAi@p'5O9o_]b0qfLH!*c@Tkd<Rr9^%]BqnM\^]81_N$qa*hqk[Ef+TcUA-4ai7Zr_%3>S0*$[mo2@$Ed,4q_[gnQCOQ!b
%8[hYP?oMeNk,.^f^K>7$_C+[7OsK>MmluV=["*%V7(91doZBg&^E'/>Vsc)JoMX:)K)rss!sP2J%p(\NV]``)[nL/reN\9`?T(RT
%Wp>(9Hh*n1KHad[J3;Jul`9K$a50,Ncq(?<@?bJfF1Kl)XP@Ac-8XqVbLKAt[;O`'d4P%Pr5HBR=h]9d<pi'UQ-FMK?21n:#62Cu
%:b0M3!P`sXll"ltKYhqNQKT-,6^?`$`S2\9FEnlj?L6(SFB.#,W!:DqI<Ua%W*`3e;>&l-b_M6m:"`]rqi(Q%h`mbrKSD@5qf5F!
%L'G^g^@dBX]%lghJ>0sK-dZDbn^a!i4GSutc`_M9T0SOjcf*o:QZb_=0bbTKnnn_pi[]]]?5\4Jo\nioOEX6LMsk#2"qXFD3-]uh
%TlIe-?q;NtP]p]_M7s+GfE8r9otMJYjoNL/K2=J`hg<JFSXag(lBQKJG5*nM%)/D)Nh>P:5Dh+$a[Iu#;)]Bf#(V&MF'I-^\m]j&
%iM<-a]M^Zje9Cd?,>6T^8qkb++1]2dX8P_7)EtQ[N=-@5j2>[FX>j<q0.#fr)H!&LR!(8VklXmWpm7Fa0g&;lX<u3\QA".fjH0k>
%M'HBo$#%8%Ocp[+&EX8Bm-IC;_T*p#E*=JT!Yf(i+D<4o:.2nur'6B"0sIgcSEQS21Q8=HHBe7M'VmEf5#5r"$pWW^]MJ*K@<ec*
%PQp#P7=hfbM1Q9B.G`di*Fs+KMT@RTKb8Emc;Oqg+b9E&;j%BB'ES?$-uD3fB7r;($eprNT2%M8![q\FAkgb[hVjs+#':N]h2;f[
%1HEurNTPNrd-#&riKp*Z/)e_X`H*=h=`K*\Z@!V8X5IISkgo(+;XO(\-M`%h$\$HgDqtL_n,=gmLnG]!'-1ua*f_`H)@U.t\3hWJ
%;,?'SS*^GfqA_?qkonbpkcLNDq?YlopJ3PFKQ:kqc+PDfW7JFBO`'RP`a4).*I?l%j4D,*V8b**leOiOF#Ef-[9pU4&m0LdD#YMl
%5.kH=4B1g)d@D=gB_Wrf62[CgSUkoJ%$0l74=:u]F#s6]m;:YYLsQR<2Z+6NYWmMYC\<LC%=LIIe(FD_8UD0[TBrqW1@hVZiBoOg
%C#fqHgpL!dHjlahq@U5&RhoL9"h40?E]$:&hGrq6>Oa$r#H\5f1]PZ\e=uhgW"P,RjbHXS+,bt+=<-c:VMO2%)smuACUX3<;nNj8
%^?Q\#Y3gW;0j4KV@SlCEh]Kjb[tL-BF-H97O1snL/7.5Ei9"fm5D\>+#oZYUS1WWJc3WNsriPF%*PK,qD"R5O!9QKB4#dD(U2HN$
%_c$0u*>/;/8E/GJoR`Ht*,TBIo6ieIK[liqb:+t6]/Hr&,YdO7?an<EUg?b6QWVqjQC#,A+gh]4GOr1@ldW#oFSWhGG5p.5$S:k9
%pZa1Lb#PA1):V:N6Mn(b?k9Fj/(MhSU27!5Rj>rKp^=]r=mXLA>MXW"pNl/oo:$$mXJ!&.lQ*'.^B15pD/3pjDn:m)*o2;CiTX69
%Mu=HIG>HnGK]\hOZ2I";ZrD&N>hj;#h*-=*XR$oiVhS6;kGqt:4Y%tZDJ=aD4*pA`Ge5R-Kl?U27=Fg>P;)I'+pcR,T07C@CH8qE
%Lsa%W`L=ib$AT.$Ab3muX+9g$_pss9F8P]R%G_HYI72\WKDS#'gA?e4V=Ta,=25P650grDh"!+A*o84mY]jhmkM`asTfp)W?:]13
%(;r.=^%CWqYEio^5MQA*lG![jgZMnREq/NLc%u8)m=sT_e+13!HaNmkIf7epi^mpOGF-M<\!oR,q2]an5C1tlT#N2ajg(eAEe99,
%9eeOq750R^?S!R.E<7)korr^&N/c4#ki63!0Ykfr(O'=rKi_&(#carkV6,&nP8NqRg$Q%O/"M/<!P;Pt?P4/VDDrN,Gk^G'n+t_H
%9+V8>2qPc,YJalon+Ag+Uij[$'L3(^^`-qTK%&^RPG.X5B"OgSHrtkb;Ln)7o#bQd;A=,;QO<A-q!c8OO+qJZBJ2R+o+"F*#=3@E
%]"GKBntMGMYa"ud3;Dp"rO8BsWVV0V>'$V)\W?%edaiXOPJR[=NC+K9L`.YEU%+"NB^p+l'*Cr)QXFU0\Q\iMi>Z04=M)C=jl%`2
%4%'_>-3>:+UXIh@\Ek7.QMu%;<a5%9-]aNKpip.MH$Qi%/"[g<rK]<Z8AT[m%e&7<#`io[h%,S@]Inrn:XZKUK''s3]5n#%kl-S#
%YSYYsg%=V(X+uk[_j$AXA8/0Zm.S(n%t[`0GpRA$ot$kY2d_=6hsGR&W)B\%/[53Cl.4$m:q^rmV-O1V91tp;mN)Bj5;=o0m[ZR+
%O$A++%E-[pR)ATd^n0*&CYsLSNsc'KUu*XTh^ht0F-A'LCus1$g)=1+_ts(O<?!>a5Ia(%EretFpL3Z'\ao[$)/O0F4E1&_Hk"[g
%S(h;L-l4doZrF((IG<cZ\5J&IpoR'b"G/R::^W^UH@3I#k4H'B1Yn3G8)Dt;ohY;[a.E+ddmho9jg4F*r2BNRe6[L*<fcZ>ehNdf
%(M-dSg"C-@T3K;-46muL]uKp7-lYtBXYI[C<nH-uO'WiO3S<lq&(eP;AiUscA$BaX+*dM"e^E0odC1$9@isr]llCDs!PZt*Mf6=T
%hg4`K?9Iuu4p`_[M-cc:[<17X()EbprVJ<:.aL%!9$7j)FmEr_7sqaW2/g8&?eoF"bDf#IM2h1-#P[HX`S-MgXd@o1a'2?^-hkiI
%7G]-nHp57$62g!n_?ghNi`91P5+TO1no5N5m:_,hF<7PAQOdF'o;nMsH]3Um7:usFEd'lgkX4hO$k;eST_mDf3`R;r[gl'oAp7%(
%F>%EMj$ulS:`0)#o"t\Jh=QkhGPG9X*W)J\hV@OB1OT(rkO*3$s!.W(,$DZZ\[57>1M`SWj/(`UF?e9,e%79ukS0KQeK_Z7Zl4GN
%4!-dJ(2C2cO?F-BL*b`*J-Oe%0_i;(3Vr;T8Y4AQ=t_kIp$j't-;0VE`Oc)f;k@i4U</OogXZ),<XC[.?G?ZsqI1=5qnm`GNE1SE
%529an=68hm;],=V(Tbok?\6P#\lSgCHh&UF4_th]7\Q;!07r6IjFDhs=P;aoo>$\0'UW64Dmrk`\M)4f9ph6d4rC!T6dKrMca$7?
%Q'k,2l^[=Ee0D28?$L\i6/_,hG(T;,l1*6=DP2fjjR.V;;-oM<7r(jaV^\0,mjU.)k0:TKWPX`CoEX^NE9Ak!6Rg[#H)_;?`dH[u
%m;#((i7Vn@m$Z0q\&5&EFZ4HF3&LS=RtoZQe:/RaRkICE'"s?![AV=k(t2M?^&:FpDjG<J,ip+uA^OWj2E&o9HL079prV^6]tIM9
%?\5QDn&RQ:oe+'c34d?t%=WZs]m"GD3Xp_Ql7:T;fU&/G%s#1sI/;]G[^'ZY\GCi(*#a<KjrGN"3D(jhD5KJLL"B\Z1O[UpBO5h3
%ACeJ4LWA4TVl9]^N]biNe.#7?a"L9f713f.Rm1;3*$/>bWf5[TKg&grT:7L]nL1"\H\4eIYR7IEXm0,@CZEuJ6f[+DXo2lB(kL5L
%_oeYe&4I+l+'"7O1tM*uEH,O@md?5:((!#q%.q8?5P/q;hHQ18G.ieb;s+Lb]^\m_PsiW9H``Yt(hFB9<:BsSRT/?ga_CVE@_(oV
%rOTHRCfFbaK?^6hO@t.a[5Wj[;<ZOT,+]&$mbNklU?g'qYV<gu85TSsB)`>[-%=<,Q+cQhe[6dNNCPZ]a-El.\Q&G7W6JY8CgLEs
%M:<+,<3);%Q'\+=HJt4:g*N-`ch6g=bc5*%M3]G11@?P,+4-!L!l<^(ATbJn:W)4=nZc&bd:gmP@'=s,GX-F]5EY4))`ice,P$e?
%pR872[.W'mf'*`A[O>Vb0PW^QY;ZIO(Y.ftRc_4ojOhdO09Dk+#&KV*?@268rsY.`jR;.63ZAaX`%uB">*&/RgDf]HD.U5-jh[1Z
%QM!sp6Rl_3qt=DRW0F$7i'HaMAS(%urW1[CDW9I[6']M>&l0C5-C-a[]seNeghNT'#7U9.q-nbN3jmDf[A"nX+FA;S55!&u$hU!6
%'V$&5/qAnmCJsY_("p9U0q7a>AV2I4*rO9QVl-$Q2jq9&c2"9o3A*D(LG%=OcqEhFq%pl\YN>MDPP9K"@XChH'#"75D-A6;ct(l7
%mr%GFHuOR`PH=W[X7=?g<=+($DrZ9(O_6>u&!%fK-"0P8o35&MXbYb^]nsA-mFOT^,*5Fl3`>qQZ?j%[hDouNm5MMh@$B]$RkTbK
%=e5$gl>SFa/KpsE9,l7llh+TW0lZ+;8(m+,"`@Cd$\Q+<K@>1nn"QmG#OQ4oCQ6cCS`%uKU>K&)fj4XC-,Sem&3A.o;]L*cj4;el
%s2qrjq*q8jg%JjT3[BXnZ`cL%=0D2p"rkJKp7TKI;^R&s+)c]Ooc992]3>f+E9U1.aQQs>YJ[00j-<QXIEu\TVb8eUM2&\!cWfKb
%32)0'5QaPkd)O2]lIKhhaR.C0IP]oMoa:'3SabM4SaaV0Zb''m"oNCg4d?W'7t&m7YGO&fk9eY>YbA8d4OQso:X#R>bhBL/%Em&r
%M_mWhjA@Qi$'u-?0%ib&_fs$2TFI4EaeJr-k0_"Fl_sS`p%3Em6'I[s[omJh3m`DX(r!CY.E\mKZ"79k^4"+>L9756^D]Rcg<T-`
%S+i2sj5liP4!24G<#s6C9qu2ThhIt'%j&QC?7c9O?[>!2B+OI0VZ$T[guF1OSVJg7hYpSacW4uOg[k;\rnk&(c!Y^+@R*HVA6'cF
%0*h.5k?^;d%,96INa4q3Bsf1&?c=U6Hmr[5Xj(;oLJ1mC=kK\)HaGQBfe0Mr8:P)Ygp!WA\B&\D#`n4D"[?;c5&B&X.,07N`e\dq
%/:6$0>-5:q^/Y8.MTs9'QJIH2,R5+HJF'LG]A15nMW;`BUHRg1NG?tg56cVc*paTUChp'&m\UA6<PIo1."IEc::+S)qod4M7V5]J
%82m0g0"$0)0f33oRSt%4@1Aqr;_/!a:SS34!c+;%[o6bB%DJe[Ip9!0QEffY+./5>FgCg;9kaAqFBjJsl@_HjeCT,/450UL(fE_K
%P9+"s4MF;h^28p@O[b9\C$X2X(b/%9fO\q-/958<U9MScL*H>fMuA<d(cD"=Q=MAh\C/gY@I7VQ=A5[GUe"L-M+.n;_59m1Nsb-_
%DalU3J4]24"WLN/6Fr9\-PrV1&Ni+He6IX3oKm_VAC>?N$"BotVA*_Y:h$13`,(gN=-0;=i"=BO^F__^r=^[0P<>a"alB=+SsY1)
%mGZhJnS'c+fS6*miK>Ur3'q-`)&1#[9"WZCFEU&A%..]:JrZ'^qsg(*$HEkjUJCP35'^(bs2dE__m0*37+&^3/D`q,D2jaJ9[;80
%mNtMoja3@?-GW!R!7.L?`K%s<`T'b.&5DOK)pQNN]6P8!c$pYuT]L_\CPM7$]%V-j,P;U0C_+j)C394&IOWe,Hd-jgg!lr$(QJ].
%]cI&2`!n<_cAW>HO$.h]*K-hJhFT*_L<W23+#ilSQm<YPMUS\2A)**Sa[]VG4-i1`\1jr,R:tW#7Q+'bd`);DN(bLY7\$f)`PWD1
%O*1q[%R%9E1#ZfPG6h[`KB/Y:q]`KmK/6V%ce75hToH68q*;<,beP*(UJV'3L+Y8e0OC'*i1lp]:b(6WD$9/8S!ORHFhg(QIa:AY
%6ABcNG4R!EDFZqN`$.-\;5,m)&h/h_EL&&W1ggB.,WXqRS5Q[jV2ad[<LBT9BeA$%GI?[t<T&,AaauUqFd$Nabe\<5jid-"qSU>n
%,t^<\`/l!a-(gW8Ng*Ri:2q;TnC^A_BR(Ri#=jiG,c'Y)e"e=a),F!E&/SEC.ETII:WiQNBD[_rVpLA6&J?+CK*r)TY\"1@<tKp\
%Xd>63Z5LKH'@$XBGI3Fjm--f]<QSc.YZf,";)^[$mp2MAU0;ts2+nLom_hMILOBCfN&H/'V]8=L_59:mT`F,F;A*RZg^u_lF08TJ
%+2h8mi$\SDUS&NAs#=mAml$BYAWqQJ_b8E&hYJ:nFU'#3Kj/#)8<<HgIDR$BVt0#oiMZ&Y<6Zl=j3J&Zk&-gL6dJ:IOXiklF$[KH
%fPXO8$fDorCkUCZ6"-TD;"5APZIk[f$oMB>#?p-VO7@4-oYA)Js4mCMLSOHEl-o<_Y,^HS]6p\KeY]7M.7FUdb@t;U8V)Vs(G,e%
%]aU(R^^%b;KhKM<NM:-!Zg4!<%kCU!3SVo^U(2TMSdLh?Cn>2Q%F`i7'rX;A]AAmV(1"na$?Aq>;q+du/BEGVH'Kod+raa/SYBk6
%WgmoUC=+b8<UM<"Q]?2jG!2=c5V)Ml?tBUMU".VSeC'to'\-5bJ@N3gj/ajtV[E%)CZ"0)o;ED-XLs?-eU$!lF\j;p3;C;<7*oT#
%?!/U6gE8]Rl/C5E/#lF\h?iGQrf3h4qfq<:>X/b,ZD.!g`-nIF"pL1sJ54kL8!JB5B+K@LLP,>\)P=D0:G"TDmg:1pOkOEpe4,JX
%834NIb/b,rFBl^53jpbX>VTC_Dae*P[>V3MN.cdT^Ct+'fkb"bp!G!n5dU"EIGSC>d>^U)O&uN`(!jSWr_*jVcW!ek(;JSRB3kPj
%^@\%K9YL9&[8`XhEVNkiN\3C</nYn(BFA)&Tl?"=s%lMoaAK2WMhD^,cdU95fLsn`;,e:N/o5%+!>6$(m4m9TkT=)?fhN+^V)g55
%DT"0m\hbsC$ugRg\@5%s5'Y<p2@R'nW3.oV=dgoQb!^BO%tFZ5Y3jq`[UH1)br%>LV^YFMo1XNW.aPF0;F?Q3i:EdJY-.#^`D!D4
%(p6,]Tc"d1BqWUnSnXT&X0*0Hh%iAc'bD=OB0*WLo,LXZOD!7L5b'"_gA!'qQDlqalc.=o0mf2q=O#op77FP";-h>!iiK_.\ie0`
%'F'Mm\Jj(UMORR'>Z^+!\o"ZkCQ;im4OZ2+dTjhsGb2%9Atd/C]7t+pcT%0O:hF__:qdooX6?![J+IK<S&Ui^$o&3S$6pn*&.CCm
%)Oa<`"PIAg466g,Z"uFe#Y*DLS;O.)Pc)-n^a=#],q-bIe6s*nEstd/k%J3VCooo0C_g=+:9okRXVr+U9MY%G&_P4"4@@R$X(eMn
%GkD27+=%D"`B6RJ6llaMS&C(Y-f%U*W=M]cHZ1G;Sg7'2(m5>UKX0I\Y#;]>(Cbb@4#IB3"T1*lY$_a>L-(K6+r0AEfnRX;M[@:@
%X[/N`M.>5YO@EL(*ZRb?SY=4mE;JXZ"kecIpB)sXbIrOFWgdM)jkbd"h;::NU)8NrVqJ?e7a"nX`b*DH!]s"O"sujcQ5]kpA8C52
%1QW'+],rdb^"!.C-=pfo"g"ol"!Bj'H8I^QC__2'+BpJ#VS[M$[L<68Fq%q()b-Q97NrEaa6M!rPTGL`%hIT.fSUmbW2ZEj&.c3U
%FC!.QZSBe1*?kFs($$h+WIi5t-KS)ofUs)N=nO=M1JeHESulu)ja`Fn[;6m&Yo8f<E],VJBeUlsZb_rHJ9359[tP$m/CU7S7nH[N
%mcn[F-p&#3Wi!+sY,_ij`e1f-,]N[+Q3GEpeHT0N,RW3NLd2=uNl]ZYnDl:L[N&-`oJUbJ!R6Ma,]dnfLcY_)n14b(9gP?[O[lfF
%TPLQr/IJfp-BIB35uhW'd%`%#&kH@Vn0'kJ4('$TN>#9jRL"*kC924m7sg(m:U9dAD>.U'kl<9h(/q:O%a,KJaoMo$=u%Fu0jGi!
%PP(Pul,((N/d'5T@s<j.Qjf(uW[d5U;&#$%72L5%`]>g"1A$619j=8hGP&gU`95`^Smnb;SDXN7a;YjciT'hBjU=P[![V*WCdT%l
%ODPo;-.=RPRqT7mAETEEECteel2=%VSWdU4,hc[q/bdP!;\`AA6$6:$eJ?&%F\Y&fY)(4-g0)'D(^?kY<\9Yql5Iui?l0`i^cYP<
%`12GU:[tFlM?(V-:f0U=/cq,fBilns`&#^A]>I@B>g[dSZR.-I'M[kiiqDPL)GGTO<&Y!R.[Iq&/NFbHlY='9eP7Y<'.i7h5_1'e
%ea97La9K]Binu>DZ)$o@lAB7P#;/[]C2+q3d-,)=_a*I&Zak2-<4Q_G+9gBE`K1cHD+6!W;5DQX,XUL9]XH&WU8XcdDI8<YNKifl
%Ysspc)TXI!()hhi]mdbjFXs^.3/ShSf?>cq+\suO!N`'mEV8Z$l)CUV-;r"HF']L0'iUukm=B(K9UKH2=e^O7.1(R%oSI)>W]))4
%,;ji^P"40t7,fNJ@A)],ne!!?f7h$#r!%G,/pKNj9kcd(/d?tZ6;fL<*u%;3+]bu;TQD2nH>P`T!SK^Um\&;g3o(F[gG3V=AD=OK
%d"he\5cR&tCp6SRf+j9IW[Y5Z9@3r9KCVs"_/+(V#@)cB:lnL\[\bBL_>pc9N#GseIc##[U/LjprnPB=rPI<am-gI\G'*UICJrn:
%$?_d?E"k.H&7K#QN0f,&KOlp;_-BiG:^'JoVIfb%aF\\\/`q"C\Z1BHb:(4-7RZVpkG\e\GB3'2C^%1%THA!GU4[YH0FJ:@$VVnk
%;jl[J]0qM:O/L>M\_BJ[AGAN,J9aN;3+.gJ),\Tagfd)W@LT&fJj15V_;GT.b]/d2&.u@-2M5Qa`b_@P6dCC(&>rJ=&-3!>,A0$P
%I]cC3;Ta,>-8*+`6L,&$^n@o^A&3XL*K:e+!JYTgQ(Q1T`b]%.MtfDK5ZNBH>VjigS0nb:c5&cK@5ad(=,(Z".OlFCMQ.SpJLK"g
%P;$h=.`MRH/mY-!)po"=5fXs-r\=boaL[f`!sIh1TcnI5D#!*7B*4R4+S0<'%a$UucGCE_Y$%897BR,&6":^j7P\.`'h)dZ,nQZ1
%+XJ#2K7i3KP`OQMWDsrCJN*ktJ-qF?=Z4q%.-E,r_bmKg(q4&f<Id7"Z>q9GT4N!<_,uT>!(WdcUq5gC5VFB"D%p*`M?F6+%d_h3
%)R>*M3c(n4^c!NS*h./CL3-qR`6-aUF]?l2V@2V7R$IfK`.h#PegN(s.HOP@F'?rkq3`[HJ4F-+PsdRA5__hFOJ@EE2[aq$?oTKb
%B_5r4%UsH\Z,%R`]d=73=:qM$s(CfVFtH:G/&<m+IlNLK#$C9e$g4KN><k-/R-EkTBSMR9MJ<`EOqK%G#5nAg[?d4N`86VZFg=aW
%WIY=P4KsbbiE()AZXq>Vb?[oO/cKjKM#O=fK*/)3hS:W]STPqfF:kV'B$fO?5?Zeojrue'n/,^WAES0<S\=GO:L\\Da0,XAr`t4R
%FY0[n']D:TVuQPVe"8i(pOBj*^[OMX:XB0UfG0iHBO$1`r)nK+:cYuJ2ijSl=#&K(9,6pMTtLTKhX'9"m-fDTNgI/&H>M9'PAmsY
%f!0.:>-1mXEOn$c@`3#J,q/<J,tmWa-_\6LI@ED4mc?H-f1)/^Q.^7]L-a^&$acAIF%FmkX::lV35#F'LLtc'RodAnHM`gO:S:c5
%mXYg&4;#@K/KWB6&O2-(\q*KPG^[W$^0"&rgq<KS\(%mchRF?3f%2t-1WBZgG9,nR-#78BN]@DSc^J5=oR_XP\2N0fC]A/!a*N&+
%3DFhDg/@ZE+#UoBeYfg#oO'gB`9Z2PBkWZ*03Mo-\no\_Z+p/hZAp_m3crHmF_Mas?IQJ:kS`urh,gX8j]T7?^L_IZI!Wo?'\cT"
%mb[oFI6:k:NgMK&$RqgBlTSWaZIKCce68J[<&b3l#Hu#[(CcaO%CReRg"$&6%&gGNNoHmHQI,fqb>L7U7J\2$_lq[I-QZTliTpHC
%?eqq,b6m9=>A'jq9&IlI8&./k2B;(LTE^ulZHfIpf=j.heL,A*@3fLANhGFeUNjSd4!'l.Dr/`30lis5>(7Nt\8Dpqk%\o!/h1qq
%6nkSX3.5PC2%-NlpT1)+m\O&6nIIMC$Q]5'[tMB`H5Kq@1eN12n$sBURZ"q1>.+4A\#nAQ'iEO?N&Ash]65()XMrK:K%TeNDbDH0
%4&_Vl*V\kD0O@@RYAQX=%-"F*JX9pgQbr5$oNGCm#kKrM.#b$a_%S&9T'8(?*"[J2XC6S"3:c-WW,!c6Fc*lf[IqGhPQ23.)J=AK
%&g5Een!58K;$R%^7lAW,)MqJ!9R*5X33&sqQc2<&S*bK'iERh;\B_uq`k'7:ni3_oMHgg[0#P8,2O92L):gYq'u%VA@9poB7[3(E
%=P%;f\C.")Fi6.jb=90\ld%br5B0@A,#haFCM+0genRUs``2)79G2stku$e7"Yj7PXZ&=.)mmuXr@G\>2WXPsj0c8:>/`_[juoRZ
%^dk>jcPPi;r3,bV^Ag-qIb1Isksnqc?^T)JK>?<Rm^/%$#CaqOk=+j(dCt7frOHtkmRQ8FG=7,5dT,PMFo8CHo?0iiJ"b-W,KK?0
%]st3O>mCnOf;#p/1Lh<BkT8c>O=e)T`/!aqphK#F\VQrBFj7E)d!AiG8i[FC!&jT5dO"s_;I]jh4?kqWFKrK9)-"/(!eRQk)8[Jt
%4\`-Qs5On*a#Dao3RX/p7o`8AYS#a*ACB8bG"ZVUouUlbSQJL"fd*#t$k'IcLIhblXO]#CZA^QM]V(I8d@E(qEG\RND27_%Xi1:T
%olMQQ>_hE6#'/%+AiaY(o`%WY^M4b'n%&2t$hVrqNX0bG%n#(0T3B7OGt>soag,`Zdu_Ek<rd_s(t+G3LJ3u^O93;KejuBf'[Xo-
%S)Q9#KmqeP32GEZT7'8fD*1VRg>I/)O`9UN\pUVIo1A9nn9Y-&G<IG$e(IIGF"sc^*IY%I-Ua$9@r!]&\ntupEA=bW1Ep//f.Zt%
%HG+7<]CtmODaEQo^#iq.`JlU`>Ol_#hqbp%h%ocW2lc$i^FG/!_l-q-"h^rDZC=U=\F9&i=_(bg<a3kl!\qJ&k0)QjqJb???VFW#
%eFDY2]r\A6_s)PY^_>]K*l`D,?h7]NQRJc0j/oK([7Dt-K6YYe3]+%Gg#?#=/gidnpicJa)S3"!4#[LTW+?iOg5ail#0`p5n=A()
%3BKrH>=WCmJPuOje3uX^(Q)CtLT!k3$'6iD3\?$.OM6W)Jt/u!3AQT*D%qb&-i/qUf0WS`\Rcnc<Qi`n97:Xfi4YH0)DY5"=r?/9
%3/$'hJ#C9ih?&eP!1S\JAr"G@`:i=qFqsB1(lBl4oNbW@PVG,KWKcJ+K@ORqjkRTaUlWp&eVP)qfQ5H:GM2V`/o=%UGE2+.D(Tq-
%M(Q%iaXssfb5aeNNV#G3edu`f!2d^mj0W@O>hoNPrPSRfrITc#kt>Gm$SH"SW[/+W*E8@la51TAbmA!j2PA>;-[&XA_j&q2Z"lNB
%DZ6PZ`P<U_ig<bKS_^Pga0ah;W!+%Aa0`^'Z:6sJV\RM<!R/d*Zi]5$%17,L.h,J1kbi.^X7Om"m67YfjoB`"0WhB)%1`:,Zi\Uh
%\pp.!FeoHQMVa??HdCs`VLj(dQL&l<,_S$B&Xr6%ls?k)%5?>$mbI-:hYUXZF00uu&J+m0T:T<>*b9a#n(-"lj;q"^SmD^KX*Ijl
%`NWH;Vlfh3>t/VDeqnV&r]e0$Bi@NWb!s:8`RR-N1E.sm!U@POg%sT*^UiW)iq6s'\pm^2eJCY?+C<@LS$hg5s6=g:jZ9:CZegk#
%]1Q4(W:K/AIE5/bkkJg?E%o,fHhSPJ5arDOe<'7+rnkoad!(!M5aDEr>>"ss"a<]']3tZJBT%u93\pgN(1DV2/oS]*>C56=%(p1R
%hlVHf5(k7%@@S'A-.K8]MakXUD_8LiNECb>!(?j_&WsY'a1U4Z%iR1)o4O$YTFk*+DIHj.@KK6`U(<T!3O>CE-[c9T-&5;MqCj)n
%5Ng5Gdf48N83`S1r6rOn6umS?:]#:f'udBf=)jWk^-'I@!(A60=d"lFi@rg2a#XW0"!q=fC"`St;ir/T%8]*jZcbO"4Oj(^;BP1/
%?QW#+p*G_j>A-/<f4_gujg2<,J">W*-*aIfH7Ei?.C`JJHS(F!5"jU&Pac-A1?':s^tpC`J?iT8Ls*qWl^n?La3%Z]5hV&aR<sX2
%=-;A^b:R&N3"0;)K0NV%U%RX'>sasLfCjM.\pE37'c33]D:=%7;'t%4IPlTnd'=>J9u.8g.?_K:NVINM+<R1Kh(S_T73*t>3>_cf
%Ljr>+VgkFT9Ln9o+ZMX/j%3c(1Pr>u3c;\@"KWVQ^.D]7q_J.+@`:p#U-jYl;6Ci73C.EuaV@FQ!\6Q'N7DGAR8+m+ek'I<QYbIY
%K0Y1b-&L5*TWI[m(6pIU2\`[5*P^b-bj.$jFAP1c[-ertNSU88HLJHE2'.F#pT$/l$,O&/W:<)X,2h?t^0b`U%%AV#W/8E/ftb13
%i[PM)D1Tq<`#)b$XdNuW.dTn=D"Zs<4MXnUbtQc(igp6a(=sC7+%!tE`8)].f6G/)Y51/_I001>I!"B2"e*P?RG`/)F!7o,/R!mM
%oUc68C%F3t>CdQTX9:I)(Y2&fLFaBX!gYHdA0+8q[RC2jphKBU.(u[XL6"5=gJ#D;7bk=HKT>bC$sB,&m4AbL(E1L,Ll7tV!kg-V
%XmWWaE3WM4Je++`R]THL/m5+,d,>6F[nc,ZkW8X+?aNS_V1NHUCa_qRkbXO:o6$B+MD?`&^epI(Z;[LdO9q-lAF"1OhY:V#$og*f
%lIUD,FEVsAU1G$X^i+tl]mYIhm'4*i8pPMIMCk<.=QFqhMJr,?*>(&#e+%+ljK?DlHbH+R,6Fg:$Gc/7I8t(u-Rhj4TL3Oo6M;9#
%Oc(t*f@n>tUPdMnM*+G>VCDDrWC^O3onJLn1W[-R[dh`,nFls[=&#%d"&-V;p"2]+am,FI=j,/\9,Tk3(2b:B9%iE:>\.%)!qtL\
%h`K.@nkfUUj>p'aFlY=%ZTLFp5+\9V]/\I="rit:!ZcBD,@imeBEKAM*(d:V=/@>tIIajlnlblfi_Y\@)J!u>]_g=lR$>A$7Ifmj
%!=VH>/%G6r3ar)>hNX&*C_Gk^AS)#-cmZt$>>!m6g)IF,gYJ"3?Z`"hcQ'*TYOD/00Vj\jQUFi6eDm+5)d?"C"e+fYUl?>1+"+m.
%Ape]+,^<&*9Y+2H>s[Bel>I\[Ypb4;3`OM9:KlCF1_lEj>GY*^Q>`-&fPU$;DE**d('siaO.EVp6q[fm=2loE7B9NM\mt"BPWGsg
%:ohc);/4?RV-tWD;H4)J7bffC4GlL.H+u@:r>&,TH>]nUdq4S1_K0]K38(Qsa8Q\^=3/t!`R[@l_g]>R.(c/1C6`p6H!X:T1aa]T
%*fA-1p7hlG8)b.a5>Uda5kh+`5K$dI?.U[SlmjVBph1\BXhZ>qhr^Ru8S9K@4Dfj+=i0hi$Ou')aG^8fn.8if_qgXLL+Ui5HNiH[
%BB"0H)-#V@F+h'Ej3E4+B#9lKGC_.D/'d\M;D;4fCOc5+Q!3m##9!rj[[+IYMZ](0*5c=I$6#3S-i/htUG"/Eg_KV]A*42&=s[NG
%l$5BU*;R_38S.\"R4odYX7i<8'QXh&HPR%2b`oLt]cYG)mQP#]Vq,U'_UT]G`49dQbs$kFlL'0d%'sNM&M.q6JGiuRQcgL`"BZRR
%4U.Op>2ik\lQ.(K9bjllaFXI-C-*t\geb>ZcN#>q*TQ&[Bs*jje/8%cO3r1n\.:[eNu=1#eJ.M,2IAVkL:*FO06aO!!)S<1C)dD!
%JZa`Wn$[#hMSF5b&/?+tGflgFbD]9tq-6P27stMgWR(khq.L/d\,%#nW`tu*=$ZLHF8O:C4X\-r9`=(U97M+uBha.erNc'C`&WVj
%i]:P%o0Er_!;<L8;,ElHZgYFbG5GRR>5%P6FW\(U5\jYA6f*pVSB6j-@_[3Y<t1m2j?.]E!N6sE#Vf?,Y5[b&p#E<N7oL?T&+<8n
%8_.TTJ<>-ee*#F?DhYUm>GTZWet,)E\G:-bT;ECYG9&V_]D<md-_aHt]m,4bg0!N3BMu6ZaPN_NAT,:nS5^BlT^#_0jBBC'e"d$6
%gi5u([!VZHXfo/,Ms)Y]\qm(;_e22#A\Y=\YFE]hjHk$_Ah$E<@1I*JnR3=V]a&Gc8pb3\lJcg<1'S<N*9&=CHJaJO?&Ci^>drj8
%h1g;c72Q7n(f@42C0s:31p=SR8^YABc&c1SW+)e=-IA!FZ0k'*A2A>ljr1iBALajX^jFa_.$mQWUHRkmQCF0Zm`\.K"jn`&77Bj3
%b[`et12P+3;:CF5MsPA`ho2#XSU$*\%apYc4%'(s]+\jn=+#D)-WU1dc8L@s*RacFY+0(V`hm7KS(`J!47iIEg+:^kL"6tsjPG9"
%s4FL<2Ef.KY1<E_N"39EFi6qAp2a:BH%r:>AUcY6c<4A7PRD*;2d;L8;:T?O-*u*0-Y7!inqpsB",J)6>;G)cD='Xrjq,[>QL5\e
%=cck?W%FPsZ5.D7%;+?,:3PB99Nr4g$RQ>J'DJ)9=.r;K3/UngV$U'TH]eWA,G/l-YYQqi(hPTp.GY-`M(*c]bRh%+b;d):&s"mJ
%r%AW!%3+^""gndY4-TE9qKWmP3,m00rITPm14]>P."(]2q^\$II@8@;&htg9GtYFE?r2E`JjJES%V$SE]br"5)/d-tX[QkFdWsG6
%nNgR@!j^LuYC\qt1JSdkm\90L.<$*A?&%L1aJjgoK`.)&aI5@.'hI"4[LlFr1uqMM0<KNfV#Yrf";[a#rD'@\1t:sMGRE4'PPSG<
%_M/H$m-^@p*o[_B)%(oP2uh1/_%e!2)iQ$hK2S]0(QA%`kN3d2GtTOkr48?]fFskk(<JajE"Bn`E]7!*ot!K3XG-VJ2_1EnG"43E
%q'h5Y-t*u09:W<LKMD!k8fBcj'[SEID8:H=91qW1'r97]Bh%RKA%,h6=!PJ6.CQhk\9gklEQR@SW(N,)/C*7\JNPEj_>M<g65>Pj
%FB]hul.p/Y:![>=e\h=0@sk%Z5"iPS6ZdI(GVg-D;?PJ?-*D$Q^HbhZ$8B:D1F4P=-[0=hJBh,5J=2H@dDGOB-8Sbi1seJ7%dp,l
%0\DMnDG)r(A\QnlSR;HWd-X\G4nrfIRac,A>8HSW%@CRRP[m1De[g7$pqim^\R[kUm;ZiW&eq=;leJ_'Qk&\>ir+OoJ<0CUbF%2U
%ok82cgobY\E(PWp/aC,VDbVA>J?0^ii0&5,GC^@S3,'!<=R>438'.ClBDUq;iEQ!MSUUj0Zl)Ad$-&9;OmF^6Uj4D4*M?6qdrdbj
%=RZBdYU%DJOk;7%m3MEceB)r+"O2gBiE=ARrnN/KfKc4Lq>W%%f*)QT/O!BFI7E)V3r#L1?uVB+[lA!=AK?.\`m:$W#a4WK*M3Ud
%:dM_R[%HH!]AQ)mA"f;`&cTORhGYPq[<1>NJU*VSA(KI/[d;qhE1N1'Q=[LBbKiBT[cqI,\VL1JLla@(I4Sm]E)Q+C0hN8/cNZ0A
%&^HNo)+:@>n"oN_[Y;_VW<k+OC"mQZL`9m-+%R_f>m6KegJ1'>MkQNEOZOAbi"jIe*TtE4X8M/&oK(8mpg5Ce)9G>JmoV?VS`Z5l
%\@);!qbd,Ok][h@WA)(ARYST";QFRVLM95hjVgCS!)OOdG9crskHfHfQZ..Lp[c@Kpe@(e'WqE$<`AaPdTsXZI2[u""rUQ'!P,'M
%9&3:^T&]HY=H=C#)?h"_QZdF)J@K/mpi:)OCu#F8963[JPL8Q1:@316e>)(V[*(+TX"KE$TsA?$0gsrrKIeN!S.NMKY1l^Y;R/2,
%/6>bDUP]YJ#SIM?%s*:(Vo7\LT1>FVTSH:i>Inoqp<g4b!kO&+nL+bs)TmpT-PbL(.%0:^+:G]jfisG@;@GS-h,'1(qKdpjrWXY)
%eX;Xmaqg5c#)ANFn-RBYK?p?i9'=XS#r?6s]7ab!gO4ZTHO(F?,JHZ1MVo@6>8-`TogM3WZ1DFV[n^b[1k8!:_N;U/0VdJ3mW&NS
%j%pdid^bN7f&?W(64\MfL05nVr8-YBqj):G6'oUZSJqY$?)39EpXQa16eY$W_:\on**:f@AHLrgph5CpBjBM>''[mCnO8<Y4MPfo
%?Ue/br+VMff1.?P7k\/t)kVHT[@#`tSW^a5IJs+/rQA!;;KA`V@P@ZPYQ*AGJ+kmOpq(V?O9C6P\:+-WZss)DQ4UjDHh(?6@s!e=
%NH5'MCRL2U7?Z]!LO(4Qm*,M)j)=tnO6>rd5O"+';E!W9]jj9O?b>>K@rs0'nrnr*5j_7?N/G:*Df)l#'6h:#mU-Pp?cZ(*:]rYH
%-![_Xa&BW5LI5.dF2.)nZObfo[hqYNHdppiiRD)pbj!S/qP7`dG`c<Yi\.t/o`&:l$PIj8O4l3/+(4?[J(lSoWQh0Y#LV]")F2@+
%\eot_'>_p3;ro*CL#S&[M.)OpJZ-/:I,O'\L7H9r4@B1-PIo!A;i-W>#C7<+SLSl+?0ReQmUcBTVOBJI!!gt`;%(Kb"(+RL":Lm,
%j$9C_k_;5&Z-mpKjoOBHn#M=k6^HXkiMR,,%-5SGOY6$ZOA)+*,R<obM+r^b<a[8//BA]]((TrFVa3'b(WR;dIU6Tj^o3!Y!EflZ
%q7,",BHK1i(Pt3T>'Hb;<S&.jN"SYZ-'34^n-m2Ra5m*C&eF0]JfR(?2[o5-IR['Q?SGtG),*`sfWpNg<]$a(NPm$q%D`jJEKGJF
%+Mt:6efYUY\ppR^j\Bg06f+7#Z$!2Mh=3I/K5Va>ND8_9MeW3;[-;rk+ZHN]a3MFMeFZO$D-(0gN$t_B%)bW2KnRdRbAu^8Ht"HH
%afIRH!,99R&!96n%$lq_lN34RE9m6#WkTH==grNX5r#Em'3FZ;2Pga9lgW'\`!q-#0l,:jWt=pUg.h>Y2Uk!s]F<`f>MFAn)'FXA
%<6CZB4j8h#\njZ;7WpL(80Jp$H\Z(%VFA(^+Du&;h_ZpJ,O^L$G@WbiNTa`q?C]CnBV9>G\T"08m&LijVP_jlFDp<4+r:l==.AO=
%S>+#8#ij#(\tL&C8>B-_$IX\*:ln\&7B,*ok/.<++cuJ(PK*aR*P6#l]X0";JSsg9i)<ee$o4n=lVJUAs1B&FB\6@ZWp,RmJ*6aB
%[kKA0^'o4mKuQb']!7A3?<L.kW/KsO+?c]1_o]-)j);;DNLq1^/kHbAfJlmqMe#-hZVk8t:).I[S9HqI&H8%cS=Y6\bs@c+2enf^
%S8TW4m+r/$I35mS^fh^:)$FCpS?j!.XeH5`Np/-=/4,T4n(N3F5ocXO"CHar:J\-[hG!GED!ngZDDqh&U<eIURsZS-GeLQ^DtI^C
%OotL-,/?qj-\?JO44JD)KAPacVPFnT$"-dqM,57jl)X@9[k=)L#Pc?'OjF07A`&%2Y@]u7;f9-`M+&ILRa`;q-KVari0hV3(6^n?
%eH`4`R\U&t\j>o-8$uaEiG!FM\ORH#2XF_Sc&'`RCop9J"+HQB_Ao(Jq/^_)-;)o1?JFKB[e=NB#$=#%PFOP;mTL,9'Edo-1f)e>
%;\9^[8*"7QkA(Ui>\(8CFsp-#@P"L#-V&GqmJGo"IiPg"rQAn9g[jd3%$t(n8F%8sa?k"_;!pe%EC^aG>Osf)m4k.@.3SHSUD??r
%aW"irQREU`BW%M&0J'&:a$`[Jg;&tcb:j:KJl1j2qZe!Mgqm?_rR;B3olJd!W4rLoX%kGl12QYNdr$!32J$=,c/'-LTK(A[K,'dJ
%US-M;]b.^shEpd9YA&(<c4FOC2`J[s4$@tejtsMWA7\`h/Igr]HYZg<LP-9J1H=uj]UCdcor_K]*V'<ZSR.)Lhj0XG+2Ul-%gDMd
%Ja%h=.LiQ_gQ\!*q2MLJ'o`5[;ursN*h>kpV36R=-70+b"lGoFd7+No^L8TSgZ0+(KM^9DK#)8qaV4G*9\@:"-7OMY[S!9D"Ec1O
%6OC;Z6>"&$CcSZ?>\uHtGs?rj5`\$6mKVaQ)$4`IZu5te-C/L@S)A#*\n7okSdR:Bc;X_mY2,MNOkXD*ZgHbr49BS)1"jTsSWS8c
%Lk41!Y7H=Njb%;6">PF2-D(ddV.>Q2\C=rX_q-2b&X0bFKu_#&pqL>SG;/UtYIfhpI.f,j\#-f*X?$R$n%/M9#m0n#iNkBMmRK3,
%ZjG3DIL&ND>eBC8:h3L8n/8ebHrmM'\,hbZ=CJ9,#U5t)?1:-S6DM.+hV/-r(QOBedHV^e6H=HY`38O8/$LUb(RnE`/(I\`MKKMg
%_.,sX9ZPl3`FgY,6-g&FhSlb8j@%5eB2AnCnlp+eW7*X7p:WTrU8K1WA?`7Ijai5@b=iWb3LE)L-Mg,o9krX0QJFC[:nNQaq)Y>o
%i!nNCZla/`CkJH3^fq6#RRA6r?>0B>C>=66%4!mbKT9r>-f>*O(0bjfQQm:mCaa'`W/AM8GUNK(b9T"'5^i2C=A+(pVTR'89e<Lr
%CCH\NRQCmM1j'Tn?A$Y'SG1/nOZ@//dq0K)aEBOd.og"bMH*T_Aoda6%^sW'erb_>4\IpRMC[/E@#mZHlm35Y<D.D:46DUX/5NSg
%1%6EgOjsP3H\.jPngA!:,iYd^I7+fPN6U$_a`.4K_3+I-KFRIbINOPc!k\Y'HSFbXPo7BbFRa>?o?as(WWr`80>u&_5`!sGXQ,]/
%F*;XOW(>eaW6T1Z'tQu!JVW[+G;@*B@m%nIhGDGq#fXicHN3I@)`,Yq7Vrk7TO.*EqlWEZ:JZ[(CZbgR=AJbE+\W1(@4@9`m;04'
%_I?-c;F?<.4N^.JqDFR\BG0a;"LP+s(4B:Mg^jee9W8eJ+sOndSEs,Lq(`u`-#eTSrD%FnUaUVk*=^8@"c51NaL3I;\g3FdV3efs
%s#eC7*2V?<,#Qg<G&nffGMFqgdEB&Ur/dV`p%KAde\(ioVdgaHI<%?A$35;RrbRU\'V/L5ZtN^1:JH)s2!(?IGf.:7o]>#J!CMkX
%;_u[P=G%+[RVa>P0f#Xb+_$GK`F*N3\N8iU7DAlcTJOMK.L?N2@BZ0e>WfB<V"moQ`tYbtJq1q*"XVo"f(2pJ]lmc+\0gf<9*`l)
%/A`i85:sYbOf+[9dk9MhkA9L@fk_Y`Z(lahC3I`bi`b^4Y!'>PAATi-hJ$a3Y`WZj[i\63*mV.-/eh_?#7mT:YV#f@]Kp#EUp.>$
%D`?bI1lq,YUNpUXk7)Lr0T`PG99Kqm0GRD;fNp5]A'V4I$3Q[>#.1Tcnb9W^FAWthU&igKq(.7FC'%dnN'\8km@Ye=gVKj)X,eS[
%a8"#?hSm][l"1NVos0cXfXQsN5XXG1XM[V4k@%+be.Z]R7C:%D-dLt0XXEXXqn/6Q/A2W21i;q3AR0i@%b6QoAfcm<i3E(o;5hdM
%UQMfke=8Z_0T61:68GRr\8N%7L%qApbtU,@JGTt=I"9>5M#utoEb,ENGl<L`irnrCO8#F=f1%NG%^dns4*,s'15J!J6#.#\01^4\
%c-#d[3upNB^GRBjf6F5RD6s=fc_:*Eil/.*PQ?h(2!V4+n%Wp3i6AJd[(`TT/pIOU(5#oGCQgX\%p!RG?-Ooi,bF%DrSDG5C%tM9
%ZM(T,ZA,_/QT"/?pFcOrQk(57."8jJf=RW6:R"lJ"uQC-;4:6Z41hN3n/TZi`P&;X((gi.*1[t/6$%5l9ZV1piS[#+3-VPO2aIJ+
%a;HkJO@V^Pg'>T.B$c^B*KW2ff7;.)3W3l04l2!-(L=2#&*`=!h7F7G,@.6fB73%j:f+s*M:I/4G[!A!@oELIQ.>3@:j7I\LaH]E
%,7g):]q4'l4p"[rk'#pZdS"j)<H%sI`6(g'>tA94&9tQ-Y?B\HDaKERUJuI1ND3&nRR7a<]V!o%<c[N;#KR2;<il;964\X[197tH
%Q!)+b#\JtodI<cGOW($RDO9K@pZ6]Kd=-%S8@H`SEr)?-pg<"Va`D\\Z,:!?"Kp@s"!%A]C2f[W?W8$p<?LW6m@EDT2AAOA3O.5M
%<-*6Vbj%Ud"6N(]i-@\%K9'dNC>nbka"3`b2XkAR[lu_FSVM3QOH&=Pb:Z/WEK,tI*sPVYOE*E4kfn2P`A13lKCm+6jK#$PTG"E`
%p0u/5OHAHTc+SW=?QP#0[]P+2:&(CK[Dc:_QB)Ouqh!JSn?1dc^Z98rmiG<G`98^dcS@;2S&b&3'^6f6pOJrs$`D1==:ru:])bHl
%kkpcaPiV&(I5I'C;%^t:.2MI:orqp`L!-`g7)@g53No;@Yl22GFGcJ/i.`m_lU=Ag/@!Xah6LMl&Y/9&f$g%=<"S$T0?4SU,\+KW
%:FYcL7A2"K8+[&'0Q3_%I1ql.Z$L/*&pfYG>JPh*D&SbL2j=NNnAE'I)%\%8$uT!hT,-Eth'B=$mu/"u+_o,R]SP1],-a".\V(%P
%Ur(J]kdHM/,+o4EP$-[k*qK$k[VX?!d[/$d7tcWeQBL3cY$jE<)W8[>ftmY.D?lERG<E#M+GF/#SM2sE$YgekC)3]<=DB$G_Xil'
%lh"NJahK"YL5<2]9<au2Y=p'Qoj'Ip1tq*X^'.'8A`1Gf(Wlki/+(aL'/jUL^8$Si/SZ$`T=o>L,0@d(D6d0:3=AY&H5[!nQRtku
%P^JY.8m9/4#V"-_N0Gh=OKV("--AnKj5(_eF&]#JWMBE37"]g&dOPebk]A`j`&H!t9E'd&EBcZkX,gPR(AeVkjoXf,Wu-]L_O)cJ
%X1d:_e@XT9Yfqm5@S)5b8NGg1!=5%D)LX0f_pcO[&WmK7YP&K@WAnT7Ejcn=76rfsiFBo8moQ8-.?]td6Rj>u$V[).JNdR\-t4p"
%\#U^p<[]2NguBq>`8@4lUt?-],6mge57[..EVudAfYRF!DQ;i:^4"?J27pd,#U4#"SukHh>X@^!JdidGVWt+m#9]qs+ON+R,G^Kj
%g##V&50A??Y`^j66R]p7')*fd"?HI+g;J!p<.H>(]60$cBqSQ:eI[M0o<_Up3La6J^EF7ddCq\fa'.6[I5cC&$=a.Dk6=kkA&$)T
%^r+fabp)]aanFsT&KS3eVV$)QR@*T[F@IAB;7a,_12$9K*)LqG:e8R-[EtDXo0N6CIWE2<g&28rH[3$d(VCocEe$,gGde-mD@!Zq
%4Qeb0o.g'Km?8gj!rUZZJm.AE-X`5`XF."rQ$c7]]q"&)(!`mp(S9eEHgc7YVAg^?Y!<7t[,"PUJ,*7*NFGuLX/G(Lf\Z?D`cns:
%2T(;XW?b@=BZ'SW<sup<(%;Eo<?e!5<MJfZiI20qO).<Zn_6(2IW4>*\c3c?>O]AEoFl7p+2``8,ISAJ[9$^d=el7,Ja4YZgB#BH
%U5S=[$CisSLHc,G-J=DK`+e.hff.-]P'enZ>A'm`CIs?Lo1N(K#ZNkN9sX,P8'k4;i\=-B0O9ke@GUAW;fJre71h"\6>c4+p/@oV
%]^LMSE.Hr\"#:2\Ts%\elXaJ=o/gG$gR4PrAlQNkmJ%F%K%fMO06Q`.bcZ;Q5B4jhkq-`+5'._IfYhBW_adA5)j*_MZ8jnQ,bXlN
%C.`C"KC30XF)hJoBE>l>?4/@u;bb#5F:mGV6tbpln''aDfpmD'Ub)79MS!!I'_JJW<\No[O5`C-IBU)6<"DGV%i;7(eh2)@ad@3p
%-sBHHJrX>WLc5^ig$$C'BZ?ReLM<17_h52@0B4H7d.M&f9c.DG6\qN2.HD1Rfj-Ikj2Lt1$l]&!5iWY-qQCF7JCrA+F/<=8QdLe>
%(9t?FQ7"=$buR^HiI!A?#(Y9H\LI#<f[TS-[gJ(Q6=3j:#3uFs=(Umuq=B+++<OND%=!rN`l2EhIT+DYDoV'T;TZ5;^lo.L<"hd6
%P*8XeABP^n!&LR#R\u9S^@gHU;\1"_Ra8RDjm8q&gra_Ee6@$7W.uip)[iN;)MCl4r5CW89%GOl$:m>?mI7c9\g$kYH2RSAG6lV=
%7SH$MF!LNF+t^X^!<h!ORt6W2T!3+'fH<\hJK&]6l&PS,EHoF23@kXW/3)<Dl(]\B9&8E-+RO2eaB9[$&\&OX,fANu6RY7I2V)Ft
%@U4RXigi8COSc"l.Y*ZB@?>6p7]Dqd2gMrPrp+p\iI!%SQ4YgW&su3cbL@^aX>HeU93p\_l@h\)4^?3A&!gTAd9VMVT]T;Y5\KH-
%\?>=bM=VKaHdXZLQ3a(5hgk37/OR:XZ:#2;*k&=J)e=plINPVROBLkR!krW>&ll,n_-%0X22b@%eu\E6(U!^8kF'%^<NutJl6-Be
%rPuaS8tNt,G[?9Z#q*;:4MA>^?0m7s+na!BV"sU`<s32-Tf\.H+M\8qaGOZ`53V/^"qZ("lu1]helEeE+tf0qabm!3Z>N]nUV1(i
%JX*Y\]Q@?"pLh`?YDOVM.[5^.@3V=NfFJtg?nm9b7*>p58:A1/aQ:pis*0>==I*^nQYnP*RITD:Tgh)Kp2Y$alfhT<fM`:dMJXhA
%#bZC*"seR+A=?-=a?GhJpb+Dd_CX9dP8L]jU,"\]@M4X&4`^B3Y(e'R],T>)g:m(&cXf!3p]KS@3;,HQl#AmEG/H7EMEA23LC\eC
%/h>k`LTJFu_b7nI]+L+j>IHI)@LH`@1=6(7%j-X_rGO5-VdG(f3;NKFU;08V^CMauXD3!RMK0b#XWF_8M[5o5=na7$0n]M&m7lqV
%HAD<J@ON?'"&l!HG%kl>'B%fVQZgj-oHp6:m<';Jj.a4LY8HTfj8(O-E46OlOP4j!50rDI]7[u/F!Nri;n.T'M\e+jA["3KCDV;_
%E=13^9mi^^c6<:)TRb+B-;@n2J1S_.+,Yk??"=5KC=-D,9j$Z'.kBPqmJ:hLm&@M:\Xc@F^_(\R&'j64?gbN)Y$8'),X*Dd[=[*/
%r#j"i[k,Y,:B(o\P::SbSO1>L?cg_--#E\QdB&q3:C`'k-Yd:=$?njPj]P(("OTeJ`#tpHM=&bB43<gB+%Nb/[%`b^G'9[!TG$=r
%5H#!E\tM&gJ*4(B1HV*n,_WDfG951h9QkE`AgbO<YS]e.C(pokl02T+AJV29@2[1#-0=SHX-+IsW$m*-+gn7^eX`M?jD`J:hhU.n
%POnV!?qO8Vr6i`d/>mQ%E;-!djegYu3iZO9DL&7Spm08h$[9t55`OV[%!R:K!@>`='2D6b\<j;3/,c:@iRdD5#nZkWn]e+G&`:;#
%oB#A<15Zg[SmSs2E!GDGC.`hhb3@m"Ih1g60K8;!ecHUVe,A>=_]12+5B\)^hFh4_8+C-;6(pnhhX/SeL'mBnD*h/GlEr$RH>_2'
%r53CJ6@]%7>tQj/NS;8ef=C^q^XSl7c,^pI-V>2?C7D*:rae=4+*/!]J1taV7ZZ:0<@+u/[\'$EGlX_F%INs;Vj2`&mOpCZK!AB%
%S5@pu$nTRYAGEWLJXjTl1!m@@#EH(%Cru8[e,9t&LU[N7A`U&flfR$;AAV$6E8MsfGitTIEC"`D^uC"L$Q[-V4bkL._g^&s.MB&(
%PfMo,iZHR\06CL%NWDG0^lVlpd](XZ#^]Rjm#eP$f>lpsoThWKF(LM*H"c]D+)dU4^OJ$acX133r.V$=ji7sgr'dLMBm[UG)!<aR
%&LOq.lR.+&;Y;Ef8;**kdCu97DVi&c7NtM=OW%bSC1$&$QMQ'ogqVJXb;Oej?uO]8!1t5(Kk\8>fG?UIpHOd,lt4H_c%1G)b4I[f
%kDm2h5/'qYr(l<n@(uX[Tp_^Zk8_CkfpbiKT[tYmO0T8*,,\%?fK<^7-)"e]nB(BF#&Z]"*uQGCaHK$^*0]oPkS$9Np1o*sX@r'<
%iTL,8QPf7k+ogn*XXfU[(U]el\UND*2Q)F?7isM]<Y^sl)DoX\?-b[/pHQjm)[\C')@N65R<pb2(cuPE6j-nm:-)3(,#\</I]^$Z
%Fr)!/DMZ=EJL?ii$TE1Ge+@]sDQ:9,lT7JI5k5`(rG#+hA7Cu6oHW(nlXo(r7/tqa`1`;^5&'C%06\H:Zmc4YoQF4;$m"/h%0:7?
%TmbK_(p!u%*orlGGg<6FQ9d40`e'Z0,S;#nM2Y+s:Q`.ld8K$Y'eReT6rFLj9T7si10QPX0P*:[)N$<Q;.R3p3=s9b!&=c&n>!rV
%78jOJ0h3<;R[4l#CBt?(U*T%U.TXV/feYmW'QZ!3M4S"=Q=6XV#";=!T1Uce,q'(^:p<l$nFgA:,U.ZZBL\18WYZp]4k5i3e9lBQ
%-$bAk66f'YR*;-LjQe3(VT%0_j0Me$r>7L'2UWP6E@]hg_<_&Y4c#6ZLjB];p[?tZ^lMjIVo;TUD`"!Rl#BG2]nJE62WO#.>EH3'
%<VGHj'B))i:K7/A)?A0mjN#kZg3EMFeA)p:cpqTFMCpVIY:h(iQ]QEUVblbO]HH.Sn("r#[TKmH2uQPaqQqXWgpKuJo2:#8Ejosn
%rd+J(T5:X"2AVIPP9$)NqsF'7S[`Ofh4*<><k07+S+1f$_%i304O1AF?Fm*\^[\CX.kkeZJTK8UJDu,gn>q9Nnul5F\Qa1umWZ[k
%qn;m"KMc67Hp]8-MukkrB^nFrUY'QA4aL#C5\dWc_at;1eh1]>5>R>T(hH2;@6^f$<;7V6e]jV5\=JlY<Q!/>JN(u^B'3pFo[;Xm
%q'm_FI-Zeo&0h;nI]^&G#=DHO^>Qq&e_/<4aZ@lB^Xo6\<s<<_j:$?PJTSl'TUh/NaCsRNa60K?eke2OLiB/k.ATE*kaC3TBq;G]
%:n-FO5aSHb1pT'-@@j%I(gic:,)eiE-++Xo3$bZ:Bp`To"GOEi#:QhO4J5hWe$-,>X!P?ZS_>&Q,pI\YNE.$nh'bWL[.U0?ND(7[
%.qrG`r?.5>/E]oIBJSt5kMc91D*_3<)2^!Rk)"j&;@$L3!!Vjh*AC[e#$Uj8`)8Hd?a/HbW3uqh]eiD5EAA1?'sb6Sa$]u6U$ru#
%fo[6lE)\o-.`,1_L<T7F^@)OmGF=DM1]&YK*/R`SB.1#$?*"='64B=>,40pgFk+#g&TBGkM_`4oog@q;jlXqg&BqD!duq1c0MZ+X
%5]LILprt.4=FQNIGWd]EUunENn9Oh\>'?8RITh3Dcrdlm?^;e$BrMqfp<(;LCFJ6e;#B&[4KLb`$Y"<UlOS>L8@cG5=Hp&Oa7\&Y
%\<'Gn&.)>ga3+N8#VO0m\,^qRIm+nPm&#5YADeW,_0WW3H8XCgS@c@HK.\AVc''&dMmObFmDV^'DE_WDf,k/m<8%N+F\h4%.q4nZ
%U"+%eQVj7q(!m7B'&M=R4'+bZ2H;$\4;CM)!T6i:#O$N%``.q,YI=F4eQXO-1k2Mud(%#el;7.WFeB\)>+eCF\__]6_R)0t5gd%u
%=pEdgH9-Z6k5g!dnm)?or'K82/VWG'8DdVtm>nQEZ=VKJ22/IaS-[BJdAV4f+4A<u-/B#,SQ<-E/iTlpYIQOe/`jP:fV$T(5:P()
%JA$E25IZVtId-_uU[Hl`Cla<;lc*^fg)eM)rHW`T^S0BIH$`(np;cPt8Hh+-gB6jHgt0j+"/u,I)!cHo0O)!IL[@qn-'iIjg)^5e
%Ze300HN4cdTZVP,87b!Q%TLLp`U.A`XJr0iMS,@Z%sLD;bNR,"_>I)f"D=%s:n:k@[R=,2(?#D2<-9q2b:f7u-$Vd+bUd2A8H<n>
%M3`_J<LFCtCAXh0<?3hEJQ/\9\J,a8m"2uVl_i*L1j3HR0%,&FAn1qgJXdD1`0O`lL8:n#n$4dAEqX?(^@B7'pFe%<YAttD-$ZJ$
%`_]7[cmd%C(Y-'4W1AfT\mSZSKT>Vg=?MhI81Fo;j3d=-V0I!(./`kYCSpbOi"F%,$WbUd:dY%=')TXe;4-jnJtfcN*Q:BSQa<>u
%5&-%2?-P2:)dnK&$D1'*l#@mI11<&hVU6eC;QoBWZ\qrAlFE4VlIg0%dEf4gWd_Y)K*G$0#Q6W<!ek*N2Ne5N"9H++DRFo`HVf)O
%io:&8bSl-"h4uT>.XT'RS]VTNJubmk-IuC<66&ItNqNP->2J9,!t,8D3G05pO#/"n%WMOB"%mFC5)GW.W41KI$7`d,JT\>VNu@q=
%[iQj[UCN@5Ns[rs8Ikp*^j,5JblS>G/Fl@JTkHj<I26H@C1dQYYMoRpch!KR0?9@EGsL7%!;*02D=JDRO]]/XLub0Z*:OSBQ(Wi@
%cD3b,coJu(Tm@bt]9$UIAB0@u\C<seS5]sO8K>Og)md;%Ma@+HCtIoE-m+MU$0Ob]dZY$^G3VBo-``=K"Z.Z"l27J:O!k?GCJL$M
%TFkm`Q?B]mP2:M@&LInj"?qa[Y75%<kt;"$!Y]r?Y4%:=".ZjbUPVCD!rN,24.>=KPdQ8!C`4H83YV]cQ8iDUZ^`mVOf*Gd+o3`I
%EY4L,`*^*P5eCU@^crNQaRc5uS+)qf0qN`BFG$M7BL-g9%RZ$Y!A.h>;X.fr?F`8@&3%!SFqu=[5`X@#(rM&s`VE0J`Sb@A):j!9
%E8P:.\_0dtlDRp^5dRC=jU`5@A'Ls!A:m<PTr-SehXT))am76thO\74aq&h70-qI)5XQ>Bs/[m:0*R$7YfKV"$7Of6puT$oq"`;(
%@8.;841^8OcjI'e<GA.\@<#R`'<.[Okoic?`3nSXh.!V)NgK?]'!^XRGD#`b+YLM1DL"Bm1Xr"rZ,)`DLcrP8Cs49X]`H]3=-[M'
%F5-D'nEJQje):*t$@CRAqt6NU7XjDiFQj=*1*4%6.f<>>)P.;7D8oM(:4mTYmW\'\gYCq8IJS>^\oXLh1\u`PqSILUi`262-Knl!
%,ImKse#GQTrCrLUQ^^_a0k=2"9ilVN"UnbL28^(V$LO=Sl=#cI1_m=2H1efCoLW3!H*<rF8HnB$-F\d(1gN)?Vd/'p0lg9d23krR
%Y@Oh_T-!^k\PHl.&,,5qj7O5EX598"kmYY7aml?kVlmdKnpd5GI%))JVP?)FL0?ID(PpCk/]lq]&1N!:jfo;.!O@!p)nKSiN,>Jb
%lW+sT*`9-C*!I`c@kp(/,!8u\I_O2@WQY"?06q@n`!P<->>u*cqDoQ[:-Y*:"OWqn9UEIm?VK%3(6t5u^:u1*i5lm(N.t19&?!>\
%/GC(F88Mc:HI!DkUM$^-=IN-&R#5RK[;*'XE$A_2c.b\qFU_eGr9SbmR_Q27,83Y[WGt%1(1RoU=2X4qB2/:>KAJp$gNQA:DnG94
%8A4!]8d<>(5X=U^,-tj(E!91]kbY>7TgHSLFnB&I=uI6RVjk6XaC+?H0ODsH$S"6:#lVP*?%7[3%l0I*k0LjWfDX*KW*!Z>5_Hn(
%,b2.KYg@8"4;%;Y,*!_Il*Z';okKV40)oK2d5bs89DIbel,k$#'#jEPQaHlM]Q[/(oWHCSGlQQ$5%K]+*5l7;4k0ArnmRPf",h!C
%61=upD9<R.N^_$>D775*)=hC9bbu)WM_jWNIBq2nll`X>0'`'j[o%Oj:Y_qBCSJdJ#ock.#)J'#&7#5JIa4mM,KNF>#2.432a0.k
%JV'Uck_dNu?G8VGV+qT?o/OGTl2U,V.B)F*\t1MI20!(Vb:;)fTdA4keB-t&<!6%m?B9Cp*s<P(3lKZEnVUa,AsAm\Idp5DYZ*X[
%0Fh(ta)VLEWl<2d['YRrA'`hKl.of;8DV4?0A3_F[t6iBkr:A()fc8X]".&kifl>@$1NuDok5<ac.!=[_ldk0Ct'_6j0L9l#BRC&
%rG_geNpGhgVh3(4ndLi82A($eo59/a5oG:4?4d>VN;"f>=elab&sJ6ca;.s`H>?[]+.eQRVT=cQ0&KrICc$aiXO:,h/GVLD#;E4D
%A.+2-:?a@i'=<3T!cdmtL(".4XgU,IAas#*8k)YASko*/rT`UMDme)1GQSE5[mj<jg!5I;<qRHF<Iu0_l*FJ$ln5kB%,:-7-&F,E
%6YH9=\5#OX;To^`6i)*HaThs6')C;k5/eC:2&kKiAZr6KDELos$IPH'=d@A&)YsP/3<]NpIo\>(bd+>'9V=(n!(L2!;>OboYUgsh
%.LD3E.[r1t@;,QYhm'uS2Kh@14J^l'dMXb6)'pKu6u]HDYuRnGE1V0>MdM%BU^FIHBfeePjXhl:4W%;mdnUtJ)')WEcNcqnQ5WbW
%@I0_"IRe,-VLpCNpd$WULl4f$Om^,%F.!17UkRa1cVhX!;HY4ALLVEQ6+K>/loB7o."aKeV!ZPM$te*0J_RiHl5OVQ*Q>9m1I^`U
%1:#f/Q=eWa?2`-r'3I;Q0?*@I9$:NATJi",b>rHq<s3&.0g[@?@EOmSPn(g.='umE"Hi@N0F3W=4VL[V<176OD1W3kU'JRME8%7*
%qOU;h'W6dH9X,j.h<\+FW#$utn52P2WYL)VW;O4'\_cD%qpHWCqf"ZeN7FP<(AA>E:YrP?^/T@8_3c8D*/VH62"JmK'Om`TiffHW
%UWE@4dLHo!BT@\]60-lVIk39C6VM)XV58k'q"j_a`Se6)A/S@flk9tuB!^iS^_kXo<,#P+_W[bMW'/A)A]Ss8j:\0leuN\^&/SNe
%?m*d)4rb]oNTK9)f3]Kps6qia^]",7J,M=0YJ:+8J,.o766Q7%qsT%/5Q9WNs7Ep1s8'M.p()ZIqR_7VhgYIuG;_BU0+'B4iP5E\
%\$%IJ(]O9_s6]QqqjThJh1,@?s*XJ],3*BOK=cp=YM]B9+90.u)mEI+lDrf*q;HOIpuCiBq)A<>kXglP00f>`gU!rKs61X*n`cIn
%J,Js=r4g#HQerfZh08"2r:.8rr5Wl&f#CoP_X6BtRa7&8QiHP^s7"'a#QO*3IfIIGs7Z-cpsX0]m[o"+LHjLf<VZR*2uf6%rVh<G
%K0T+F50_Z.qs?WJp@H%HiL`jBn(@-;H@MN$G!rpcm]2s/$(iNH/c0ErWG+!XjJ3,+c"'nXIdAf@qFF5H^.SJfPF5_$B)kQ/,1F.4
%@sc'&2K^un6Fc<]5]h"$)\Y*W$l^o?-kKX2T4S$`E%OplFs)i9oaBX"FXr)\(4%O']DgEq-!:N>hfe&km`5goAGdt3OZ4/b/<-0u
%"+o(YK@,k8OfV8,\&>Y,ARM7ahn&`kHLlRflBFV9NB.Y!P[-h"2=A2^BT0Vs4@8T`N5tu4a(D,/\/T*g5IU7^YF,_,<l^`lD5Mp?
%>m`d5`'uI^1UinY%nO10lZC7rpM\,8;F)uSlTV-!G"ji*<^GM<hipXD<=$L3KGO_I:Vh5l7KB$L23:=PAtjrn^sm#:Q&82h!+oio
%6]hB[$E+leBESG+E4W"eE0\E.RjfG[bC/"8^M`.#^8u[PEn*>c21<s*1s/DeJG?\T-+)"sP<Vq7HtA8n8+F7^$N-*GAom(cl$K[f
%!roT`a)N7l=rk"L/?W7[=O/EH_.>#oChV67V]X9$CJ8RmX#bniIk:KX2tnffUKQD])riX^]qH>J,29IUn\:@CX]DLVN>aW](iqM&
%]44Bo55+VSWJeNf0`8[7aF@-Ms/$ogD?YkfEm74X#_4ahMMVAr?p8hNP!rqO0:aDJ6q6_^eRuQ`\`Nub3X,&dH1_\n3D7J4WZ:VR
%QSG%R7YVQF`E8-#Ykc[t;JgG(AkP/p+9B;IE64!#.,Z`t2=BCUHcPA,Yp`A=m[#)hpM]]"j\`h"<e`*,14$.bSq-/Ej<MI<l)su$
%cKHqY3SRNY<BreRFt=Wc;5>q^BBGn[camhM`q2WTiZm<QN$H=*EjKJNNP0WZ^9:_\Di_1%jJ50(3-8_@ijt]=')a@gEg$/2idk2F
%en@b*aP^Jr-+<9MFJji%f5q.7q3Sm$\d`XH:(qin<6,spf&Yf<JZ*]HnVC?D*B=q.%Akl,Prt6p(NS5)kG!c?W&gui3k>Q'`p>$M
%`]./Y;(fd'@`oh/BZ9O(k"+oE-b7+M)#]O`FBu<>O/HZ:dp`:7-3_\3UgetqU'dM=NnsCMCnnFn!K$JZ:0Y<+BEB?;Q>IBCr``Z7
%kD@7!,ALm%MH\S[!8DY%J9=@/L_bGuU=@:J+CM<A8bTr,LSd(k.#^-ts#LsS)Is7C@5DQ&i+5a`+*8mPCr'2?Vu0-"/2Oj"IXneU
%O"-e0_L5Bj@lU_.p\U;IX8dK>kq%X!__>u\MJmF_=+Y)q)]pIZ\R[M;P!u&SE<&YKh.6E`\07ZT-Ma,\o&+`nDn9tl(nhiO`SF+B
%W02&9'BuM1+i^;:_d/f/Z^J[5QmIXOe!kJ@C1Af+.\lfBCh@lH0c6"Io%<Cpp[RDL=oS%K0m#,gGRW+udP,<-7b.n/)<Bs7Gs=V1
%!f:=cKr#rT5%3GK%@)`+^^(CkYbkq?.Ogf[(;l<sFh87q4NJYF)\Th'l[$@'CU(E];bX6jJ>X.-J@In[*TF`NAO"ubmtJ7qd)>'A
%gOE7+&i)!rs#Ik`+#H)Q?#fH`AhYPPL7h?t$K=aJF'/EODOa1r"Csngb8dY;K-q6dGK%Tb`,%)dW[fW?C.3'3.XVP*ajYeu]^nG/
%4_RQ<'S!cfi30<*D^[N!ZD?Q4?"QMt)]#ub0'Wtb78E@LMk()DD!Y<20q7In5[7naAl[RoWbsK,IsoKd-Saj3"8UU_MC'8D)$2a2
%gM8ALW3Hm-6h\5mLp7>!qN0k+LAtV08?$Y#rqSg9\rZS;Id^kH/[,Q*[*$('VP>nO[5W7*iFE<O2jHm&I?BA?JA.,E6*BuF2?2S<
%0f;i@O6phI2kpjT.&j)+\SK(ZNf9a,^VMg0=2[sdJM;C>9_($u(iG`1T"Sm%*L/%-<E+lB1:Nr5kk!I_?OWbY.i6+ogj\$04*11$
%$'MaG$I"b4;GAe0Q!Z$1$!*87i]*$Y6u#f%I<N43-SU\t'2P-L%-n4%`(*>P1)&bcAg4&IEC*Qg0$TPkTA^.+K&=[sf'1bs)qD.G
%msj:_M,\.<MF>/+PimWST_+eq0afHD5o-JQA-hJ.4'=I_)$X2S?kq=(OYe:A0,%JLnV8XUCaFQR%RnAu`/TWKi.[YlED[[gJO;Cf
%CXJ_*PYMmH21[3HHaiH--'fS;PVpAB-(mU7HT/QM?6l[^$M'FA6S6ikCY@.HZKb;!YktWg)#P+g56WP%DEtsOQN)i1X1?!!AFnQ(
%kCA+cE#csam&o)HbtDB*gDT,<4R-(.(<ug2$m#X$L[%Z4/=&ARgR(=%L")!0Vr[b%mjT6YF4d7Uk]f6o]X.p#0]ZSY?A<%`_f*:B
%MUTM[XQ*!5bCScY?1-olhr!*QnrrVd=;\Dkop1=f0K(f-C)=aD:%nd\iJ,$5Bq]-0TJ3,WdE+Cd?']'T5hq)[PLBs."(.s3(Go9"
%)Q[p7[eIqlKUtp_U4sHl>U4b:R+8^?%BUGU^UtOH&J*.U(-28e&Z+4fC[qJr7.Hu;!J-b@Y89J=n9eC"`e+C#SCs(E/W.HjqHuKN
%'[m4Fd`hPalG9W//KC!,CkOiJ9qd1pM\i6.e%u4r;C!?Gd75qG_*G(:DRh0BZ5NYA!ZALfLDFD#c?'P!Sh+f^A_M3%O7KZF&L&?k
%3S&\9)4KPS:F'2Ih<WGKSg@SJe'#<SL"?4cAa[]1!sMYkBojo]P#P/?$d%=DGRh1M-]`NnQ1hMHCIZWVW@*;88:*Ao@k:SoQq8WK
%l_R:ta.nr7L!i@d!MegPn,pt>pFXoe^gAT%E^5H+'#fgdLN&&X=e?O]?nn_MC(i#Fl*uEOZFfQ/>oM]b-*S58/,\ie*Wm[:r4W>!
%!9[[0:tj6;6[\Ubekl8Q?$A\H56="*E1$%:Z5@kGRW4([OWXJ#QWP8E*mVk$H+e_%]4MY&Pu$k<oCsP^$*'U(_RYaB[7Gil![lN%
%LSkldJ3qd4g7Ni-52F2%n9Y-"G9)g<=uSpQDYIG'Ta`"qZL)^O:k[/^1G>:]%FiY7hmMo;]dD6'2a:Y^psdR3`;a4(^G(=jiE4C?
%lM80jZ@=Voi*Gdm`WDQ9TM^"5ntLBXaSh'hlSkY<0=+5=WuH'q6+QSiQ=<kR9LEPh8JZ"mMIiBNI_@oS'=1a$hql$Ch%ee-9V+KC
%LJ<Vdh5$d:q6Am`]r=6hk89GqGJEb;IM3O79qOUVVs`'4bDcF.T>!!c^H<=Lblg1'-^Bfo)nte;gEus(Q4"l*3ok\S"0QSO77=r!
%H+f>;E=#EG8V^ssm0W33S;ptBDN\EeG->:/!h<b`Gnl/:E0pN.8Z@O<(L7RDTjimuTH2UVH-"Qr6Z$b^cZN5U#%'+9"FLLn=d%n&
%UA/c\o:LdEiMRsskJ1;Sih>j1X'u/Lhi1_WeIcbI$bX<%[p)@[E<'-KG$=0><CeRiW-;dFg/,dfAHIs+!hl@#1b*m+We*,)[";Ea
%"F/#f%nopkXSdsVc+:M2eCNusRDd.2,J>/9`#0_d%+5[p\:=PmAY^HldlO(>0@8F/#[%GiOk3gZab_4k8ZB73D5REl^s0B;h<u9G
%(.^[dk*3h%k[cD47.=@-@^?'[n;<KcQq;+`*<A@^n+C@d@kU)T;.E,TF\7`8Nj/Mo65;"f<T.ULk5j4i7e&u)>S>[aD$hhE1*+HL
%bj_bSM`f'YRq41g*&212J.=oo\%P$>MQT]8.W;oo<H\!cS2'fb09WEO7Nm+VAPrE2cOr0:D.g'pA,g:QbI7\2."*-CbAl6t7H+cl
%Cm1af2<825;L"dGnM2*gSe+Xlh'66n(r=_MjocJ(7/HgAE\=\rp".DXf-T$@L`t<`ENt$O2K'cUAGpq^Bb5<PD/ZkcHJSc+NQ_rq
%"^=sY('[e?CM1%a-3[Aq6:F<;B.P/?i@r\F@?9-5]HCK^#9h&PnJr0U^^CO#cJ6),X\^TFpr95R-H^d9Dnlo\TFL7qj;(50^>>C<
%At9+P=_%+c3h$A?[sm0Kc878LgH]6`%04lsBQ9]:Ram#n'5s>Y[8p=3.bd-\l(tV@%U)IWCYn_d%.(C9<3-QK%PlQ3r$_*@2]UVZ
%%$0NYm;Z9XFjlu`;-cfgk6,X=Y74Qh48EVHTDt'D#?"X!Ju^71-hD&Wgjp/.Y1n4:!@.PL$bXdCq)HTJL2?SEM*l,:dj[7$K)>.,
%me^K)/^pY$-4[od_=6?$7TeYs+q95n^ak<-huhGVYS"GgNA_k=@L^;.9l"nl;%As/OIM@renJK*J<Jiqg&u$VaK7D(Ka<WO(/2A-
%A$X"W;Z0Ys^B0!on6_$X#$$JY)a:5_@4H[;^b9Z6A-@gG]RB*5P:lQuDL\sD+#<T),o@,7ip#)q,pmIDX<YSFeS%)3Y#sIZ>JPTU
%aaXoX*BoCLD:j-&4sil',=B[Y'=J\@gdNT3Do7]UERa>:XBH@7kRjNp@LEA!O^!m7^quHXE\Lb3A`o7#&MM!>OeH=-:_k&=Fm.Ck
%60f[pF&U?>b$RFSU"Bpf/DWOt"u]E2%4V?6`!K3P5_4Zi7X,gBR"WHX(!3?X(p5#$<coJG:te,T]%o.eKRi'Oan][b$>8eT<,WnX
%rQ4QB#=&%/3V*"6*"h>qnJhSGM%1/b[:6&OocP-$OLQ!<>\lKpToG6C1:Sj@+I"L:8UueVEm/*E"p#KQDM&!9YX]gl"cA&a*$1EO
%Kfsr7mCT!kEV8Frn%\\OHrY)Xc,ln/eNE1eE^*5jL/P4XAX7erV*2`'mN*@,0q&q5fq(l[VPun(GOLj+cJZ/<$<SHddu9.maD6^&
%FBBlq.8CeUgU5AG?7!)@mSRP_gq<Ig_BDQ0Y3WsNM_'22ffYV4&Gc`EOt^V[AahZg=W2nT-H<OHI=@mJ:sM]gVX-%PJs?jL8\q$g
%=m#e'1M768G=5al2bd<?'Z5U+PYoCSqPg#NbOeA5miadTI"Db0-]S^$R483GJF6'/c[eC<W$N(V)d8[r:^)uNi=OoJ4/ItnI8n\F
%_O)Icn2NNF5%Gi(">8UU3*+sucH1.;3m&s<f)-4gJ'&$:E&RLV.<\<K)MM6XoG^VC/i4:aAtU.1E*0(h"[N`:*]r6B99?[!"N5Uk
%HeDuDj59rE.>hL<Fe<00:P=h+l:VosKjGlh]`;CMef7=f@j!i,I;'IK*SCKmB$0.9rcsh2H\72XI>u_P&'pALmpWO@D#rp6<SR-W
%$_!-nj^9Ni-sM':-'jqiJ?rLq"lnC^Hh88*&J\k"X'NjL@,+VoLWNs2hs_[(!eJ>JVCiWYB&+)2L>0PJ<OMZBk_>N:<t7Q_ZmoB,
%]>#1k)8rJ0,&]k&eu5+`lKD/W/#[V)bFX?NPQ6N"2RE'jUF=(:OQPe:hTnn7@.RqV%nr>/!HJOg9(?8$m'':^oqU/GRTf<f(>g'A
%[X6_iRAu>:YIBnql/:nlWIT!"$8uQd7nq!.I'+Pm`Xh9:*#&-<-arO^C<\I_*RI&5SYZ""]@C;$3)G:X6!7#t3+VVV2n^T0?21+5
%"SA]D8Y>?*L(]&/NoJrDB18ArCuSjp"%tZ`E0/;!L,)m9Wp%[V8<eg=3#]EQJ'nYWPE&7kVm1JZDY(-j$A;,cod:E8Fqu!BqO*,V
%[7]mQXFpd_+(i"G#gZjp`?h\9>jP;YU&&>QV>DAC`@B:,-Bi\CbjHZ]Gl08+8mb:2Kh=XN\&ijRfW"iuh/iLSC'F/tj(AKU@$`7$
%DY$/nC!ZclIJ?c+/rCa\3j45tg+O9,`K=5sOi3nW6PjF#go/UVe7RYs!2-1I(PYJ"n]`*8_nLb>0pKuT*@1G$`*EbHB<uAA*gTn6
%h1@.1]jSg#'oD6K8@Pm07pP5hN++&)1i#17ic$LrE1@sH3"m."ALtbBbT3?G9k>7%g7QZ,"m6o0]Mk4l,fP?f\f3TCa8Q&G-h:<'
%h*:rgo<YUWh37X8"t\Me0W&EGj-]%ND<Bu2`qA6VZ#F_LRRt0\Sm2pD93d2V*"!Y)PCal)m5qr4P>81%D>i,<n'-^Z';>J`5ok(j
%./I@f/si$9=<h0);0!5"W0)!E%$Rgn::K&61UmRXgk1[]W3`\&&>O-[CT*/J\rl;*\@]=V?)<q_U)4p]eiCp'+h>U5r]@&g9W9W6
%W*;t2E8G(>c=n%l<f32Rdrf+jG%1ci\n?L,*`u0B)D33Nn9ap!aM*A&7E#qo:<"@.0lJ1AMM**blOWNfk#b/1pqV)6[9,'6&TtDo
%Go!^?X(;,a6\J]%/hRkc*Y_%^i12:jYe&WY<JGjJO[88mQNTE'7%ni)D/*J"N)RB/ZBTW\gTT'_&8n:XM+TdR415?NES[at+,Z5S
%0%^"JFS_WDU&&j80re-C$RdZID.L%X'JlIrW$%;0X5#)hJ!H.MPguU57T[#0A>F66!S^I3/Wb+"C-JTIm1T.F?C$1RF=g>o9D:Ai
%'],[c\)L/OXTWK>r<A)dJ?sKQ;&;OLTd]qA+*0/MaUjF+p`NljUtRLB4C+i30:`>u*i=)&5SXNK-)BI-)I*3e7>rH6b5KZ!T'gaI
%H;t\LMK;Kr>kZY&*3I;ANH>>5HWe<1!8We.E0[8u_Q>2*&Yui3>@!2'Eb>LUW+$K2"JZ<U(j?AH_oY"<@mg8>D"fOh;@0\Z),8YS
%j%NLt*g>@n1FTd)JkRN5!)bIh5)aTKU%l98!hRBs",r;T5)<@aXLt(<"N(V(R--rDqQ?[o*Z`%@X]phP-86:glJa_\"pj:gb<Fo2
%a?.R1_%uEY[`+ck@3o.'ie6-V?;=jZXC666O6TfSaP6#ph33"GO$u9-kBZ!%DoOc:NA8SU@M=eX9JU#W-2rK+%K)TTo+,"37:c`J
%NLY,HBI&q\WlI'""pAJEg<'r`$-HFB!GI>4JMk"u&Q".:4CXfRmM"0=3cgU<,eB&Md3ZecNB-]*[hu2^;%ogR!Xc8bndlF7r7#i9
%s7&C]*L.:*EPQ",?3(YNkPaLfYseWfF_MRJl#@HXQfln&?g]7>)uLK5P2P]T_-T[jWs"9;(]fr!U_8)+dq,T)OJ+Ks)trl7@VF*I
%=REYgQj):Zd-Abd6jF?\V(]-NBr7ONB/,Pc<&+;q-)ccAaIU)k*!mo*S/Y(8pJtTQ*C:N/G`Z(chfZg_9Zfo/dDj\_SqKc0-(M,3
%_H/<i<)?#D"_==S,/J=cP,iYp)VN%HeokNfMY8=*L&j$>aM^rKT:a%]btsc%r(<%^ja-lO6D.C[a3P2hLe_@fS2umS,O$l-4b)@?
%`VCX"$61Ljq"Xb0`Yq.:EAgAlK.#5JLCEeh`Ld5PM4I"(]BPKPS=.=/f!g3\4S+I>="k*.=]uA,))%=8P"B7j5Ap:`r;!=_E0XhU
%TDO8NDh!jOfAC^eIn[iEV*=nW]ATtK(qn?4f*`:Cd]sOEFjT`o`E[]r7'.sI$J?6<\d1DZ>Y\*&+#F_+nYQM1mS]_i7sQPM+p#AG
%jBOSP45QD+p-GHA!P_&]6(sX#-]qRmMTGpE6QfSoH.Z1&'Xdn0/B\Z-`&B^>3Y0mde=a=m)JFJXj`-)Rjb7X>oIN<CiKAkqjm3)t
%LXd4H)>9HJ`4S@?m4#XuN_#;l*?F@0*dq,ZE[E5e9H'QB9iM3R72"F1A1VNp5r352O.JXZ?YKX15HMc2RlDOC%^I9noOT,^Ul\9[
%$&Cnu@r!6;.1;b=>n4D"H6T?;Ga-0LS,[ko_,-2q1J*U>7Sb&63@VBh<)-6T7Zr[("hMWklr'9;j<^dY9Re!lD:o^FOj_eT-*+B>
%i=oTa;Z7Sg2J`"n"7@Obd(7?q&-)si?bSgS]:)2c&hTOYf,J:rC'T9E,U`IHn.i3RO"/@4S0Bt<0=bC4WsUV&2#?iOe!DS!KfG3<
%b<?(/,?6ASU<Ua1UG#3O9J3KtO,.$'A.oYBj@*5'/d5#TB_t$(IVd(&C.DnE0gXAWZ9=KHcfm-\bQ_`)CqM^&^]eDs[,6&cq&nt-
%BPs8X(6B8`SPU=")G7\Yo3!t8A4Z"5e>D:O3EtA_c\Y.ELFo"T0W%Rc=NH%c-Z3';H(S'=%2,']FfngN(hLbpk7UJcYp/Zb:SgsP
%M`[Pa.;>iUj*Fu[X,:Gom5Z3M>kUo::HL"0[/(U_%/V.dL7#W0;%'s9gH;pj:_#/3\"bU83IC:'2aN_6nIks7OO9ON=d'a,"8VTP
%Af:/5@.TaD3U%aS+8PaU7M7aM>mqB0B+^25q$&"G+j7ci&U5&%5=u,8aGMo*lgrmo_diquah8pSi/eL/TXD93[O.Q\[R(ZCoqMR!
%VTG4T'"accn0L>cjlX@`Y`@---u60VT5S]SksB#EV`]2`dOKYu:_>"RO-Xm(\u6'Rqq@4H'\e(?f_aaD3TObWr;6LmL4h07:M,.F
%G4T/Ii-nUoV?*tj//3s*VDVm9(2G!sFig+9[+8@9-C\h>r/fksC"6b)R(>UL]R'$5ms;9mD$0E(HZ$Wc1ej:RSGmS2D(l%rScm9B
%]*SEBdBN?gNBZ'o]A."AfL#g?Q>QFt(o$7l7Rd3jIVrU7*H8H8eG]2&3c:`28jDBLl!QUi+ubG<"6d=4VGVbI0u_\5.lel=0&&2P
%add!cZR-L%1#"^n`Zn/E#_N[UjZt#DpIhiaX34TlJ:'u:NMdgrnm?U5i%D\Fg"p8\%jnSF3lq\&2iALXL5(+3C#hQlrclTD`]PnV
%Q^Rk$`&Xu]Y)@(pjn_U?CX0t]j,-(D[@-8@iHe84!AMHVi47mL6'X&iPg=-l7P^a+fQ\>,Hmk@F59sA`HQEchKIk]aBA?nJ&1_S4
%`M$SZN:sqoZiBrbEOgM%T:>V]2H_L_IRWVHr`RGc6CFm%gI[e>K%"q1D`W\ihkQ6@,;,f>(Cd6Te3i7;],flbj1_%fKMORD0NTBY
%RA"h<)@2Osj'*m>7+QM,T;:n,ChoY1c#M`!]c\\^W(?#=EB`^@#;$@GC)H@9KY\20(=+W9cEJ?+Zt*Ph\*q\VAfT;nCaV5(&e/Je
%NbQQ;8qB^nr5Uf8"9g2s=5X+&5+t-aa#OhWQU2WD97RBe&pBeRc4jg?C_+a/9u=WRA)0qYTHT9&D&!6\%:s*X2CCcD%l0a"+7//C
%%U;XKY>Ualo)*\\8BH\!As9[BfnZ^NCAi+h.gIq\.&fYT2Ze4@NP6u;?M/+W;fe-UPb<#sIV\/`:g?0jJ8bR.CGY2'KaS++`AO^1
%1M<0ibq:#u@#W;=paN'9hJU3E""C8YS6_-"Msn/-!@c1!E.3m_9`@(blpQpYjo+:Lr"ssKk3eS/5bBV@$*oP7"+m'fb@fd)`4AmC
%k$bglDN@o1?''=4Je*$];R9kULudT[U?[Q\RCLU$$_Y*k9R5B,N.PAH*S9ckqRMMm^g\WSC,fh3PP&7@QR!0;4bs30OL>f+G;/+]
%-EldRX3?[/T%MjZpD$,*rT#-(IA+Hpot'ULG$Uk"b]K"gL2Eu^7HT^eOhnIWBC5V)3k^P.Ql)Y49]d]?r:jdJ)m;rRUA<Z^e]OQ5
%DVssk2Nn*QQK2tTap*I+S%^*LRBHUNS+^pa,TZB_/8->R.6Lpi]U>%<[/a_OAZ#&4$3f-a,<@IR>RW0*b!PY<m4qiJfS_Q_br8Wi
%:-i\33UY1'J"\DePO7m"a_%d0i^jOf=*eq\q%a&t;sU8U0J.P%&q"#GlU9Va67Q_/G/33l\a/!iQBWG2/-_HoC9YnYq8q<u.kh\^
%3>:DmLY'i"6P+etqr<er+g?iXe"J<d+k;LVES/@l"1moWFoW\JUhLA+>D;<Km?R)e9<Ug;(1Fje2c3dsH?@*l7W2"0>]q5"VHA&s
%?+ja,OZphq*/8ql[_8Zr&*V%UKOme<b"5Imp'aL*;__GJ"0d_OnJXp/lo[Z,Ds`0uTZ=+WQHY*h70S'=Z'9s+>5Np(gpiDSi"_%<
%;+bl`D8?(FW`>Vq]r8gu_+-tK\!\5)l#/NZ0_;1@kI1.YmlRAFO*qHY1n>ith>E]Z)rVq$\.sQ7c.@>d_J,H\aCo'U<8?Wj+;0A/
%/2r7Ek^2gDECf,IrC0uP]\KRVm'R(V%dC*-QC]\>'Ej0*]F5cIoroX>AQFlG[_K7>#Jc\pF#W?LXJsLf2X(4WS'ul#9tH.]:%DZ7
%Vut4[fiK_mFj0.+H[IJ^ggc)b.X+9Fmb_p4!?LBJpQJS^3_d'th5V^=k&ua-Wk6E^<Hf3#<o$?YXZCoEDY;ej!uB_K\?.g!rbsmG
%Wf(/1NG#;PK2LEf\#h]O>Oh;`B&.0K[paKLMR-`8R^?qaEH8O<>*^2\6$2Sh@G)eG_lYO/G$J/dTD*U?Sd[]21./c<[kt<5q1iCF
%!1@^'fJ`(]I[PdlCbk?B$Q>qT[V=BjEqXZp_[cH&]1-YTNb#NAA[:ZQ\N:5fD:nr2kMBaYlr)LXUi"djA_XLPM9dMR8is!@"nC9O
%]8C=U5np?r>@lKaFL_$?Q6"na,Pkl4AOhpX^:hRolk2>V[`g;7-&j]eX>>YB;p%PsOulfil!g.H_'#,ifs2k!o(]FnG/.h#4`Rc<
%O?)@ua"=nkV<K>^[d8M]9Z8)2bAPH'E3\cfbM;iq_m5cpW0(5+hu`+["I`m\^[(=23*UQI>="$U2n&n^Yj@[W59"c:e(WDA1[O74
%:N+/=,!-4F6[UWTk5"R`L>C7R_ltA[b[oP5_`3_>-C5.Q7%V>6L='6fXbF)iLZLC6I=0NtMqbO1n[OLL/3B_,mB=^=,Lh&ZHSk)N
%?tc^)ZXJX=d[]-RP%@-cGB'$%43/u8FggXegF^[`N3_dmS'B28=a$\`Gdcr]2ANtY432%'0?LN[VB4JVChFlYijTFnVB'3Xpk^BI
%NjA&Wh523X7rTD>VVPDR\7p/QSP6Z%pgh:5p"C5#-e%K7G1/&Ukj?s#Cca'">hk1BD*+]YX(;M>mT-l&G#7fgqJt5c>q0#oB@@>]
%khOuBO_G%[^P0VOVB$-g^O3P*a!C<>Q6AsajO9I#]jYg4@?H4f36m6kU>%Zo4dok>QJ80OLGI?5/JjSt7\7P2T4s$OftS^g4j1ru
%CU/=jR]UVA]cid#o3R<AW8V8_Dn),XP1&N2=o4r?48eVt*'R\!.MI2WnV/ed$;mpI)0M_gV=!(b`WUQG__1d5N!V:VWiahS@fgY-
%>6tjN!nfS9^^'oUY(JYCO@dIGmJ5_g!O<YG?o1q?1GlS<15nfUEcsT?N!X$1lh[BpQs=/,`oKDoN!\Cop[(cq<=WmW3]b7`i]=OF
%>p+PPh0`mj0nBW.5c,n;A<QO5=sf>f7O\.d"IVMe>Y8Xj$"gIYqt(KQc&A7fCgquiQnN%M<X5$HZ-7$V'?Yud_;AuU'../,ID0`-
%4NJLREY085"KtKK^pHrcOH!\7dXa/NT;%gh7%%F+\WV0$$&58LnE;gmH(;=)59A_4XVZdJiIi;_'??JNgt$6/qpR5WT^"pM^-O*-
%3=P'R1<B^AbhG0+a947'+rJ<&U1On)"(MCHn)LW4]70)OK4@S'S(jjL1OR@XeME-j7+("IN\R5D)d*Y*\I=6\9XH7O(_b'#ohC5K
%2i@J`2o\8?B7hM-rH>"$%4B/K43F:X-]AAN+n%UX;#raCm1'b=_O4+;KB!d^D8*NT"5+AY&hEn"Qr)rcG9=km?t$T(E/Y+tUr+qr
%A&8D:Xu?U_Gq<[e#s'/FB@mPW-;6]gmLBFViCZ?$EhZ5M>LU;>?G4WSRA3G.@RHRQQ"g(UkYeP(L^cP3%Psfq2W0q>9[KC@s"g#K
%eWDr8%[[RsO6`"93^PTgW?1"l+EF9Bj%M5Q!],$2S-d-E<e")6mL#s*=IT_3_@>Qan:<CCIbE@;i_6iilF,aZ1kEk8Ic*mBbrti1
%-QgBlSZGZI9HI`)1V&;NB>U3cpt^`^TpEdKD'm;k@$J60'F\WK/U4[am`tV5S#J7/nHV^[_"tZp<gI=$2Wkfm$J@U*:8Yi'q'a_J
%k1^RuY\0#\Q_m"Kf29/18C=Ba``_q*9cYfM4:*+X#-5l\!/jq3(R/bDPeP$PgCu'GWGFN"9S'P:A-uS\1^3Bgf)45E;kW&2IY+%U
%]M,aAgluZ:(Utp*302PD9n@nLoaBVU,BUno6FJO_-W>OHKhlsB>k1(m[OJFkac;g,$7o<cO*FU+"Zs0%,uE$0I(:PBQ#01P/9XZO
%A;h>;.6_(Y'Ac\oMT9^q_]5Ieks13U&m-BAg7t:B[(U[l-%P5/&#K=R]KF#)1DhXc7UX:O!8h>EnPYbVTWlYpLcJ.[[7eCPDn6_M
%#'Crp!7EDW,&u?=E'%CaV@_:qX^n<EgrR'b.=fp/I>#ZU!9Iqc"5Z_&WFOu)(-%Aq[KX/kr)&j`&B4Thf`KeTmdWDU!UcTI5FV<+
%I;leMJ1Xd5+7S##^c%g3%ETB9/>aG>Ub.,-NCWclD#s(=k_HN]!KoaV$f7+O-ZgHfD$tmT.;uJ-JT<fGh%md=N;LhC;ZQHpq2.+b
%XHkBn'XA1B5"ku.Fh?=F;ZLX'3EuQ^&$g$ZSAf@QE;*T<Vu6=MQ#B:qqV!YUD@%"^TIgT5Q2n:S#F8,N5dB_UW/\gM5bKE"`c8A%
%9AkJ[3ElQ@R^<I^PT.\?#_s][5tF54/-0RRHpO9C'?Ej1%"W]B$;ZsQ7658?[p`GAj>l&A**E>EfsV%/ib]"[Gi*LJZNL9KImTZ7
%6qYe[cU(9T4"ss7@!Cf3K-a@S<`j#'a[pmRPLPV-Iedbg6LLWrlK+=U-RN+uQ'hUfkgI0h7<R$USmHCi5'ob:qY8tdBkcJ0ch:1&
%0u#5bXPngp7[,%%G06^CiR(ggn9#4HCB0F`d&A.*'d:Q%j+HK+Y:#sLUZUi(g^&qCX)eBbcTo-(O458(m+$[P.4ugKYDr]OH%H%I
%ES15M(50olOH(g'arGVP(8"[M)Q)#V_2Ti4)0pQD$[N36!OEO5G0(5Qm7,r!C/M2E]nNP*_bJM'L-!Z"rR)Vg$?=sR"+!Ekn^S^,
%WjEp\C2TDoj%l#O]*`SWC.#hhGX\tt<+G9Uf[hEDL[/:/DG/k-!FTAN:[@Z^]5@B5hX3m"e<[7.hBgpu8>f6.B<#7lR(!mkkR.ri
%1Hfk"Zok[%#)N)Qj#W.?`=M'E^rmU!@rkTH&Da9hM"69`Ct(&T*eeR_D**;?*Hc^oD:IrEHs)gbAmCpT`@(0nFaFj=ImE-c\F63D
%Fp.-DjVj&PT(cj7IH.ti)i@!WLLTV@%ed6U\$))iTiG?+2R\.YUXe`S4/nWk_XY3(C@K0$IC_shQ0guMkW#e<Q,ASgZtMS)I&P;&
%"oE6M[BWY)c3M`gI%H!42e;mqij6B>$2S6VIR/?F/oFk`E*S@sh7+L^T.a*0N;egI61\HFSshmtD.h2SiuMNX)7b/uHLB7'M]]R\
%pYg)UdigoaBP*L7X'ZO4+ss6+B/.CZLsIf>Gs^886%"QYS6tgjnS-"j^dIYJM(aMT4=1T6LA\!C9?MP0:kUA^X\P0;NDK?uL$8as
%4a[H0q]Yk[:2tp&GZXa?:HAR>61!!eF3eaXrR'7nrq$/aWi)H&!Tpdu[>j@`X1S/%St9P$-PhiG/q/2iFn>aLKlSRhK?At2<Dr8)
%MRDZ?`=pJiL]=3T#mJ,KkB?p+G.7V!@^>emN&QiZB';I8ZUHBb&1!7p+P+TR8K0`QoHFLG8GA@^fOXS?>ZLXiqXjAM*<UVSQAu)E
%+9UOB"]c%s6@$_Z#\,,3F7RJ$AXDUrA7B%P3pC[,N`;/RMr<_Ck$>BNXpF:5ihH:4\:tI(5l,FU9AiHPqrGfpQ<[K)o0*U$LaTJX
%BL#g\+C@dckV^g5c%,m5J<Z/+TAF.OP\KC]e`0Mik-aM*O*cG-h1"dSWbNt_9_23ai6JnG;e_gP9p^Rdr7<(N[NRsd7Qq]EHoG'l
%K9Fn^\<9J+IiVe&X9(4@M!7730M(PLa9n%m_t2Ef(c5>uh[e]HH\1-PeV0#FBM4p'.uT?-Rl^7^`%>TNT;-+g<:Ii!B]XLp>kZ;%
%dW.CoO*ZE)nOhkhL#_Kj/UUI'<]uX%e^7c[g?=SQpAKXBgr20L+0X[6:uP<Sm5k#f?V\q2PW,Q>R*P%4UShf2?^6lBH%@6]llIZ+
%D(#7dih!X!VaK9)/H#R_6JFNBQl95RSQ![K"`raU=.J.I'3g&ui$$?kcu)\DeHd?q0WV[;NMg<.c-'.?YXY?j#l^+?ZdCF.r36lP
%[?JJ>SWMB((FZW&4A<gOAL0,;HR31B*n.9T5S0]JO[RkaZZK?]aQ,36b)MU0aNseS8R0]Jn(WU)E2b^#g/M25AWMX++00M;\9g/-
%(Uj'#,,i-'SaPDQ]Rk/1p2_<dCkc9VGrk._.XOEshVb<62O-J<OG02XlN"ZRQ?SL?hG9GJoB$DgZLFN9?"Uh]G-E'L,153mdIa'C
%f-)qP0?!9sobLEZfT#T<Gru;er)B:NaZf>[*(CIcWW6fS2<2@=]IAeW5#.+RUA'I;e2emRhXaZ?eolt3V!Y[ScIB5_8jn3[d7eu>
%ZB\Fia2(]\/rT5)(-A874+K2E,&@cF0%UX5l[E!l+.pIS$_BRNof(<q:"VeGDe:,14uQZP*k>HA@!D=fJ5dj8jo+N*i%rZ=@uR)r
%o"<0N'l)NO$U/PA)l8\C0=27?XQQEFe_Bf,IFW.NFt>8G]auj_&@-_#q1>Hg*)\3!XO!p>;%%l"[[09<&BmFh2T\^'PcTBf1ergl
%b?(O!H^WC^q:nDLY5gB-nCOP/`Te#3Dh6PgHKms5nl+*6+3O(C!?<Kc6eX1M/@cTt;LE`95p$dUM,KdHe>=#I7GL59EuF5e`>c08
%?kGA;Hi$R1@W!W3.n@`G3CQVTf1-4*S:+&.-<])\4Y1*Z))b072I^Uema6jX4,:l$c-IT4E:E:(Kj);)HPt$>a?2a!CM<I=D-nd9
%'oE;B>-JPW:OG$T%'bV2)cC$<@Zp.`B.i2gYMna7ct1&MRLLoFo.Uu!;`X+/fL>So&/rQ#m?PpOr34s7o*^0BH[8#PG"!1!R=3gP
%`.6Rnc^&*+1th-@e)>!['ijV[?GXnRfR>dg(sd-]^Bh7Cg(KIrfT7WUVtEc@OUSK(o<_P.c^;aU"]DNa:+'[I5&Oj85RSISp#G*!
%A?%:OL0DGk&Y2+$@jl&3J6rg2$\..A&=_'9`fGMO?[(7=5R44#&f_2QAMLL+*i.>,5:J\<jk?StpLmctG&qYE-Wn-^M2b:VL?\Fe
%e#%YJoQc`cbkq4`2Nj[uPN6b4K86[>W`teY`-TnaQ//rD$sRUMrI]np%mJX70enCbr7E*``q3#B<p6k(KV2Q\j#F8V&qKL8\e\[3
%W6Kb3D(?o_n(?#sVtX4CcT:91><#@C^g0;GlI7me5<_Z^9_ClF7CC[Zn-kX1Yeu\Ort=@g^A6R2*'+9PF.Y8fGt8s7&cGNdDAPQ.
%D0r<&J':I(%CVLH=TZtM_cV.D@/F%]G,bK@p%9ph[k,Xaf_iVb%qfoK)H;i]nK(;l('lfh!t"Wo>cN^J5c7iADC"lCQ0&TuO'M!$
%c=A$oEoeO;*q&1Q>)U\gm[AkJbt"-02:e><dqVh+Zl'bpZuMiO%WckMH4lPSVO5NTDkB-B53V.'3@EG1FfD$3lHO@Oq8Qs_r:RJX
%^\ICg=K(#Ip.<&T-%][1^A]kB^d<QEnWM%*>[fGe76IJL\dDJ<8K:O$F:>tma=+Sfc:]l*VRKNm<CLaeX\Q<R(SjKo9f]DA_JJVP
%iuK39r:!7:cBg_mqjP9+ZtfL^\#8LWPt$JXA]G@nO!r?`^N?FHaFRbKqk_&N1moB\7]ZOk=O*1[IXrdg7'L[O*#XY,[<Z69<aZ\^
%iU5>N'9mBg5F6dp<.\p:E6Nc[?0,Z#>hX>';V/")P]Ya>Tbo$0HEQek@akcBfhgPko:tOU*_h<6']j2PAb]rL"1FN-W':kGG;9!n
%BK7N*43s5)(ds=K6canW9!mAB>rHU]9Wu.^QdToX.;(6!dDM(ESE-lp#UG%WRp?KqX$9CeMl=(kcd5,YB@QA=qs/Z[ZV6nf+Y>eO
%nlT5jhJnYP![$7pETd)*_E'VKr77)2T-o"KAOb,DO)T^kZGH-9FDk23LUGS4Z`Pup]af*aqL4P[R]ghL7Qg[AWg+g92oBfMJ[<<Y
%<T6&;?E;NOU(esh=6!q>Bg[E74-4.bD-)^Z0n2-_f^$"V6KLYD;[gWN<@[6Ne,:.c'.pWZ6r3?<Xn]/VR[8q\4kQL0Xl!0&1gq"O
%qdi!9GUkB4pBS>B.a]VLDWkB#1ko8cia.0T<FYls_WV^N\:",_J$>/A!G7Q>YqVq9b/FU"Z$S<HZ=M/0>/r6r!Q4B7RXS-KOf-(n
%er"Y"4pQ`:\ua'1.'sL6Bsu*Um_Y8eaeX)[7R5\0K?.?ta_[3h3p(]6BHn<p%o[H<dI28SYB*V:bkh9d_WC858euPeCsUb@`CF\7
%PmkjKWQSRF>KXP"`sj(ERZFN-g]>-*3crh5OE6"Egb/j\d"b.=[\(1s"lM/;`GJh7qb"?e799bL`Dr\gh<%?:#?!V1W;1IuR^Z#Q
%_K3VCEsPHt0/^qieEVhOp&rX8IUJr-2CV[M9/F/,_NL^s0?O`Ohm^=a/)#g$?"77s9%/oc0)`&b05>qp\hf9e_0fYHo=T*UT2Dfj
%**KTENr*<s?2DRLg^\MKQC?lZ:5j<*S+d3cii<`8+&c-5hAfBtZL\.\">kbT(6T6Rh+[<OE]TPFdRr,6q\lfB?>Zbh];Q"gZ8<GX
%%2b8CoXF7I_30L5-GL#PEOW1eH\?Me2+][!/r">JMb6oc#,9Xo<F$lJR/;Q&k3.TLo5FYF`<j'hnOekFbE9GOl"DH4io-['kJMB]
%`D80eMCU]68#bO.[9?]O0uN`6+.!bDJXA19ra5BjR),X8;iVN>mJ:nenUe@0(;$?2!jStt2_,gDWe?SeSCOF8G\._\5Xkg'r4RgZ
%eTG/>rCcuN2!LO.[C!g"J\e-1;%G\F0nqiiKi*>haq`%,8F*h]oG3b[[4WK@FRQd],1:]6Y[X[ulKQ.fjB8ToSP7R;UOc5pbOpEQ
%QAlf>m;s?UI*C*aS1:pZ3Xl=IN4glMAJ_CM\'?tm3$S?sY>iE8^U8u*&&?(Or]uNMLh:.rfNR^@GaTKec#c2>lSP?0DjO'u,>>.2
%>I3e;:N)dJDE_^%A2<D^%bIPq!ah<Cc1nI_?>A?tRZ'iRP])auhh/N@Mj8j:_U)1L]N5?TjfY)]9LA@8'u-T0d]hSA`PRXC'p\$s
%d7q7V>lSE$;!DcKlIZ_cE>#_'f?V7u"-OFm]s188+&c)Ji>=G\k-qI6^jbZc<g$I(X(L$bQbV]eWXn6F#RM<&$CYUVM+^VkdHr9c
%7)Vd6XYTZo2(E#<Wp'TU?p;O4RgOoYFptQ3N5hf<L=T]''>7pDCdOckeVg8\\ooE*K.Gl/rDR.VmrB84+5,bLehW.l$sN"Zq6C[:
%li9\J_-%pJ%C""?$0rB,a`'F?U"5h*Y^_2:JNmT5[VN97)M\q*PQhuk`&01`p@G(`FN0EjSB+C6%jOBIcV2q5)%IjS<[)FVQV%i^
%[K&&qJ[J)\[($R@"TgkO't)C*fDZ!;@rB$T&+HFkI0P&D"3qTYEOJh%ht&7@&"**Q6Mene?K]WJ5$i\7=7U!k%`:&h,u05(8cDV3
%`"b;BmYj`HUr.DfP^[@k!u@l7(U6;J(majZ>D1LnCRjm[>H5Sg4FQBK]jKIT4uulcM[FYA\dY9>e6@1A9]_,*o^4Is1&$#@oGA#-
%8fo+;"D>d,$*3(oKd6mJK^/>iRZiNeX+]7\*FEK[_OmmhlY065e&m\(&Tp`1;j!,F<5#-OYS`Gg0A5llB_T5>T:oZZcg<lfTNU9p
%S/fpMPEPl/^dm]2YdN?KGr&WB;C;BV]ufWjBY>:d&[n9UQ1d`67G;mk*c_tkfm(QMA)d`=I-B`eIsKJ8F#W?7j+.LT6LOmC]h0!8
%=u[*B;AH7u>tn]7.Qh6p[+7q\M\Nd-bef%pZYtSbVPa:jJ6h,pc7rE`WoLK]:)14b[7k_Dn2k&]h+O$6BU'c0[IkaHE\<9CH\AXO
%KmI[7`&FG[M8iG)kko.D2TKlhof4:[JZP:fDFToXU8;FU]`!.5Y(,&?QSMV(<]dmu7D-P*qn(8i-LfNb]IiiVU7,@Fq`RAiiKsP6
%E);K^b/uKbIXq#L9K2bb^>K5MfP<r:cU,@?OU!=gZYs>4KhXuSCW1kWSPjZ@O8@.OUS':Opffjuq;j7%f"TmKC.S3ocJi"F.LbPe
%&3<MS;R+6g[IS^fZ396uo]c*=2_S1ed]#Uh6MC"Wk].:*4W.YD.$+Pl#mhXHQi<GXBE4Lf<ktr2gT]iWZ9$_YVDf:);K;'uY[+&&
%X(M[0).ZcdqKFT@F6n^A-;>e]RKI\D#j6mDX6\i-""WDHYE;`Or^$)U2EQ\Lh6MgV,M9YZ]h!bhIt;l+JeNfg\L0P-`'B5BIuSLX
%bk2=6Rk33jZp5"km59Hbmjo;W=J8/2-rJ5F)GK`9PmppSkMVcOa-a/S$_Fo975E:j?*5\:o2qf_-]UW1Y``,&e<AnOQ4p1UGe3^8
%m[<l66X(Q=n3mPb#]-*"o?7_)Gifm(#+_0/DXBX*c(0.dmr\9a$m-gCI'REP*ZHdta#HR$m">*PD'-+D=9+CZmjrOqpXk8a?RCbR
%IuIuG7B`'LhaLGi;r$),G]PR`d:qaY7\%,jgC#u\6:I:(QMQbL5/_'"miqM]H0,1+TMDh*R2uJcT"/7"NUJuNKmC6\eJaN4-T(Dt
%-'igGK4KG*_D0@IEK5<nT>WJ1YO3D%r/&ZXk.*?QE6NC@dBAcQ\/E=LpI,IQH1&+Q/G%B%c)B?A'XT!Nk5j%jAY',B?"\Gs-SLsF
%-c\,ifubgRP/EsX_)r'r3T-1D3cb#9C9u%#Ya=h+nA-ms3;.<2*6K0aksZ>ZR:$WNG+Q7[L!-1n_l?8_ck@lkF28VNF_:+Ep7*&]
%R1!U>/^?.RN/NtmbQ[G,hUSLlSs\i\1OiiY1I'gURD3,CV2Y^?cTJs@igJu]2kG<o9';W*#"^rKgigt!cY[J\o@t:AB:_31GilPd
%SS+OL6K4Er;8`&X#++r*o/KE+o/pQSBqC*'?=)M>nQ-rJnRS"-1C66]m1o6m4+,]7TD*dT"Y1RGo:=/3p^0KN)FX6B(RTqU]r:ah
%D602#>3SpL-KSGY4"tJ%'F-$VE`EjZqg,(0<RE4UE45513uH`-EVD6p),df3H0=f+mbeV%0mge2qC!'t2F1`+Q'L9DAf\,/=Zc1M
%BkVAG(E\C_`qe]:^6A84Wh3KkWB7DZ-/rD2Up<rZVR`;O/WjQVVa38K6n!fSKPG0$o<`3jZqcR7<ecg3Q!cL"0R$B@irc>meU'6s
%4#*j;3tuu,Fe'O[W@*iu8-MkM'SYNgPaKZUk.XNLChfMnT;GZ&1>,a\!mI4To8/o>:i<T8N60QN\g,@U[AcV\f1dh^>UX<#iI)qu
%Tjke@)p=Aj-eKXAKne.\PATH:(9fmk(W=Z%QDin_B[r45G=/E#oi51!$-T2HL6J`^_J3n`#LV0rn!&g6o_LDQdV%"\8hH3cXjhSP
%[\AaqCIMlH;_*0RQ<*9T=t=;$A5auf(n+WB@*sGG1Hq41U)V0]/h_'Mdtso$0:'>pQ58Bso]]cp:Q//bq]0i1/M/7$0?-T5dK7uu
%]3T_UQQFD;<fQ[M['YA.*Id!cfV"p-9+,_%_DH+4oErMnZioDu77.H%NGrX=:!/?Eda1$0)Hn"RL=Q[3Tp6Ze6S#iK2RLou]:fr]
%8NSF[8%,a%bL+U-/aRX]lAKIkV/C?9/+kO^X>CKoSX%2'f<Q5s['S1/b][$G=.39+=QcOR]aB6FZQP'jPQT^b8oP8^5npMCqY^D@
%8fqFWIqk:t#;"up91g;1c?"uCoE"Ut(sS597*W=ug4W-_#^<3"ioOU!Nd\Yp]S!_EIgMA1r[adjTUsLXGDn@+8a$h)o$.f1AEh2d
%FrCa[cj,q<U=,m&l`c&VUF@F_0>lJ)rR-%26[!'?QSArs<Z\/K&3<m:nt=d8p0?f\,RI0:c^5b"6a3m8'j4q[#'Xad^dJ6mTk1OF
%7&,WU"Jp[k.l"e0Bj`,bc"TH^(qs[(Xsjh(-*E8R0u"_n!7uBh(D2rCcBn+;:hSjHN$me>\JCUf(bV@DQsHdUYS/5llidb-m"G`V
%m"IG19E`1GS1>,Oc:IYP*Z4O()em7OJY>Loq'P0RM>B/ppll!fA]`1:E92WO1D,I;"B0ST[muYg<X8T4,_BSY&]%4EM-s6KJYXqF
%Jr.Q.]q?X&@H:AlQB__&AQm4g'G<_%r=LE?.PZ-o?TB=MjiZWL-I&&S0G1Oa6)%%,;7\"@8KrVXpthA`ksR4IAuI;C#UUcIdQ<0m
%OjQbs;BhLLhbdt'H!mA/*j-k09D.S*M'S:[SD5f6bd?`jV'AB^S-OcQ%UTio?l37Up'D82M@T1@Y<+K0^bT^g0N$m=_aSfXGY%e+
%JH9&8ngFr@<XKJ_PQljq/9F+>#$,C!H]\LZ`J3/c;&5Pk)Auo)!X#l`mc>uRd5!7:h7PD>p#R_YN0qIDOp*07l#NDtZG:57-lWO&
%:h3[ll6ElM.C&KqTm=,2"t!/2emeZ%^e+`nBCeD]"I#P`_[hPKJtY=Op7k$[H;O'I,Pp3%?E>12cFYS`-2;"1Ed:J>kahA[=N^(-
%E`Yp&8Uib%Um4*K@1I.GUORfT4oFp.Y<<lBr@-V)VnG;0:5R#;#a?MREASJ??RWJ47X,+@97/E==gTHD@*.,.U-K-gq'Oak)+b/.
%+RO*$]rq=[0O*VNa]GuB\NMAXEo$a$c8PbEQi"W1E4k+KPAd\obFc"Llj=LW'%5c;`k_n-ZMsq1ZZ#T;'d$Tpn$"8Qalt@DrI"7Y
%&FiCl3(Gbrn>V$A78cMDQaM@]7@-F>VPMWc]:Z`$Ed-dSq](Quak9k=U*ProJXtoBRGM+\9bfP$TYKq!bV<Ft1bN-pb*#FIfQ6>S
%8MB1.\_A'=PJ9k+"g^q-LmD1\#>!.;0W/]a=3_t\<:N;7UjD!/b.HF#PJu3im)^VT0'-!+'@e]tj)\E+<_I'CpfiM:*@DYdOdf\@
%>)q6PAGe;#6k^GYrfgXU[b@Gd7W.'`6UlrD>dOL%\cgRW`gGTu"ka+1=n8\+,`+^s1ZF`2`*`B4"?3,3rVh=#n.c,-PY69_=79=>
%1)hhqdCXoQVWn3t"B+en^M+,TVA-,D]F%9Sc<O]PXNkg7[@p19[^][&M?=XRf5DV!f>U:Y8O1!u/M0f4P.'!qQU=H-J1:K@IXEq"
%3OSQPrG.4B87'%@)ObiqWjr!hPOOG*On%gc*.Dj@-Jtnf"cUH>mn8"&UafR9U?A>$3R6@)GAr0,\D'Jb:[YjM-ajR+;&_L2h72%N
%5N"DfMTfFnG`:aY=WN$nY9WCDj3\8-j:)r90932V)?UU+1OG^Y?0cq6[)95'VN%8ckK.As?irr2$\-aY.DOm*>QN`?AbMs1Y"kkh
%To>ElV4g#\VcH0(Z"lUF1;]N7ZA<b$]Ormh+fEZ#fR*mj06rjm*?E-ib`d7OZAUZ-e]RqD[?gEShTG,I#MiXFi$eHpRaOa@?2@<-
%o26#[8.c3_^-$>mj5&b+2>AOn[!C0'Ed3jL/du[Q]!P\As1De/O`k[@*YJ)\m%W1j44b.t@@+8Jf57(i,EL7'qp$5#P$>2'D`U/H
%4`)3`67oX-W_`?=%?[A+^Q-<=P2_!p5:8B>M'gBb],Aq<=$#9/ZkQ6n"VtV.dNT5sK*dF#`[top,[bt3A!/T$W?ch"[>jr=;,M+q
%[oo5S\l(F5F%J?(:9NMd``T_$%:7\qc@4$.DsgD#=p[&c)YOJ$N5qnF]71*Mr\*GQH3]]6O+jdP3;r,=s.KCMIq="4RZdN4dk;Y`
%Ml#"gs)JGmKq+KiH*[Ihb*i#$iTR@EQ@`4;VcZP+^D<%*ao3(m=OPCF>)L6KK/[HCT:#6%':P9PGbskB9C2<RSO-YLUM\ADAO"+X
%:>;b3f>WN2GWNgt.E#SX]Imi6b,(34N`HXL"!t.o\jX#dZIdKDj3Y]KI_-q\1mIhi)#J?#Y:""Lpi6>,rkg<Hc;FRmF5rgq[[u[u
%7#m+-'8r+$gj0g_1[)I!H>R5=5&7is,)4Ki1FoM/j$C,eSo&[F3OW4da*2u-o%+0eH2Q9n*q6)EM&rc<p@AeJGtC>G0:@LP_KT2Z
%V/ZBbLTHi4_e_+RYU"U?^`e+"K!!6md0#&EjCNO0WiIb"#M?*82A<fgf8gU]]B,T)DI*$4=sR[k621p,pN\\4d@_d$&@X,2=S*hu
%95>N#9_]*"iQQ8s4.n$t7s+3M[DJl&=:Tk)KU>I-%^=Q-iu%-Jje81/h?alg6S<`kph=ZdC;fKD/5@C`.0aUnG?jo<d$sQO;8*^F
%1=E1VeP=>Rn+>edD$$'6P<N1*m!jO[q(AGuPja.54k3:&:4&?R0NYsj>j:biiB-:J;`eI06m`O\i/Fh7IZI-;Nq?caPA[Q4^q0"U
%i5CtD1]tQP""r5B?B?\pAN39:^"W)tgo5\q6=hO2!C7YoV!hiM`B*>5G;=&[GWE]$N)-iU,*nP@<@FICEkbNKmeAp0U:jBi^3d\Z
%)(sQN*ks&_#fcE"g33To1,C4a.N"od,(1h8j^pds%cBZSl+FFI8u-U.,:s@V(=IC^>]tq$8te=L3eEG:\fr/hj:R]VC#K@i2lYX>
%lj?hPp$.,K!5VJBgP;,m"1BW8alL!JI*^&;du3DBDY<9g;8.BcY'fu?hnLSs4mO!/*G-\h"+.hD0"apc?2"qT,ipcdRQf^9G'/0.
%Lk187L\cf1,>47biWNnl.dEhso&2Vn@2db\9tnKd);LG%kQa*)A7QqM#<6&Z\B-ZhqhS&#L3A>qN]3N=LjL,)Z\o[i$AsYLLsa,;
%D+DA0K/kYA]81h6lT.m.cZ[JnMME#jg:@436_*,r+i[5XKOr(hN9=8SF)uT>8)h]Zgei>brdLoYnY^u10oHVS-C&]XH&b>818r?>
%1]%9bHNHX1[s3N)VE]5G+RGdSQMb.,44m8jST\Ia)"k^DANk-nFOodu1pELkZi1<$\bHKS<#7)@!2!Pr$!'a(>-'QMQ]q)Md8[UJ
%j`Us&gG78BgA0@$lIA=W[VYY0RD;ltDL`Z@hL!=58Emo$r-G69D0J(R\Xq@7Q:pC0_Pr?ATu>k0fjXWVrbG]Y0GU$V*h3gP/=0E_
%%,i5ujZFq)hCafJ$J&lj."N&!Vl!Tc;?(o5ABh)T?JD#(l2s7*&PDq3^NOiNEUWW,/3ZhFDY!$kh%!O,IH4!!:-2_@C7V+hDH'%9
%DNlt_/?:)Ne*EQ_2([lIkg\Q1)"pZS*qS_/<Z3W2"K)\dN/r08Rgc.a@IQo)b%naF:!"i!7>rb=BjFKI*JJrIEB(iP2C'V;cM+OU
%R&SpMWOLna=0:s6$+;;>UNFgZZ@E*/4p,+J@l,Zc3fN%8<`+m>l4Ul8.f=S\SRIOj,p[PH$Yt%m<l*bmANp^8K<+eEeKdArEg':$
%RE!$7dR=.MjCj"*7L$rB;>t%iKir6eZDF7cOSq.@FM';APW,9CoZcsIE_MHi]/E6^_AF#h;a+INW[ENIga45mXlkMt-S1J\[Mo@k
%;Cf-7SRV2U;j^@7a^`D0D;%qpGr@\8TKVF_fWh'HkQ<IYM2YILEa;i$Ve>Wjm*o-["mR6I<ud.E=^uIjm`('6G`W)e79.n@)&jCJ
%'>o7RUX6t.HX#*IG_ILI#C(qH7g.*Hc=/i"FTkA>;k2"l`'bnj&"a+6QLXhK2*ZPC`S(3AnN>+Y#d4W\;6Z]35AP)q>eWQLIQ.5Z
%[Rlrck<6&hd(K"201:.-I4CUq\YJK0Ye`BOBrmZS=V%r[42/=&ilS-#]kui+%.7eXN1:YF[gePK?FlM2N.I>KL2rc;`X%d&:o8B>
%%[:QZNGu>E""O&SS.mj/Tq@\.?uWRGQFD3AE_b,:3X(Q>.B$>fFeU^Rjh[J2Qni!f*N?cE)?]?c<7;O"eAWG-ht1FuTJlrbR[+'B
%@WIun>n`NFU,&6ZU/"g3U4>[\#0huCG8?Z[:)"V",*\P2K\!7!CD2`R3;.,!*F9(t.&7fNg31Z:W_<>1Et:m6<ph3dn;V.hSe-$0
%b_Jf(8r!a1R^;+4B?f9MJ'8q_.&@tjg%)\t]);Am,Q[%["''ntGUWPKf3#68p,O_1gZBLL9SYs*g67q`3AVKZemp2.MB$W<_G1HD
%Z*#'(Z_')m$DimnInVd0i7J2j*=CG.MO:8.a_*>nN9O/hCH8N]&[_K(ktk9IQO-l)P6F,+r+c@nk[QJJ!mBh)),BEm-`j5moH:"u
%V0C)H;!IY@%[B5aGreo>Od=Fh;WBXtZDL*/Se%+_USWXBe90"lU/DL\cROgGcr*20)Do\PU,]NsnuDM!&N3hS5qcSK,*UjljE^sI
%4<Fn6^DYMKF=8[tiHr$M^SB=X3Y^L&*:8n!23*h&RLTKPo^eI\"ZWbs,TTLc#TBe5%Y`W_Mq'\ZFEAu=mJ0So#1LN@^_D_1SfYL=
%&iPhn."O_b5gl?$N9O.V:?bS&X<b.ET^M&@nObrU6`$.<Q49+nZ$SN2C6"n6Ti0'V:PVOogasNrogM[@:oW3\V*h*9Fn/*F#hdgp
%`_9R]/lE09)_-i`IN9A.=XhsJm6C0GcAV"8(&l2X5XBE/AY]D2Rb`WFEumqS5J[5$/DQifPXM]QMlaZPjq5KoDp7d*1WVIdp,:YB
%SfurP[6D8%4N2($L4K1e0U:+*pCe-OdP(R`VhilR_lWh^=Hpeupjf9aB`bp2k*MitI!`rK4bg,A1F"sioVaKb[4Kja64s)sNa,:n
%%+`&8='d*tA'I5E]dDe4f@cS4GCBsa=$V&t6rjT6)G$*rr;QeSJuEZ4=]Y]>$.h\ueQ=hM:e(<(.QX#@"Y<7W1@+4VT2X60f$t%G
%o^5j`^k,pj=]])R`e7u1iJVGqk(JgU:bSKVCmuGUUO4EFYgrIEd]DU`=]])Tk)F"Z%Ie7fYHB5t.22.</hu>f@a<M\9$5Zj8Sn<X
%4Q/n/\f!Ba$Ld1R-r7>k8Gd'B$!5QBV!g(t9)>9D=t?+#$jG5jon9@NHU]-A_EHjML.@K"OG'[>GXPuW<Q7qReHp$.'qQ-1S=4DN
%JOFAdo;tJ]#\]fJKu)/3O_qH2%h<l1KBU3dmn7`p45%;jc4hW,E2%`*%BBT>hRl`k;A625H1f^PE/!Iknr]>Z-%h+><_^(*<^HpZ
%I:kVL!/L/^B51DPZ1PKJ;I,?"QgJ&Vd4S_@+np@7N2&uC9BKH<Q#$(a^(m<>;JA&SJMH%3_j53EW6pp^Hn/To6tdoPiKZHXH8OSQ
%`W:.e1u[`q`%-WV9XmEi\b2@'Y0b1XA9lG0)V`f4R;dl=d5_AuE&Fh,aB?C1N,St7XtY_m.@G*3N@^d-&jI_'SV;_j*'aN^StMHh
%"dk;l9t-Qn7p&,Td]EZ+a!,=a:9^U"iJ(DFICG2O+"f^Q>G3oHWi/g;+W[\tS1Ph0e][D;mq4pN]g^SuAmoOMhJ3o"7+a;L*AsNA
%&NgY<8'M[bD.?(1\1-\><-D6X1-6u'M&g`U8nA(4a>?h='HS<I?XuZ$SF[uQ;0DrPro+i0[k([fT'Rl48>5%1ZD2#gWia"@Tg?l"
%o4?dpc:F9W$.mj-o8^dFdA,jK(gD'-e:XU]\^7)OKkm7OW!@d[JlA4aet_^9K$]$7FHc?qM%Xe:U"CoIBhfO6V+45oS7fZAntQ3B
%YlkG!C=]IlUAUr',<neL:)>XA;!=ap)>s[(r2>:3+#OY`$(eHlUSNqqccc,]ZNTg?#u^!`nacIu>l(D*S@^slg7jb.&>[\EW<A(l
%Uui](g'L[K/5He.e-V6[Q/Kl>3ZI`2S-W"?.`T+0M53'6b6<ML.1A4&$6scD>HDU#54ptmdGG_6ltOW`)[*/<GsRNQ;%f["=:%m@
%(58$=+=.j0/.#4)-Yn'BBG4M*&K\<&#[\')F$N*_:^Bs4KchrsM^/a`Q3^A*/j#6"Kch\B#:HnlUuoqM$S=*/A-Bmq9,LRBY*:I0
%l@WoY@'""lYAFKc1/`i@VGF"8Os),-NJjl?O(WA\6gDV2OS\>=D[`V%Cps1[.%BV-;3/N4=^rI!k;l;4NCEYHk;k_Eg@(9l0H7?$
%SEhjrHR*YQ-H[10$ANRAVJ(k^U_g$5TIWkpNU&96S0jfm!0!ubFj:%<eCGqriIRO3k>V[OSf?upLD(o_+iB0%E5G4i_"04N<g;kL
%/0aMX3WPa[V<V+YI!eXP!SNgdDNSm8U,h\p!&`+_,Kkd?LBhVb(fDC$lZX%e&?5g:7sVXN0TPE^@O-HPiH;o6bn'IE+7H/O60GhF
%W=BFY.tTMsArf!Yc?+<8F[s<&Hds3_LOcrk*Ir-uMApc:U6^Z!!-n!@U-&Zg+nDcuLC)?E5(l$'^eo\iBF]PT@EE3n-WZf#E5LZl
%UuqFYX\Nmr:^nM>OdRqsa0`2/Gt`SC<iBT,B*1,;8<C'P/7l]\<Nj@bLmK;#M'f#:kUdK;'?NP[+^lZW!-9p/qk-a/8IcV4,_lMd
%j<+tj1>tQ?^cOtuM'N>=IAlH[a^HNB-]O=]3J(\[F9L49qbf)tjWk()N/Qg"8IdL_6<R8i%d9SH@4I;VpQ4Ke0#")WV6Cr:Lq3@`
%$HW=q,Roq_LY6_t2d9rV;n/@Y!9aoP0orW`+H1&k](Yb1]MjhX)QS_SE1j!^jJhYo9SPoda`*?@afq9H*+T]&;:>g]J?Kk9"9\t2
%!PrtWJci5bJrnn5CX"j8;_SmJ,f'N)<t-_g-TGM1MqXQ@E'Tof5]h__HEN?DOPAX82Nm$L6$Kg0T_l\.Gb9(Tn<H[qP,RPShDAB<
%F-;jP/F!K2P@A-$:Scm%aQ79*Q;ioD=O_qbN'J/$K&(uprTu/jT4%pMcC938'4#on)mI]E%rf7>Xi:;ONYafqndY#D7=E$bs3=kC
%6#"hiApjo=Q2jFDWm[in`t@W<EqEU>8rtmpM8]EBgYeDF%34J,j&90^^L]Om$n!)RmM[6!j\b%AK!N6*p)]0riOZ2M?tG6S.%`6f
%pQ6AlNgWVpTYiLjZ>?!kB&I?=a.ep*__IA5m$Ke@o:i=fnS+#Oc+Nki0p@Jod4qtK\TtgKc4sU%0a$T#pM"]m4>6*0T\NpZM=$a*
%]6/g6C:_o_`cTG+l`\F91UkT>.)/Eabdn8c/p_l<f&@FaX1;dWp,pVEFisbh;1'.3H==-S[C**h!&'eJlBYS,[F=?*!>_tWmZdh,
%Bt:9G#2#T/W-W#MN*[BQmuOQX$0!jc;gs8]PmK:[1->'Pk`nG#IZV#%Q.[bs(/>aWP$_C\kk7!kd?mM]ShI3%$$C"/V:*S0b$ZpI
%,aNRecR",gEQXd_SMCMshNtQC^VS#@F/%ZY_17p.GLS(J&na$]A_+i+lu^D.;r:#Q^+;U+;^V0Q3+_[DKi@,%l'+2:Fijtjc`B!3
%,u0osPQ?.dm%^I4F:JfeC/dfT73sj9aoIIo<,p(%1_4Y62Pi59Z;X42XMg7ep)t+hUDQWS-`kcE,6KV0ET30bAkN%K*B@"6*2aIo
%UK7m3b_VMR\o+-&1VW&7U7#Q9e0f<ZVYOa4/:92prVk%hZgPTr41orYE322WVgUXSYf9MEfN[Z*`(AeA=uY7;[("U\s"s*p_0E8Y
%]p7MlTWCJls(@_=cZt_XE&+LqniHaMkF5G*Kmnd:"n)u!`!alaed:*X7P=FLD?1Y!`8g"2\jO$Ebq80g*fSU'H=$9%',\ur<WAM0
%4oEGaWHa6,[;*jYUTp*2A8A:Q/C;tbdt>Q[_=\k)Dd+a)6Trtk>nCG<e=fn`I5'e6HgTJiQ):L>lc!KYprW^FqdtmuFtZ%+@Os^4
%i+"/lLkgBu!YXj.`_T]pc`U*dl<\iR/TA\^c\p*N%P^'t5.fNG;cejG4]jlYHA$CV@mIr]/qm5Yk,&od?/;n]HE'+Ikjb@!LVFqh
%9]eojrf3kmZR]U0HK!Q-_`aKD^jEH$a4&7`+B$GsI(]="bOuH#Kt!C&*dG[;iU(beN`G'*[6gTH.;pjfR%<b9@#8_QK%au\[29:$
%S168hKi'L/KXZM#ol_g'T.m+NEQb;MUse"5jXME'0SXe1/8\!tj"#b-B:$o:.Cf"nDTjB>S`""*I.lHU"1FtZGWq\cA<j\7[BWp+
%;Un(g(Y*#BdQuZUU>[=1*Q4N@hd$KW`*<Q;6raJ3?b)2ZC,l<!4:kErEF2jD:arE[3]Ts8K=Fo`9HhP$DV9=6`2GGI40%I?"qdur
%Pt[AMi\$o>V_X'Ab/uMma<3YXlV*$A,.cdr$`OQo7S46,7Hd/Z!NY@L;$QQA=/V4h`^TSqs!M@h+3[0YZ4,_!;[2cF<<a%;<Z0S:
%f92#2\I9Zg+S64E#'$!B*N6Ci^8YHEB&?QdeM+bFKUfCR!]$'P&5SZKM#3&8As,H-_'8<T:Ld\/hL_T*=;+"(b`nDBk?SLm(+YpE
%%V=9HK9\cZGh&9)ISCuJWHhNNP_PX!;W)6fn\4Y@<kSh`mQ2.<TFTtqc_>21Yu0DCLN:oub?31Y9X&I4^HZ,V6/6YkA#]q]TQq;>
%[[Yk@\`!S'\DpEj;2/Tm)ajoCD%c!Al6'R&q'e;f+Cab,1:ZTlmW)G(c,SF`Z-9+:9NHJA>m:m(<Y($GH!E&N<<j+S(Ar4<+Q=W_
%[m,<;'mdSn#;Js%SobP8lqKNsJ1%C1WX`L0e>@jH%glHZP<mDkg1:hH>tbUPKHkk@UL$/fOSJMalA3tk866RL'gu3cGXnbVU/Ps0
%#,qs(/<TiK<C$cM6,ZSc7/)DPXf<MdU.[pY<C+R/1PTf`KBk$\6G!XMf'u$MTZSAYCZ521*CR\Z9U.o^SDPTOW=7c]M;q/3ERXU2
%>m1g:N!r]Pgdu=O.Yu`>U0rrIS;#rP/qS=5Y(:hJ6:&X:&rT7]a[.GISg4lp@]<VVD,'=/s(OB]ZfZ15No7PJou0N&;pkL7+E*c-
%kb?XkkIY=F,rWu9L!R-gq1Bt(S^oo!=A(Nt1Rr3OT<Qg-(F[_gA^"2dh--h(%[\G1)V`;:"r0R"Sc]AN1a]`j42]UM2:$i-nuYC6
%2q#ER]sHks-7bj:an)EYPA6jF$B<GfQ:daD-_cKYQ9=&a,2BFP2:d7@p9,6tY*V9.S`3Sm9:e@M(/+.[k8@$K'd&h2r9s-[[DYdg
%L0=(PhCeFB,ufH!(c@?,>Hueq4a%74[?fiXC#bX;.=U'j"7MUO;Xlla>H2ps[Lt*^VcRbBnJnaF:HoJr/>(i\.d5/g\+ujXEnRhZ
%3JIU[%Mh1I\;C&2]%49^Dcj^E'4SZH%&\F7$1;-g>bAo=Lh.[M6r[2KQWIg@8kR28Fn05>cQ;qo4q1,ik?8B6Nk,]>$BWm7#AC.3
%nE%rAKZekeL\(FrF:-(U,:h[kI#RpJHbU)O:R?>\o@DF25>V'!bfY_>+5hl*6Jr<.':0_]+`\.VbJ;r`@QN)'*@88EV(%Dq\t<?;
%ld@*10SKFtT*%h6@:=`goAUu9_uo]M$X?,cC+!\n<478APtmGVYPZf+Jm%Z/9Mso;!.G>rE\<KZ/m,>8gLL0fPUdHMq"9UBGDPbp
%(0,%>S$+at;tQFTHngIC*6,`Xi+M5W]1.GXknj2bOkNsYj?(nr9Td(5fYq*13DN5"6t*4Q+J,&J*j24JYIP_;<\/:I,R)ZoEm\l`
%ZaKH%$H[???8=Q.<2+QFpibe)l@KCtW-K?_JFt$&;)&+s2J*LR]aBfB+Dp9Zi8M:TkJZlCp&"W^qjk3[Xg\7V44uGU@U7`VNNGB[
%HsIG+hp'rkJ1!qO1685J6CMY3g$^.%8\u:7o9%/tQWbehFj`EQB,OfB]gu24ojLaFWN0/L(,#NJn>t)!`)H)n6\*D)Xe[&X-;F,F
%XM-Eunda<Lb3ol9R42.n572/YW@h*<`.M-$@$(OCTc\BsCX8:&lr8t(I<_CS2S8Um)#nq0gc;\0D"*_H,KmM_)d1LdNg)T\&"b5g
%B]lmN&$[eb@Clm<LXLWr^tea9DV+"MNlK*5mER`rnmBgoGl/\m*ka_goP\^&pqGS]g^bK"pR)5`<pH:a]/5>;J.gC/P%fLC0^Xur
%gTEV2\h5OU2_1tP9;VmT4T?JE[('bkD=D(>JQ'*%oX)8/n:`-U(7:_GHR.&A:A(t?R2-VG:pu0OHd%Q]1:k?o3;De%H"kGC%8!E#
%<ps/c/X[AnA#?;cBn7&KDC(_EKm>TD)b)s[NIeJ.`[mfai8@F&6ERo4PA;bD(8&=9c@dRp8qTn83BX!9qI>V/,RLk6*"(.6-(u*f
%m-A=WW7<%H\ESWI,_O%5^*V8M=<uD1?qDc2>@pdgIHqgUs4T8DFl75dPN/<p&C9l#"&)2%MkY)0ib@=jBfl+RHO;$DULn;00*uS]
%n04VC=NVqRPZkmiYhE#jV)qn&pTURFl4@GlfW[)nlE(GP9KG@J8Xue4?SnK&[#Lq5N&kB,8:*a)<@:/T6lIF(.nHVm92;TGnJqe5
%/Z2W==Hla7Kd[rUV4T'3p4[cem/\jrl6'\6-3[:^"`g5_Ut!O+>tglUd'aDeegluL>5?$-nHD^fQ.CngT:Sq2%3JS9,c+Q<-NYqf
%q2k\uq.6-q/*Q&cmX=V-HAppD9:)(b3Fn^[/#27dTi25,JrL$\/KL<Bb0p'>-ue9s.S7%"%Bd@QIEWc,Yo*AA".#`dI<H=Sff$-a
%]_"apPpT*qZ+]@&Q@5VAIG;+-p=e%dN[r,P2JAPtbsj#q90s8q&t-D(O9G?i\1:0<daS$.G]d6(ZNjAp'&\&aMO&o@?mBq/b@OdP
%Ps$>uE)PAQ&L^a-$!gGl"A;5HY'bOV]G-cDSQ]BlP4ZUR-0]q)-0YS+A4<-:\YnW;#7@##cU\[n10JM[n[)pqV^)U__aVjAM=sV3
%;C*gnfVU`+&sB'>i[LI\,i'N!%!&).iSfJ_\ZB9d[Efk$7'9@te88%n]KaD;<ZCOe,f"Ur56<DJ==Ua00kk#IKNpVc$#lef/f@4^
%-!bA49S'%9/'gd"3*!0G\,P/]Cn'N3#tCP;V^)RP=lEA$Op"Dr#2=VJ=LFZp([TgF7t^^FfBHrF".$;>C$DQJ@@Q*#qQ\_1X#E#P
%<VgUX<0kO)"tmK4ZQ#T"OtOFHaA`td&])^_9TnqU(c.Jr,f-5CLa4=\0M>)#cq$jQE4<b2I1X`9P*i'67"U%=-HYTJY[gt-2AtXc
%#]#@j\'b[m$>H>0(BYT.BOlDln]:<b"CB;)OLuk'TU)+fNlC1+?BTDM:jaR,-!77K63\5W&fWqf8Oh,s/s`Uu+oTnJ0hJ$aMC82&
%.h<B'"O.q8Q#5S!YE>:GJisG)Qm+c3Sstu'DRi>r7:e/48p*$^H#lVRdYYa!@+Osc#ISIrA118R1\'6G=`r;DoVjH<Rr4^$oo?/.
%kgK)lG_SVbjX*Qoo^HVO7;l=\nJ0<0TsJ4o[V=c$s1H=cXb!spYitL:cM\&E-[a"9Qs'G0c0,)P48ZQQrc4P+dgu!M+1M9Ki/lpX
%h#DZgpUPbqV3^oKJFd7XW(j'kquF>K)dm]49TH6?Vgko%hHE`ZknHNS[m'<:B;,YcSkVq>Xd(tLo5ZiL^g<SDR2d0Mj9ZVg[MS(h
%C`1MM=pd-SIXmV1gB!clRp^5,OqgMk+B!brPYL)*&h($e'a4FFVQhuBMCm^*D1JssLgCEa82+W;+0Vhg9stHPj6:Wl]Z*lae?'N'
%n"o'DZmaI=n?]>tD"oneUXUFCh+TO(lr*b3mq5W$k))3o*MLidB+h8Ipoc?C"Aj6/g?C6A$gb`"q-Z=Ygs:^m>=5qGrXSeMeo<NP
%7/AeP`JFo/d=33`di*]aiUl=N%E70P%R&(G7=8%.5U'#4luo3`>=GBFp_8kHq5(j//S,L:F9,Z/jcL<o3@g[G)m+CXb>CGqD%sYG
%k+4>>Y<0"of()U4E#Vld5,.@J4F+a=<C<)Ifi7>")66gS9Pu+a"HBbH,b\d.5!7b-8)2@K6:>MM+8HS>AZ>Hk0Ci6f6WXM*M6+k6
%C^a7Q9(o^T5Nfl?4?hId>`T5,!Q]Mh[,<6Kc$l8V<7u+0jb_Nll)OSd3'e`Q]iDjkWo40TiTG1Lf+_&b5%aYRr#uW?dSiuT_OCkQ
%Mi"lM!Wl-E6=GEH9<%a5E8H2#qam<7p?\44'4#5@Pb-&l5F,>iGa62W_3#c4>pLgjDN-bCb#+)j]Y1>3%$SqDfS;'h#?t4i-]Ihn
%Y2\o=3$Stf(221E-YX7J:?5tM1TU')U#C1@D+tq;KC.CkNV*q!%TE_VqE?Htnr+H7pbc26pK;-`&!/%r,(?0il;>.\\n+ldL=]rK
%TO@KZE`(Y^Q[1Jl-seql8;?"q5`o']dc2l=Q87<0V!O/Ae&?)8M-&^)^*q3Pa/*(nO/*/[a$@kM*[0B#\j)_hOGn6(bKmh8]jF3@
%RjYO73-]FPVA]X4*7IqA3kOZ5<,A^mCAjY[p+]$n>LiIioq61/;D3uWI\I+aag26DL*.S>].3%hEtrUOM/jNIMn\tX;5CeElbnZ)
%8#F-<,mh0;U>NU/M1eNW/i'u[2r_HaCq,1:T,\b[PmL174]\iPZ\.i&3DUO<-n>*=;gQkrf3qjq0ZcPcT+_u8X^:9j^"Cd[l6'j^
%p\E[cm@V,+dKmeKi7l*MCX/TWAj-Zr7$Wp"qm#I4,0U%nMjP;k0JFU.h>"k8KY.'omkTfNRoasQ\"Ud:ALfp+H58TIF]JE'_30X%
%[p8RI.cV_^!LR;4EuF4.,&?L\RA,BDAakA\,Ob%Vfp/n%VNLne@=CWXrR`ceV>*Z2?u&a\H\>7&FkpXZZL-2EK#\;RO3d>Xed#^/
%9C9Qul\#(fEZ`!,;gUSZRR0AEeN94(K>B<K0'6`(X"Tr/N$O3M\2?.)8C6u$6-,<f%e>4^o4ol2^j\GAdWu'1;Qq9Fhp?A.%P8Cb
%,S*?+0*?\m-b>eifRJcAgC"lC&82bsh.mj\;(mN/m^=(D9qQsQL^V]l!;b@o3/K5[D17iWp>[[qT'XVBaFlP?<k&'fW0M]t`!C/&
%L]X8;Yegf#3N'u\)0D91[S_mPL=VWl)d'7WYWR9H)8DGtGmk0dOM7cOCX[+_2CXfe#8%AS9'#A'@\657)2eAPl8%"3pqWWS'+?>K
%>CW4I$ordo6i@C\infrcH,^"R(KpU+@id-c3=K^T?7JWr@(o%'3g@X?J24nMkLa:U!94^)eR`i1#Xp[4h&l,c_s$h"/F=mRANQRe
%icoVjH+G(4#OO"Vcf3OcQF0@lhmm>DDE0k*<CFY#f@rk8*U+:*&%!?m';E"t(kT0=*cBWf[$d=WQ7cbB7Md?S5g,r0na)tg(kD?=
%ZHU[C`#E5d(G(0\;([Z.%s<P#PZ@h;Fg:JufX$*jkVe[.+IMJs$r&ObT@5GQe3>CL'<28X,D*H"@Ho#fIdBr5..;u2;)"nH_/jX^
%2s,3lKoP=$7>&URi2K=5_c#1L%>/gLI>:c#m?hF-BHJl;>?p>smp@D6g"Q%GqNYM;lV+V?eZa8DVb:_lJAkN,m<VQBg9^pWlci6r
%+[[pn"nV;$+pE#%Z-q4Op.MWG&8Z3GUKP@K>O0(P_W!kGmWKZ]\1(Jmbb`Rld[cF![ooqOXC=QSjK)j:q-8c>NHTCf`#)+oKdqMD
%_7r4mL1&+N/9+b1$C;JE+G)TmB55g@mu63=5u*LCH*l;B;hEghNTS`SR@km(Lh1:(Y;'5h\lJ>A#6R#bc$rHAfOqqX7&p\don?.]
%!e?9HpM&uI)T<5Y,lmp`_4:H`1k;/Z_(kgISTj<rk69#WD2[$^S<`R-`FmOQmKcu!VS]Au`EW;XHI9Y.\$#`TV/[_;_$\=n!8Y?S
%#RM=_QBtM"!;f[i(%kf/rdO&%"n%@HZPgbgKC"*%i5Xi0)oQtSB(uIE2u3FNhYQmBQfF"Q%u+Vfqq[f"pD#j*q")f"0,@cW9nd*E
%T*ep@=E=2n;=+B7!+_=E\Q8I7,lL4;b$r)NAQK9#dR5K;E=KgS@j(1;Z6).hoN_E#@4FtK#dZOOH[J2MW$;/J:N[cTG;S,!M(\a[
%`iC,hp^/74EIEI^%G;m<]es5#Yh684]khcI&R4'@6)Ipl\<FbNGRHHSB#oGg.9H>fiG6De)#Y)+EYr$0omYTg)iVU22+f6?0^B]4
%Z?t^/(0cZ9of3.N'=WSQDi(3e+US&6:PGjg+,:+4BOZk[$#H4AEb__=+X'j4;1@d3Z`!\1kG<#=YYb^'>uDAQJXI:,'Lc:LQqXVh
%p.db7g1FTE]:LS`opYU35W@"R:g$["WbU]+.q/\+ZfIqIXejNR(NX`G;NbRO%oAn_OS$j`^,>Mc=%>(o(SkP1"\HoN"!%U.P+uJ>
%+NF\&^Hrn!o"%A"'uo0;;K`R];D5bu/Q5LPVB!qd/<=07o5*jMVFtm)7*Vh_)tHlZHAY:kOI*TD`W35eU'Zke"jo'/1i#c?d@<O]
%FS;DtMcGS.UVAIA+g>lUY(9Z!nU6c2/A/j]?_kY]K\KQfJjdiD`9J7p5>UeHr4+:!^9MHgHa`ER54(A2I_)T$+?9GDQQTU8o4BX5
%6**#BkqmK%WdRiJo$Xc<M[CDJU@)t&CZj+h6N?,rUBlX2ob(dA\dermrP7E.F.Ls6ah@Z9#p.0.QWlNH!R#Q52fcVc:0uQ.rT=TW
%%L<aY\b)<ha&0&JJ^SA]3&T9[T&qQ$`O'SS`+FNs]4kruM#<\R,hQb(7J/onc;9B@YhN=\7^Mg6]Qp*\YA%bt7bI?M;ha9$:.EaQ
%?*C,r9KL2o.?Xe_`T6+4fl\k;aDAkmb`5Ro`pDk&YiV]=:?KG^hU':1<.(o53>a_kSsNX/GW"\_6QPPI9]VPQ2]\KUZN=rKISqSM
%HHTg8;/t3GX4;;pr+Ul1E[HEm.-2]01/T6GouHPAh5*VklOR%>G,93;WGb#nab`YEVnaq]6tPS,2:CUbdA&>=P2/RHc,DaSf>e$\
%"_*f>g1<6$Z^$Wa/oBBr^'ef._?!gJ(Ua];'>YS'?VM7ObRFoVclM=P_k2?um;4boIE94NFCEOSDGt@6Q]>2B"iXg?\S]#3N(Hq)
%Z*=aq8]8jX'ki#JY!QThDG-As%.DE961^]L@qN:IcOMN(B*TFUZPT^>d-r;.&=WX#$A4e2bl)/URf]_hc[`P-Xo$H*1G)<Yr+A84
%ZSVV!0T,(6I@Dt/o1Cu0M)8N'!jq)SWu"DdLA.bV/WNJiWd+pHN[I`pScL&d/\G_H?%CM>B7cNOXaABc=\].Sj?40$nN:`2`5F[<
%eIAMGQZ2,UTX!G13Y`I=B&.b+_O.AWE:Kpk?8=?!MaIFL]CYB>c$:Y'dpZJs"W\R`P<7*$,#k2o9307KLE9VY1\>=d0pHuI>tY&u
%o:5pRH5=VH<YO<CI:k;PS;M'qZPVc<ZNC[bfrJ,f_VmS'_;[P?+Yi4&?b6)-C=%_(X<p-0qp+84l[7C0T;tfZSK3+q^9ci%_lrW_
%h08RE`HP>rH/3m]JsFt7c$(M=#PZJg-65Ld6&!bf%9b@O4;0^@#'$7!AEP9ml6U]uK_%m,XO%rK>1PHh33?1W"5)]C?V?sJ8[7\F
%"30C8)C!Q8LWqTk-Kh3M>=[[7dg7kjF"AV=jr0Rg/b+,[VtePDR/>1CFo<-6flJ'Bbja9)SggtgCJW`EY$t'K[1/KCb%ssN';BmZ
%3qJ[raHf0t5Dq"0%Hnea;YGdG?\G>_(k-tMOohW8G&-cU+:RjFbnure(M#"p$pW0(R/?:VP5KDnhMnu7k`orSp+g>LcPc<L/c7T$
%]`TcD?+Z=W#J:q.Z5KuOGtN8(93[VfTQY@[T/2n6CI81Cc33.`Lim9XCnp)!TbkMs_on;mJeh2f_pjS!iIaCbq5$;'*)=sd^_!a$
%q[R8"7_6^fYUD.Alon8b:&'SaK<f/0]Z9KG!:Jc9Cc+KX[,tKb!QtR(03uXs5/%tqXX&a)/'7e]H=`$HEVeTbK8ss%+i?tGH!o4B
%dn(2:;O?O3>:S.RAiRW-FTT9:^/WSG_ARdm]W6tRJW3RoP`an#;<-OeGam#,4_U>KCK`@;:,lAQTJ`]H1oWN8G/Q#Gl+cl=Q]Q>A
%+f1CS.PM5'BlSbf?tWRo<@-($o2:j1@_Pebe:,l3Ue=_-dSc@hZrEU#/ldL??^>f5')L8Q4d/O(&."_c,[IF#D-F*R<!a`9VT%sr
%<B5Xp\l@Y[A*;798n`S%a"`o1_!Y(iV$\dm+Y[3%d.":NF/]3ATmG3T="<]UAincfd[OS(0s=R7=dAK)a@auL`IfZU4;s^oYu2l-
%01e=NrpT?],fNK,L1@&pkb3VM+^\([NM7ip*klp!!h!^W0HEed$g.PWWlAMpYuIP1cV)g99X.R943(7l4DE.PdId_te`VKd-W)*>
%?-6V@[T(AmjFYIL9%"4IT"7f+"3CFe\kjCYf;XG#ALaC^8u61q+r0E3?DB9Hf%2<t?FUj)k3qa6\je8tVT!N3Wh39:pRQZ'Ie+gB
%.i'buSm:aO%'VB*q,6srjBGsfGe!Zt^a6iO>_*&b,"3:(&Mu-p(SR-j1k!R\R?eINJdtJ2@S:CY%d>iY4ES[GbC88QgYUG<J2L95
%6%=abHcD?]`*`@^_Dp'\4gUaL"[8_EBshne1ju9i>de74UHub8W[6EIS6#PLQDj#,@u4A$GiPVNn,7FQ's<T`q9&i]+'P#bn;HX@
%I#KmZL?,[jl#0Xne326D:q#N/X+n%Y,2_nRTG?H>m)g%haOoT)b3%g5!U9-Zc@N>n9TB/J3AHQE0/^/.q#=<<*h^`G*\g8!h(Ou"
%5Ku"Bh;n"*D,J!PE^4;p/%.!D6Ge<4-VqMiq0\X0lD9^,+Q>`a>o1i_k2@jA7MG,7CDA=f_XML;lYp*$qMG6b0lA7#"i3l/)89'!
%&U7b_Tu)Nj@9=UP5OX956@F:q(6mLtQ^Xq%m4[Si5HWdRr_>jWAFE/C@]PHs-[-2G\*#(R^M,iX@q^tW44?9/W%?->_*]ZGGpj(q
%[(#^lK4a>H-OhXlSEDVocLGJ#dTO.\2U0..RZuA-[L:^Tb#M$P;R+eT-;f532Ytd1]_snYh\&ZrD"*6?7)ZH+MYU_NO+"oEm*Y$Y
%3mg*B/(HGRo[U.erELP+p2fE^b/,uOMs9<q#od#%3f#C=V?#*Va7($"SZ,piZl@KgKun$,jZai)E6Ho5r;hOgFZ]p7o%,C/PlpSY
%nsA6+H9XSkp^d7<&"L[7$o^*ck'GFIZ\c//MRbNdZH?+T@6s/3*m&.qZ0+4^K!95')D5YYKgJ`Z/s!l?p8g)Y\,+>?\5'*jHPufp
%jkM!gT2/p?i=842jXr$2ns<l-h][!1Jff2FN])M32ah@NpsJ"i`_u:N_^YA#_A]DhP:D@"#!_O=h)5[ji)L.jK,XZt9+]99glf_!
%#_(RM,Mi"38FYXl&Wh)"6/&Xd(<,1<R9c17>tLk0MgaB)AH/Rka*ia2K1A.D,h"N_WR6b3gRZM'UE=^&ch6MBS^Lh-q>mZRLs,#&
%NUT#r1Q?h`X23IIUiYfWr,IL*'Z2$.(;nQ=r\uWe56PR<PAq(S;'XEF#FOJ2%"%aO=AX<$r.-Jl[([CV^f9eVZhVQC;7"^6)`k^*
%XH-H'V^msh7Dg2a$oF^srP3[1A-?]?"+qaV.iS@G0h+A_SAH7YUOInqo](T^qLOd7q,J@3^aKTATKD!b9R/PDi!2G'*M@Lgq-8WZ
%8XXoZ"[DSPV;TB#1\bt,)Z1-tlm)%]!37*F%"817+X71UJ-EnXUE?sUbEJRW2CRM".'5s'A@g54f^fpa.J=o:7_;#S+#8R1V`")I
%lt4bUV(Q-Z=-%blfZdu'm@_r4fjqrr&*B]p=X*"oOUmjA2"a!#+g[-RdD3fUQQ#WY0a9hUFSiP_`uXO=7,0r`@-@Z(Om=+I@-E'O
%\%Y3.9-WdF59NTum[cs;T4iCCIC\tFg%?DXO/4HXI52WEj\@4s\XD/MV$bu5W<S5Y?GC<$GG\,D;3I+22^QJJ*hj(aJM]#aQdGAE
%fVu%H%o=L&I)9&-$Q+`=>'^n?*TZ4&S"&tD2:8jEb5q5,GrgEBiQ5?HmfV'\cLR6i=%]9ghBIA7lO[]Mq=Xrhc]$jphpJ46itakp
%G_sG+g-MK]$lXOu06+k#Iuf[-kN)n4[i?"D58?Y^iit>DS49A\c?nX`+d_e,3EWIic3Nr?\aE]t?p%;Mb5%^%1uAt3o8Wmq5%4X&
%YGk>YDobr*9gU<W4t,g56KPk(Lk]tHhCQWlm+rjshWoS=`>>)g=g'50T=CC+$69%aV/k.FH?e8FS0pcUk6mlR5?B*'N>\![?ll.t
%abeVC#;MomhKZBl2E7\+d[lCAOif,d6/JG93ADG"]2U!;NFI)tE,d)b*VJhkj90YT'qn%@N$T\2#qM,O:\&1t'0.e/$<J8]3G$QV
%b>]Z5L5.S@BU;48fu&F!61a\@dD%X79P&6Fd=q1gSkRFU7I^Y]En2bQ,F$>R6_lqF3Uroi$n"q5AUr2,WDlW#-.n;GjfDODmuY\K
%Tc=YZV%2?Dn*[XEDj:ZWgBK`;aj[(8;,O<_(eZXn';om-(m`"H&h595S#e16/Y*`XS/HK"kIn3s6E-Kj4N*_fS9QK,N&m5&L-t(E
%7&ZXMer!gHRi%F^hE`;U<)0g,D]DO67"5?W;Jk?<"ogPZ3U7DO[nc#f[\pH!jT(">j?^.@jcn`B_mGr_l4k58cK#,jiPWUp"M>rL
%,#$:>e,l3lPfYB,51X6@H%M=)M-F<&H>b^Uh5QOIS7mus`lk3LiT-!NN'=_Qf>^i!bG8[T/AZ$fIaAfN^$ho049WC)><rYZ4W*;K
%TqR)El%=7"L1Be.2;A_T[%acR'7e%0?'3O=GRD3mq?GlB&8%9;cs#K^US(G43%3[4^TV1rUji6J,"L%bTf]UY]#WKQR-UXC(ohNj
%e.54_[_MIt2$-aaDe]P+rrC7%Dq3fBGY4C0g7er!:m2=?fKgg%FpJ.s#6Rp4;UgpEl[Fs$X6X_ifWRs;n>3:GF@]t684J1&?*%_g
%CFTT0:+EaS'k;_G-qV(UBYT(YL-eARB=:ZhO7kYCCVLc=EOOaF7@J;p4bJ(.`jbY/:1kY]qr('bLJ9\b9g,=d^cU+>2W-=_U&b?[
%54s!"^CEkY1=[ShE9l$7Y.pc_CRrs`j`4;YAfM&":;1>%`"88e&f^I;^#bp.EXq*[_%I'5WRX<)J&^=p'XM!`@4Y)RiM]FQJ2f%[
%95\JIrp#<NIOR_l3.0d*:'B/3Y19ad`_m@,_^UCg_A^@XG7)KC"EEt"_*9k7!pr9[W5`'-(Ku+LN,4j2`+_r4DE9Q?Nf0_@,CoZA
%/ht?OmXr&41dec#`Y`TJ;\1n*CsL#<JS93tLG5_G4g]61R<>B`NuWQhKs-QrZ"Ool84$%Yp)7qC;^8p0EbhR$D?[_^mgKTd(5g.P
%l\o!a.?IbH`6ga=;%p"_"1e(1?I4N5fK7Xd\M`X=H6a;/pd73-$Zn'pU6/\gMd-gQj9imO.jMTT2dOEAaVAVHKI)c9'4W:H_^Uaq
%_A^P@:\%%oI]4%'c0t+`h#*]aaiuE#,.Y8Sgt^27m%N3\`)@PrXTp"S6b0ac4X-=b6]1!fJ`F#j4M^kgOiLolIK5E'1,!4,-]dD!
%\W/8$dG-e"hr*Hu@%l@`00c2m;`GS4Un;<[(Kc?X1n7d0X(Bq@4_/Y`PK%ZZ,[,FP(Jks>%-I]c\aSK^_(ILHDHfX.k/,)^Y/&6h
%P]3cj9Gik)mK#&0S'Vkm4\uIHVIt-!2nr&ojlRBR:i?7t&*;r^8>4hgC*(LANU)_^g^biuS%Hm3\[cK=Pab0/$K^CN_Zamf8!_/8
%o,-9'k/H:oZ.qIAdgGtYN5*>P)r`LI_l6`3OfbeKasO0S[+^Dkb^:-i3Mb-1PA5Xp,+/3Y&sc(r),@!]'38!_Yj_cEW>:l!OsO!X
%@/J==Ufr%@B#3_^fhq)lEG>M-at>-@[O+KUf8Z?IN9&IihJm4mQk>d.1IeC7=u<j`]b@<Pm`>*D;Jk7N&(61uB@bNhof)9u>#n%S
%i;d]`)26k2OD<OHPLD_:8[TF2m+GF\55:"IX#o.sB:+oeH+.d*9]@"+U.Z9@hIAL6,OLA?$Ah[8&l7D5pNY[))ac$]q6La2p1u!P
%C=>7gVps]t&Zep&/7,?c"1''*G9fAqV)>95G,*R0[,a1jV&"%:C<ENX3s^1.W]`)BC,;An[2Cl/XZWODUr:uo<:n,1`S41kd)rH/
%='"m4g%=`>qRTE*0g+^G!,`r*+dPr?bT:lZ).4b27ne(1kS<0.d@I8=U;dD^7Hi#F`b!G;B+?cZ=oac`s!-lJU[oPa:b']1Vg:dc
%mqB:"&,CjMd!2tY(16%ISU&%,e63K31Yiqb#"K$p^'>]*G,7it,'9q3d#nFHZC`:%".8)X]G,,'O[:Pcf7s4q(hP*VPMmcK,Bl[u
%0?DG[$^gB+O/r!\I/+B/pn2a/WN_/a\<jY?r6SR*YdCSm0+)8A6M*]l;8>L&7%J*29>%23-XP:/.u=R7kW(%ElG6M\e]rG;Gh"Xl
%-)B%0T')NsDM^c$B!OBLWf8QSV7`am$p&9=,DJM@c6h6:ETmn*?mA-4$0=#(Cb(gG%1YuY%B?,\C/\<#<!B"f)JN&H$S-8,`-iq#
%,U.OXZm]<,Grgp#-#3.\bgkMZ/G(BX+\[;,.nV9B11mDb-t"Y=l)^fs,:cAoL?qH\63d[Jp]m1fW!ka<$<V,.b)2>l%MjT$U85j;
%G6Bl>d-ER_@PM-8l]H;/Y\NTK?93^Nk,]uYp?*Vc>*LGYdK?AR-rH;,IBKrU'-f(Y_hnD8[d$pRd@sB<Bi2ZN*meUu;Vck#%-Q\B
%Fc[Z9_.(<2S/0J\<TpZE7](a#(R73=nY/dG]VlKE?Beh`[1jQ]l7\*WV!p:K[&EPi]H2sTK4teB/t0\"l(Eq^AI4V<-*ob2;9s;/
%,\E:J=Z@1M)C5J74P2u[6<T!<<`G;l3"hSUeg[idMsusW+o<?8i7mpEWCmM@k=3Q%>4FUBNfqLR<i>`(?QH0-W"UC9l:^#a,=d"s
%_7uN1YQSU66AfH*Ql64PGSkP.K3##B0N:,QI1hSs8]@i'a757U'_]7*/mXGA2@X[uTsQ=t9GS.kdWnC]g80KI>J/u:F`HuiU%,kR
%=4YGOODl%Il76""%#=M.b,7<Z,jBpmX5U8r@lPjPq>;MAoFVN?1^A(3<+@p"?4SuY`c?SUq'_<cTM6ns2]BkjP'tD%k[k*_s2\ne
%/4W\*))p&IN`6`D%%0^=7uH3NS]+]kQBUJQ.D[\e=N\q=@+^<)lNM[Ce&<405JTed*O%D/#iJ,R_M2S\0H0Efa#t@Q;19SUX8std
%/u83)C9\`og4#D^>Y2<uc<83M9CQrtrg`,S:fso)RH6(Gn0\^d5>O75q$m`UL\Q)CX&B%r9*4&f*7B/.pWq*qhL]R,/AU+08VNN)
%W;$f0&5.8'J1FjqZC8d`=h8?]ATV>0Z#T*;UY9L&<NKH9^`g0="a5IAn-)BD:Vdh68uZ$)5>P/PA\XN<*&clNq(C;FCPnWT^l*d\
%Y\jTte08Zf+h]RL'`>7D41qref'a+d/3SCk9fQ_,!"8b?@O7iR%\9c-m+3&5[:dUjjp5.:1e()%>cm7#7Z5n1%QrsG_3DfPhAcbQ
%L4Ebs$7JK<Dk?Mf-st!6N1#-sm6C@+"ZcAfIEQ9eSohs^J]%#DW0ZsgkD"@u$8::W>0Bj[/D"7lbj`aIqtlo\S]nS"E^5LWXW@^J
%H<)_F=sWa_d9&RcpoIPUW[mpb%@[s+mP(GZS<cU?#,sk(^J8%f+dO4ScE&SOgl``6Al/ftZ&A'Mld28NKdJfoCr7_KTO\)mT=]4#
%6A96FplQfn9S"!J?ZSPNRf%W0pXOCIVARbpd\(tHfC*.51Sp@?fQ6%Q6=4P4PNq$m=8#PsfS<J\CAlSLcBpQr^/e9CMS=h1]Am_D
%c1tl/Nl.&Q"C-B%]Z8V_GFYncaQ=d?!b]Tm:)>_!j+&(JAXt/-RGPt8P>@fEUWSqS6J5Z$dY6"&8HS$m$&Ki4=j*5%F&t``^oe^8
%BMi_/P-[/*?nPbdShN%+/n)=i9?_kA,<\l@ojZNAIZ,0N#tlh+$n%@Z#qJZC+)sPW8VgXdUW/<5ZC?Me0!#7;Yk=4XOS\"iB3/Vf
%n^8.pg3H>l(ul.iYNMWE8XU4D?:'TIR1^l:VF6.P;^0+qdKf)[2HnS5:rCMjZuYZm3coX%mHF;`1n-To,,IL.e'fA3Wbd=UF*?Uh
%G])oePJE;3ie$IS^uW%)U4MZME$I(,M`ciFb0*@Y&KODtK@2"F"i&iRe9L"UfS(ROW/!-YSsE1gO+Q4`OoQCO#:2rlU)K358s00T
%(oAQM!cU\_.7lk19'K.q8XpVh&fFFiM%`o+DLRb4,k=SSP!jbK-V<CfFHT%0O[PARNTVRDeAfdr8=bkk&ujKQ+d"k<8HsG[,_e].
%1<u!&6d+9qGn_S97@uT4Pa<`W=<j@j2+%b8$jj_+*a\2%=fF$e4I\Jg,g\-"SiQ0%G9plu)%t(cLaZME+R):p$jkT<(hZj+K_.)q
%GZ#f?s*ZXJKGH9[9tkHJ-*&sZ,lI*8$Uk,!TtRTKM%_+*,/]6`EPb&+a:E<_7"2&PPK9rr4Gi]q:6WcdO_>B<l's,`S(N!!\Mk-s
%,'TRK,]X,O:EkjR'J%>DL'q0'?I"bU,;J^6nt7k36lt)sKmbVo?O`STDifBV#u67^fa-:nfQX(MZ91&#NY:=a;14NA'3iVp!?70/
%;/RsN#rkL\8<BT5T)XfP;^fZmN'1^=r#@nfH@K22Jj]SN8mq<!aE%%g3j^HpDnG2W(j3UPj$S*B)XbhDO1E,acn3s/X:T!X&F=o#
%0Onj-YU.9Ne(4ounE52mgrmqs._"o;%%?.>of6cCBDhh.AC*"([UdbWQTV#5&(9)rAYQGY7e7FG\b#]V)\;keZNJKKM=SJIU/FP9
%i$>j4,iNLReQ^>OhADB9Ot=m5+qm"C\pAU(AQ^'!Q"51^U<ER%p/<s,;/R1P*dY%C?e@]dpQtlle5(qD6(ZeS'KZRMG(60Jr]3MD
%fFmJEI/H`S0AXB+76m;0Z\CGt:C7DsF%$MRc]+\)F+K\OSCu9.MfX'3XMDTrr]EC9F/6Ih&pRRFLdB-bP'W=iL?sPPlu7N>D61MG
%Pf0=4ci_jT@GMA&Z*@2uWVUoFbU:EPVB#cZ8kHgFa`(Cf,ar6lHCMGrfU]21@q\rpF2OtDTSkn/g:%U$\7+7=Cp+GFDV1ArXU/fs
%.>o.Y0_'nN!$j\WWqlSo57Q*.q377G+"#i#CbL'sIo/V$73"W4,YJ(#[W/P-&^n/.9S3erU!aNE+L4t[?`LDV[<_YQaklAR\f6Q]
%e74C)a>M2B_%+_GF=F$mCbGk@6I5/,A'"_=0$#nUIlt8GMAA:HFX>)3*D-<%nqrZ0#I[h^YD=&)/>dGlB#;kEMaEI4G3lk^m\4<k
%"5A4I)V/I1S>%^#JgsliNT(Lu@266<0Dg%#0WY!^EeF8qb>$j_YTqfQoYYju'0R;,H(sN#*K3S39,s<K%$'T*!aVEb6[fH[.%)`_
%2O9ENZYGXBL_1Em[S^Md[ZIm/@p6+X6WR.b`;6WKfd(ekM;\+9(@l+i47igDGFKbhnq8V8%""sQ9k]+=TsN]g4(si)DC,GeZf-?^
%aIku.&AbYQ:,tR^7u-^Z$(":Tmpk_55p/I;@.?O`Cd,Q"W-b=`(^M4W3kD4aZ-\&dmEU1:kDGIVs-i8\D0J(j\uX@3<gY68?%gYi
%K[ZU-0N7N@obtokN;ELA,X9-i%.T'LB$DZE'*#O?JR'W[?/4&mI(grB<U,t;&eR,c[MW6`*EliUg=PeB+8r1^'.#pjZ6`VHUdM[?
%QbgTe&J[cLOujY^EXEc%8!]]0g-2Jr<Z`NgnJ?QLV\sHFU[WQ)\g0'n_o\LA-%^5'^rah"Ec3b?dpKD[Rstu=XkZ(0S"F@PNP=3D
%AK&fcU"jH&:#nsQosOU-8-"cWs'X1Cl%<;,DiIcmXM_49@+<&6H@<e2a<STZ?@TgaY6Ph777sc(dn?Kq35$C&c*4\FoY<M31$."O
%=A.aPh,OG7)IE74q#"+-;79\:Tl!MQ4^)blT!^tZ*fR6ZA_0/fR\?\?m!<co?48TaRF-(<+h6WbhRj?5q;8Q?WE80Aq?L4V1tdOe
%5?lW08EBUU-Q;pc1RI2bI#Q"Raj2[*p%!:(,Tf2oM=V+erla6E:@*g)k4f3Mc?]V3-)Q>#G&"!+]0:^g@b76S7!=!kEd)Oe*`Pq,
%[CfG:=n-$Uc4$TP022Ll6EZYhaV[4`oeL:G4&p;aYSm[AKRn;U,hHZgOm=f>jEc)Jj=6!:-nQ/sOmD,r,I9q8H1I4l^Y)fih+?Lo
%>I1Z+qlqn(3%r*%VYc-U,f=n=rk,_DbWQc)O-Ma(+K`I)nR=\uA(Z:fpUr1X-MCQ-%t^W0bAcMt7GF-iH.ZP1QGY#b<>i_#g'>2;
%#F*j$5kC//;-T/Q<%R!c$l,*A`(OI"7oEd%"W=Mb>XM_WTnC5ENWj^*p9sX=L0PACj*?l\kB_Mp/8[PAcl%/3a>6a:@mutd@=p'c
%8?q.(e.ii+o.rQZ5@:+U_BjJ=b,Hu7/+4C],UYRT]fX.l^;Iu6N19_Ra-+*".<_f7lR5-)Xg;=9pK3S[#b0s&q2gfKKjh6hDCim[
%QcOt/q.QU,P2hg;9nl.0H_F_JM'pkbj==1"a=a#4QaI^Z4"7hI,Tl]NCe:3qR@[(BJ]3eBi4L<_fU(YD-/FmJ==0%SGuD-qQK/p[
%1fDN346bL_]\r7.bOquqdP6IX\tdWUb4Vm8D_mP]hh(25QQqd]>FK6"OSC=:KQ;JINTKm8q^?C'E(6$rh[->g+0_):hhlHs4j!@[
%n4Y.e,cpcKlRg_t;"j\7[WRk.#4fY%f+`4fVC9b@0_:33I2Pd%Gr*>;*R0d3h;S[LLKGX)ba`pq`VLY"8a!)1a$14&>8>g2+30rU
%kP),>gZ:Lh&-&Y';kf%sJbIYjTAG1"cFI=UB=,a2iM@u[b<>b2V+[s%(]Wcge?:KR?mCL>Qgr)Zi_T'k'e#Uk,bm#3G4M90cC,NU
%')1r!M^k._j^1N3>]kBEPfN1S@^oSi%]4C?JP-+cmF%H0Z.-sHFrn?p#sLQFF0rSRVD[$I3WF+?oI=ET/3'%Xgbf+R6*0JI;=+[W
%.o]b9rt8-2GW#M!YS*NO,tql,V(JjA@ott2*9,"%^7g['\OP)mrJma:bT*b`NlJ+?\+g<.r6#b>XUicfHp[EXf8N\u'N55V.dNOQ
%\WREbBpEK521EdQbVb%AT!%E'"JdSIHtX3*@01%mErm]VC7/p4^r5hC*k@<3cQW'eo_'FBkI]lj(e*rEo79"F'YEL>_:N2KKI;di
%<&`&BA8g?_%k+m2SS@%H%ec057,Q@uDk=3$Ri?EjS/Wi[."fBr'29+W75rM?;>ZXUiJ&-*rAI:Kml&KZjXrRZ:,gK(MeX]r3tn's
%o8Yl`?dZM?`>u[fC#e!&j[?Uuii@77?X<[M,O[ot8\EA"h6'nF5Y'mfeJW_AXE4tbjNt9\D91d.@0Kfu*\;"?b<dRQBI2D"QdN0(
%4=ukV"9&;,H&m<"6Xr^B2$t^\8(/J^";QAPj40/oI"g$9GJ^Z4mA#K0/p%ViUmS^>!?R@R/di\GG-#1R_lI*f4VkfIknbU+'edgp
%dB_3Z91,J4.p[bu8r($=d#4*Q%PNnV%X_NpLZ!N@%Mf2lk$<T1)0O7VC]4c,B%Q4Z?cKmAU/BTpZI```q[OgG`:jkUfr1ROJjqi'
%c"GPf6Cd'H+;)\`QZPQK,h^n#)X+jGh?O`ia(O3a//E<#+8LOB8uN*9%T&2di%9.XOZNT`Yl/f8l3%T\[E4]8l`_r="V'F$3,9o=
%3Os&V+pL@Qg@6MC/58B/M$/gffZ_bU/tc-^O9NSPo4@d8)mL8HB)&G#c;hlLQ`rEZBZOpYOR%J/F)%T#,_#!]'AS[?o(rNT1ePSf
%#W1,,G>6c%lYc\o3G)Nm-[+RP+qVDaISYkQ_es2-H\LpVQQF'J%E)lf21<t25#H=mrV"&>_H1m(0<c.9'eDB)KW)I\b!/jo\igI3
%SXPmc:6L_RM'%n#XJ:NJ+OD.r6X*B7Plm)@i$lm!Y!P4po2oVLh"p31WDpje[l/Y44*t"/RAWhfkH`-qgjnT$7<Zm2#nG0]/&1`.
%aa5M'ddI]k4j0YXTgdXclhRGd0/fF3a0Fo""9brcG"Nn6pG0!N_C38E$B;o5a@jdZS[7YNX*.7.</A%"D>bKSPeQ_%(Wl$F_`V3u
%YEFV.:VAdK&dHM]6R#$AO77%V;@IT[o<+)5dh%hphPgKBn$S[L>(4j_-M::$$#ct$-K3M$8\N?;.hA@]Xao@+lSY_/fWn.5QF8>Y
%!ak!uhA%6upiq[.bLRtVj>*R/Of;!Dhp?R@m?[%J@BJfeb'a<0$aoT)fY:CP_&$2=IS'IIX*#o`-a@s>WoG@=A<"MIV'aZSnGZ`s
%An_US(KdN:`,u%T?F_AKS51j'f:Xb*)FOs^)/AA\$39"'E(U<\TT[`8/mV^cBMVlooti:pe(81nk@.Jg0JMbs"M-[E9j!qunie3/
%V2HY6S;B4HCju0c_Rcfodc_k!Bli9TqL!:X[d0gZ4'='#.aM6EW5=(9buCDMWLL[?T8;"A%&_V[CX]F.Mbo.lol]'e#M=9G#5d.`
%I9oS(DEICEeo?(V4c>O'9q-^!"O`Q?)_GJ:==OXE$.FD@:U.bo"SBoP]&u=.CtE`u\0@WontcL"I3$Fr#$*5Hc6Qb#0LkCl6Q##]
%+7leqVCZr5Q56RNq/9ni5s76KZDA;j^<K<ZoF(8,klZr^knabXY<[^XKp"$iY=(:0B1iX!41_7]bEmubUY(KV77p$eN[3"'$.FLV
%d(kfqMmtK5bFUC>*P!TW-mW!\F)tUs9:2$MOePpC0FcZ_4i7o0AS>AIhY"?\QaT*U\b+@Mn>F,\Bj_"n-ZY\\OA1h'$S'`+HoLd\
%b/p=0Vc@>`81PZ^6spNb14`f:U]MW6Z;fcBSK\gDG^W3gf$?I=mFi]G;>tLB9&9BWZ@m+^,m(h^$r7"TX^.M(%!]"=,toW28]>PZ
%iST(UFa`Y,*BeMd/Ir]f1C(J)@]oi6?\EB+jgs:Lc"Dmk3@ujP3$H_+op5*:f=)eYi#6$%YqCQP%JjM4S%qWE(ODCF^fOJA^1B42
%i:C.+W*i]&4^*RhAn+dbQWtnh)HhW#Y9-lB!?Z9V!P`#6".&-%i2`*>mrVp18_Oq!A@C,QY,:SHhciEha0C!`i7Oo"PDY(MZ3QML
%Bu&'S5c7,]1gj]oZfm]E3]2gH%JYGu%JYJ,Ua&sUZDKjNn"Z(9<3B_\N\"CMrBA)$R>4=/k.V9O87&CLT_k6"a#]TV47[n&h]XX(
%YY:X=L90,MCB?4`!s[P4/LjnEdX`RI!H42f8ZoQSp2h!'P<<7KLc^ds5TA5aMmBggqQEC7;G3U7?r8+;npglO8Tq#e/%i_=/c+W$
%.V.SVC\#>)&,:Z"&,6=Oal%E,jT-GV'm[U8qcb-2nXYsNI'cH*!?[;6H,)op>9\%SN^s;urFUo%8,$1>m4f4t&NGghb6'q_QEf_9
%;&BF`^tG+(93WmL/Hd2!We8j^Bu#64]gH*tYgBha=)V5$hU?uYNZb=^'F5KH,=r!'%3RJ]4:PENW$<^)^q*T$,=Bn0"\V;%/.G]h
%f>XsV@)9"kI%/lV:fcV94CGtLQU/ds<\3No?E:gqcN?Aha9-n-YR?Hr=W[)&:6>d/]Y<J.+.m8(^dj;N,4O!)Q3_jpZ6]Por=On%
%8(UlfnBo5;^c4eNq!sJs_^-lD0M;O4`o9bJ=,^>-"$X_J>%-<HnQ1>j$BQXUH\NaT!]71`^Oi$\$oFNf5VrPL@TlDCn2#%_)WmZ)
%!<^%(T[=pp!Z2(o/[ZB3]-jn7!L$-F/u;XeZ@E+"q4C1[52aKa(AOU[=7Un'"\SQ<Ma"'S[YNrFbBHG?+h]R0\Bm@rgltJ7:>g*t
%s6R3NW6kq^3ZguhmFhf_6#G#?l-_oM".![&?2bj7/]jte"mCil.4L)h#8ZU<#9<$B0A$cl4%PF0hCDB__KrBA$TR\I`Pit'^I[PJ
%/OpNL2YCBjOJF36oj5!Gq8dFsU-2eg-lJ61MCQR/;Jr)+h@"!lVB`Zu0Aq7ISg!`QT1(4G.MT@D@%7.<fC&lJ<]_#iJ>E6uKTq#+
%f'2b=Jk!&ZUid!`NG9p#kM[KQ]`R*H5=E4eYY$[SaS3D&Qg[qAN^q^cPoat/e;s+cmUK%sanGk+WC/=C/_\+,c>iYd^fd[\CG/tm
%!jF5O169_$5OX%sQVn:C9N^QS(?oJ/h[=]!LajZLJ\k23VYpmDq;)2`S_dGKIYC/'pB?JE=Lp_!2Gcc&0fHoAdQ-[gDB@4@oj7ID
%lZA><>D8(^6gDNbmleB<KO%rhX7s>9;=@NONjPBh=G4di]N<HVhj%J4Yf*u>Q`^WD$&1qY^kJQq&au!>#R@+EmIN";nQp(<i$:Y%
%=%<iM[>=PY9B@a/l@l%8+mQam,p&Hk\u?LO9jCR7+)PHiOOtPIhCB9'T(+u3%GFZ*hW-\(*@g?f0?hsn^\*"k@K.hdPc#](\E(DS
%s8U4@s7,RX_a"1MpuB-bDu]V,s4]d<e*m>9TE"._rk&38s6p!U5Q-Aps8)corSRVFQO!;Ps7p%%j59m'J,@jtoDe[a^]!agrQ"s/
%YQ)r+s7k4GoUl-SJ,S"!qY1$eq9pGcn_a?F?iKA@rjTZBnR)9Vs8;lu_2nADJ,,F\pHSTes85[m59]2&HN~>
%AI9_PrivateDataEnd
